using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;
using System.Collections.Generic;
using CSSPModels;
using CSSPServices;
using Microsoft.EntityFrameworkCore.Metadata;
using System.Reflection;
using CSSPEnums;
using System.Security.Principal;
using System.Globalization;
using CSSPServices.Resources;
using CSSPModels.Resources;
using CSSPEnums.Resources;

namespace CSSPServices.Tests
{
    [TestClass]
    public partial class CSSPModelsResServiceTest : TestHelper
    {
        #region Variables
        #endregion Variables

        #region Properties
        //private CSSPModelsResService cSSPModelsResService { get; set; }
        #endregion Properties

        #region Constructors
        public CSSPModelsResServiceTest() : base()
        {
            //cSSPModelsResService = new CSSPModelsResService(LanguageRequest, dbTestDB, ContactID);
        }
        #endregion Constructors

        #region Functions public
        #endregion Functions public

        #region Functions private
        private CSSPModelsRes GetFilledRandomCSSPModelsRes(string OmitPropName)
        {
            CSSPModelsRes cSSPModelsRes = new CSSPModelsRes();

            //Error: property [ResourceManager] and type [CSSPModelsRes] is  not implemented
            //Error: property [Culture] and type [CSSPModelsRes] is  not implemented
            if (OmitPropName != "_IsRequired") cSSPModelsRes._IsRequired = GetRandomString("", 20);
            if (OmitPropName != "Address") cSSPModelsRes.Address = GetRandomString("", 20);
            if (OmitPropName != "AddressAddressID") cSSPModelsRes.AddressAddressID = GetRandomString("", 20);
            if (OmitPropName != "AddressAddressTVItemID") cSSPModelsRes.AddressAddressTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AddressAddressTVText") cSSPModelsRes.AddressAddressTVText = GetRandomString("", 20);
            if (OmitPropName != "AddressAddressType") cSSPModelsRes.AddressAddressType = GetRandomString("", 20);
            if (OmitPropName != "AddressAddressTypeText") cSSPModelsRes.AddressAddressTypeText = GetRandomString("", 20);
            if (OmitPropName != "AddressCountryTVItemID") cSSPModelsRes.AddressCountryTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AddressCountryTVText") cSSPModelsRes.AddressCountryTVText = GetRandomString("", 20);
            if (OmitPropName != "AddressGoogleAddressText") cSSPModelsRes.AddressGoogleAddressText = GetRandomString("", 20);
            if (OmitPropName != "AddressHasErrors") cSSPModelsRes.AddressHasErrors = GetRandomString("", 20);
            if (OmitPropName != "AddressLastUpdateContactTVItemID") cSSPModelsRes.AddressLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AddressLastUpdateContactTVText") cSSPModelsRes.AddressLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "AddressLastUpdateDate_UTC") cSSPModelsRes.AddressLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "AddressMunicipalityTVItemID") cSSPModelsRes.AddressMunicipalityTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AddressMunicipalityTVText") cSSPModelsRes.AddressMunicipalityTVText = GetRandomString("", 20);
            if (OmitPropName != "AddressParentTVItemID") cSSPModelsRes.AddressParentTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AddressPostalCode") cSSPModelsRes.AddressPostalCode = GetRandomString("", 20);
            if (OmitPropName != "AddressProvinceTVItemID") cSSPModelsRes.AddressProvinceTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AddressProvinceTVText") cSSPModelsRes.AddressProvinceTVText = GetRandomString("", 20);
            if (OmitPropName != "AddressStreetName") cSSPModelsRes.AddressStreetName = GetRandomString("", 20);
            if (OmitPropName != "AddressStreetNumber") cSSPModelsRes.AddressStreetNumber = GetRandomString("", 20);
            if (OmitPropName != "AddressStreetType") cSSPModelsRes.AddressStreetType = GetRandomString("", 20);
            if (OmitPropName != "AddressStreetTypeText") cSSPModelsRes.AddressStreetTypeText = GetRandomString("", 20);
            if (OmitPropName != "AppErrLog") cSSPModelsRes.AppErrLog = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogAppErrLogID") cSSPModelsRes.AppErrLogAppErrLogID = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogDateTime_UTC") cSSPModelsRes.AppErrLogDateTime_UTC = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogHasErrors") cSSPModelsRes.AppErrLogHasErrors = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogLastUpdateContactTVItemID") cSSPModelsRes.AppErrLogLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogLastUpdateContactTVText") cSSPModelsRes.AppErrLogLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogLastUpdateDate_UTC") cSSPModelsRes.AppErrLogLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogLineNumber") cSSPModelsRes.AppErrLogLineNumber = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogMessage") cSSPModelsRes.AppErrLogMessage = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogSource") cSSPModelsRes.AppErrLogSource = GetRandomString("", 20);
            if (OmitPropName != "AppErrLogTag") cSSPModelsRes.AppErrLogTag = GetRandomString("", 20);
            if (OmitPropName != "AppTask") cSSPModelsRes.AppTask = GetRandomString("", 20);
            if (OmitPropName != "AppTaskAppTaskCommand") cSSPModelsRes.AppTaskAppTaskCommand = GetRandomString("", 20);
            if (OmitPropName != "AppTaskAppTaskCommandText") cSSPModelsRes.AppTaskAppTaskCommandText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskAppTaskID") cSSPModelsRes.AppTaskAppTaskID = GetRandomString("", 20);
            if (OmitPropName != "AppTaskAppTaskStatus") cSSPModelsRes.AppTaskAppTaskStatus = GetRandomString("", 20);
            if (OmitPropName != "AppTaskAppTaskStatusText") cSSPModelsRes.AppTaskAppTaskStatusText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskEndDateTime_UTC") cSSPModelsRes.AppTaskEndDateTime_UTC = GetRandomString("", 20);
            if (OmitPropName != "AppTaskEstimatedLength_second") cSSPModelsRes.AppTaskEstimatedLength_second = GetRandomString("", 20);
            if (OmitPropName != "AppTaskHasErrors") cSSPModelsRes.AppTaskHasErrors = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguage") cSSPModelsRes.AppTaskLanguage = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageAppTaskID") cSSPModelsRes.AppTaskLanguageAppTaskID = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageAppTaskLanguageID") cSSPModelsRes.AppTaskLanguageAppTaskLanguageID = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageErrorText") cSSPModelsRes.AppTaskLanguageErrorText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageHasErrors") cSSPModelsRes.AppTaskLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageLanguage") cSSPModelsRes.AppTaskLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageLanguageText") cSSPModelsRes.AppTaskLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageLastUpdateContactTVItemID") cSSPModelsRes.AppTaskLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageLastUpdateContactTVText") cSSPModelsRes.AppTaskLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageLastUpdateDate_UTC") cSSPModelsRes.AppTaskLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageStatusText") cSSPModelsRes.AppTaskLanguageStatusText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageText") cSSPModelsRes.AppTaskLanguageText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageTranslationStatus") cSSPModelsRes.AppTaskLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLanguageTranslationStatusText") cSSPModelsRes.AppTaskLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLastUpdateContactTVItemID") cSSPModelsRes.AppTaskLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLastUpdateContactTVText") cSSPModelsRes.AppTaskLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskLastUpdateDate_UTC") cSSPModelsRes.AppTaskLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "AppTaskParameter") cSSPModelsRes.AppTaskParameter = GetRandomString("", 20);
            if (OmitPropName != "AppTaskParameterHasErrors") cSSPModelsRes.AppTaskParameterHasErrors = GetRandomString("", 20);
            if (OmitPropName != "AppTaskParameterName") cSSPModelsRes.AppTaskParameterName = GetRandomString("", 20);
            if (OmitPropName != "AppTaskParameters") cSSPModelsRes.AppTaskParameters = GetRandomString("", 20);
            if (OmitPropName != "AppTaskParameterValue") cSSPModelsRes.AppTaskParameterValue = GetRandomString("", 20);
            if (OmitPropName != "AppTaskPercentCompleted") cSSPModelsRes.AppTaskPercentCompleted = GetRandomString("", 20);
            if (OmitPropName != "AppTaskRemainingTime_second") cSSPModelsRes.AppTaskRemainingTime_second = GetRandomString("", 20);
            if (OmitPropName != "AppTaskStartDateTime_UTC") cSSPModelsRes.AppTaskStartDateTime_UTC = GetRandomString("", 20);
            if (OmitPropName != "AppTaskTVItem2TVText") cSSPModelsRes.AppTaskTVItem2TVText = GetRandomString("", 20);
            if (OmitPropName != "AppTaskTVItemID") cSSPModelsRes.AppTaskTVItemID = GetRandomString("", 20);
            if (OmitPropName != "AppTaskTVItemID2") cSSPModelsRes.AppTaskTVItemID2 = GetRandomString("", 20);
            if (OmitPropName != "AppTaskTVItemTVText") cSSPModelsRes.AppTaskTVItemTVText = GetRandomString("", 20);
            if (OmitPropName != "BoxModel") cSSPModelsRes.BoxModel = GetRandomString("", 20);
            if (OmitPropName != "BoxModelBoxModelID") cSSPModelsRes.BoxModelBoxModelID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumb") cSSPModelsRes.BoxModelCalNumb = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbBoxModelResultType") cSSPModelsRes.BoxModelCalNumbBoxModelResultType = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbBoxModelResultTypeText") cSSPModelsRes.BoxModelCalNumbBoxModelResultTypeText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbCalLength_m") cSSPModelsRes.BoxModelCalNumbCalLength_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbCalRadius_m") cSSPModelsRes.BoxModelCalNumbCalRadius_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbCalSurface_m2") cSSPModelsRes.BoxModelCalNumbCalSurface_m2 = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbCalVolume_m3") cSSPModelsRes.BoxModelCalNumbCalVolume_m3 = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbCalWidth_m") cSSPModelsRes.BoxModelCalNumbCalWidth_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbError") cSSPModelsRes.BoxModelCalNumbError = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbFixLength") cSSPModelsRes.BoxModelCalNumbFixLength = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbFixWidth") cSSPModelsRes.BoxModelCalNumbFixWidth = GetRandomString("", 20);
            if (OmitPropName != "BoxModelCalNumbHasErrors") cSSPModelsRes.BoxModelCalNumbHasErrors = GetRandomString("", 20);
            if (OmitPropName != "BoxModelConcentration_MPN_100ml") cSSPModelsRes.BoxModelConcentration_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "BoxModelDecayRate_per_day") cSSPModelsRes.BoxModelDecayRate_per_day = GetRandomString("", 20);
            if (OmitPropName != "BoxModelDepth_m") cSSPModelsRes.BoxModelDepth_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelDilution") cSSPModelsRes.BoxModelDilution = GetRandomString("", 20);
            if (OmitPropName != "BoxModelFCPreDisinfection_MPN_100ml") cSSPModelsRes.BoxModelFCPreDisinfection_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "BoxModelFCUntreated_MPN_100ml") cSSPModelsRes.BoxModelFCUntreated_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "BoxModelFlow_m3_day") cSSPModelsRes.BoxModelFlow_m3_day = GetRandomString("", 20);
            if (OmitPropName != "BoxModelFlowDuration_hour") cSSPModelsRes.BoxModelFlowDuration_hour = GetRandomString("", 20);
            if (OmitPropName != "BoxModelHasErrors") cSSPModelsRes.BoxModelHasErrors = GetRandomString("", 20);
            if (OmitPropName != "BoxModelInfrastructureTVItemID") cSSPModelsRes.BoxModelInfrastructureTVItemID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelInfrastructureTVText") cSSPModelsRes.BoxModelInfrastructureTVText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguage") cSSPModelsRes.BoxModelLanguage = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageBoxModelID") cSSPModelsRes.BoxModelLanguageBoxModelID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageBoxModelLanguageID") cSSPModelsRes.BoxModelLanguageBoxModelLanguageID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageHasErrors") cSSPModelsRes.BoxModelLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageLanguage") cSSPModelsRes.BoxModelLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageLanguageText") cSSPModelsRes.BoxModelLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageLastUpdateContactTVItemID") cSSPModelsRes.BoxModelLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageLastUpdateContactTVText") cSSPModelsRes.BoxModelLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageLastUpdateDate_UTC") cSSPModelsRes.BoxModelLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageScenarioName") cSSPModelsRes.BoxModelLanguageScenarioName = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageTranslationStatus") cSSPModelsRes.BoxModelLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLanguageTranslationStatusText") cSSPModelsRes.BoxModelLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLastUpdateContactTVItemID") cSSPModelsRes.BoxModelLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLastUpdateContactTVText") cSSPModelsRes.BoxModelLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelLastUpdateDate_UTC") cSSPModelsRes.BoxModelLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResult") cSSPModelsRes.BoxModelResult = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultBoxModelID") cSSPModelsRes.BoxModelResultBoxModelID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultBoxModelResultID") cSSPModelsRes.BoxModelResultBoxModelResultID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultBoxModelResultType") cSSPModelsRes.BoxModelResultBoxModelResultType = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultBoxModelResultTypeText") cSSPModelsRes.BoxModelResultBoxModelResultTypeText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultCircleCenterLatitude") cSSPModelsRes.BoxModelResultCircleCenterLatitude = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultCircleCenterLongitude") cSSPModelsRes.BoxModelResultCircleCenterLongitude = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultFixLength") cSSPModelsRes.BoxModelResultFixLength = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultFixWidth") cSSPModelsRes.BoxModelResultFixWidth = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultHasErrors") cSSPModelsRes.BoxModelResultHasErrors = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLastUpdateContactTVItemID") cSSPModelsRes.BoxModelResultLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLastUpdateContactTVText") cSSPModelsRes.BoxModelResultLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLastUpdateDate_UTC") cSSPModelsRes.BoxModelResultLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLeftSideDiameterLineAngle_deg") cSSPModelsRes.BoxModelResultLeftSideDiameterLineAngle_deg = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLeftSideLineAngle_deg") cSSPModelsRes.BoxModelResultLeftSideLineAngle_deg = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLeftSideLineStartLatitude") cSSPModelsRes.BoxModelResultLeftSideLineStartLatitude = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultLeftSideLineStartLongitude") cSSPModelsRes.BoxModelResultLeftSideLineStartLongitude = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultRadius_m") cSSPModelsRes.BoxModelResultRadius_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultRectLength_m") cSSPModelsRes.BoxModelResultRectLength_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultRectWidth_m") cSSPModelsRes.BoxModelResultRectWidth_m = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultSurface_m2") cSSPModelsRes.BoxModelResultSurface_m2 = GetRandomString("", 20);
            if (OmitPropName != "BoxModelResultVolume_m3") cSSPModelsRes.BoxModelResultVolume_m3 = GetRandomString("", 20);
            if (OmitPropName != "BoxModelT90_hour") cSSPModelsRes.BoxModelT90_hour = GetRandomString("", 20);
            if (OmitPropName != "BoxModelTemperature_C") cSSPModelsRes.BoxModelTemperature_C = GetRandomString("", 20);
            if (OmitPropName != "CalDecay") cSSPModelsRes.CalDecay = GetRandomString("", 20);
            if (OmitPropName != "CalDecayDecay") cSSPModelsRes.CalDecayDecay = GetRandomString("", 20);
            if (OmitPropName != "CalDecayError") cSSPModelsRes.CalDecayError = GetRandomString("", 20);
            if (OmitPropName != "CalDecayHasErrors") cSSPModelsRes.CalDecayHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValue") cSSPModelsRes.ClimateDataValue = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueClimateDataValueID") cSSPModelsRes.ClimateDataValueClimateDataValueID = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueClimateSiteID") cSSPModelsRes.ClimateDataValueClimateSiteID = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueCoolDegDays_C") cSSPModelsRes.ClimateDataValueCoolDegDays_C = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueDateTime_Local") cSSPModelsRes.ClimateDataValueDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueDirMaxGust_0North") cSSPModelsRes.ClimateDataValueDirMaxGust_0North = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueHasErrors") cSSPModelsRes.ClimateDataValueHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueHeatDegDays_C") cSSPModelsRes.ClimateDataValueHeatDegDays_C = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueHourlyValues") cSSPModelsRes.ClimateDataValueHourlyValues = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueKeep") cSSPModelsRes.ClimateDataValueKeep = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueLastUpdateContactTVItemID") cSSPModelsRes.ClimateDataValueLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueLastUpdateContactTVText") cSSPModelsRes.ClimateDataValueLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueLastUpdateDate_UTC") cSSPModelsRes.ClimateDataValueLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueMaxTemp_C") cSSPModelsRes.ClimateDataValueMaxTemp_C = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueMinTemp_C") cSSPModelsRes.ClimateDataValueMinTemp_C = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueRainfall_mm") cSSPModelsRes.ClimateDataValueRainfall_mm = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueRainfallEntered_mm") cSSPModelsRes.ClimateDataValueRainfallEntered_mm = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueSnow_cm") cSSPModelsRes.ClimateDataValueSnow_cm = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueSnowOnGround_cm") cSSPModelsRes.ClimateDataValueSnowOnGround_cm = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueSpdMaxGust_kmh") cSSPModelsRes.ClimateDataValueSpdMaxGust_kmh = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueStorageDataType") cSSPModelsRes.ClimateDataValueStorageDataType = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueStorageDataTypeEnumText") cSSPModelsRes.ClimateDataValueStorageDataTypeEnumText = GetRandomString("", 20);
            if (OmitPropName != "ClimateDataValueTotalPrecip_mm_cm") cSSPModelsRes.ClimateDataValueTotalPrecip_mm_cm = GetRandomString("", 20);
            if (OmitPropName != "ClimateSite") cSSPModelsRes.ClimateSite = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteClimateID") cSSPModelsRes.ClimateSiteClimateID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteClimateSiteID") cSSPModelsRes.ClimateSiteClimateSiteID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteClimateSiteName") cSSPModelsRes.ClimateSiteClimateSiteName = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteClimateSiteTVItemID") cSSPModelsRes.ClimateSiteClimateSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteClimateSiteTVText") cSSPModelsRes.ClimateSiteClimateSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteDailyEndDate_Local") cSSPModelsRes.ClimateSiteDailyEndDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteDailyNow") cSSPModelsRes.ClimateSiteDailyNow = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteDailyStartDate_Local") cSSPModelsRes.ClimateSiteDailyStartDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteECDBID") cSSPModelsRes.ClimateSiteECDBID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteElevation_m") cSSPModelsRes.ClimateSiteElevation_m = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteFile_desc") cSSPModelsRes.ClimateSiteFile_desc = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteHasErrors") cSSPModelsRes.ClimateSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteHourlyEndDate_Local") cSSPModelsRes.ClimateSiteHourlyEndDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteHourlyNow") cSSPModelsRes.ClimateSiteHourlyNow = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteHourlyStartDate_Local") cSSPModelsRes.ClimateSiteHourlyStartDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteIsProvincial") cSSPModelsRes.ClimateSiteIsProvincial = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteLastUpdateContactTVItemID") cSSPModelsRes.ClimateSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteLastUpdateContactTVText") cSSPModelsRes.ClimateSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteLastUpdateDate_UTC") cSSPModelsRes.ClimateSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteMonthlyEndDate_Local") cSSPModelsRes.ClimateSiteMonthlyEndDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteMonthlyNow") cSSPModelsRes.ClimateSiteMonthlyNow = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteMonthlyStartDate_Local") cSSPModelsRes.ClimateSiteMonthlyStartDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteProvince") cSSPModelsRes.ClimateSiteProvince = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteProvSiteID") cSSPModelsRes.ClimateSiteProvSiteID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteTCID") cSSPModelsRes.ClimateSiteTCID = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteTimeOffset_hour") cSSPModelsRes.ClimateSiteTimeOffset_hour = GetRandomString("", 20);
            if (OmitPropName != "ClimateSiteWMOID") cSSPModelsRes.ClimateSiteWMOID = GetRandomString("", 20);
            if (OmitPropName != "Contact") cSSPModelsRes.Contact = GetRandomString("", 20);
            if (OmitPropName != "ContactContactID") cSSPModelsRes.ContactContactID = GetRandomString("", 20);
            if (OmitPropName != "ContactContactTitle") cSSPModelsRes.ContactContactTitle = GetRandomString("", 20);
            if (OmitPropName != "ContactContactTitleText") cSSPModelsRes.ContactContactTitleText = GetRandomString("", 20);
            if (OmitPropName != "ContactContactTVItemID") cSSPModelsRes.ContactContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactContactTVText") cSSPModelsRes.ContactContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ContactDisabled") cSSPModelsRes.ContactDisabled = GetRandomString("", 20);
            if (OmitPropName != "ContactEmailValidated") cSSPModelsRes.ContactEmailValidated = GetRandomString("", 20);
            if (OmitPropName != "ContactFirstName") cSSPModelsRes.ContactFirstName = GetRandomString("", 20);
            if (OmitPropName != "ContactHasErrors") cSSPModelsRes.ContactHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContactId") cSSPModelsRes.ContactId = GetRandomString("", 20);
            if (OmitPropName != "ContactInitial") cSSPModelsRes.ContactInitial = GetRandomString("", 20);
            if (OmitPropName != "ContactIsAdmin") cSSPModelsRes.ContactIsAdmin = GetRandomString("", 20);
            if (OmitPropName != "ContactIsNew") cSSPModelsRes.ContactIsNew = GetRandomString("", 20);
            if (OmitPropName != "ContactLastName") cSSPModelsRes.ContactLastName = GetRandomString("", 20);
            if (OmitPropName != "ContactLastUpdateContactTVItemID") cSSPModelsRes.ContactLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactLastUpdateContactTVText") cSSPModelsRes.ContactLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ContactLastUpdateDate_UTC") cSSPModelsRes.ContactLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ContactLogin") cSSPModelsRes.ContactLogin = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginConfirmPassword") cSSPModelsRes.ContactLoginConfirmPassword = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginContactID") cSSPModelsRes.ContactLoginContactID = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginContactLoginID") cSSPModelsRes.ContactLoginContactLoginID = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginEmail") cSSPModelsRes.ContactLoginEmail = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginHasErrors") cSSPModelsRes.ContactLoginHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginLastUpdateContactTVItemID") cSSPModelsRes.ContactLoginLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginLastUpdateContactTVText") cSSPModelsRes.ContactLoginLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginLastUpdateDate_UTC") cSSPModelsRes.ContactLoginLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginLoginEmail") cSSPModelsRes.ContactLoginLoginEmail = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginPassword") cSSPModelsRes.ContactLoginPassword = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginPasswordHash") cSSPModelsRes.ContactLoginPasswordHash = GetRandomString("", 20);
            if (OmitPropName != "ContactLoginPasswordSalt") cSSPModelsRes.ContactLoginPasswordSalt = GetRandomString("", 20);
            if (OmitPropName != "ContactOK") cSSPModelsRes.ContactOK = GetRandomString("", 20);
            if (OmitPropName != "ContactOKContactID") cSSPModelsRes.ContactOKContactID = GetRandomString("", 20);
            if (OmitPropName != "ContactOKContactTVItemID") cSSPModelsRes.ContactOKContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactOKError") cSSPModelsRes.ContactOKError = GetRandomString("", 20);
            if (OmitPropName != "ContactOKHasErrors") cSSPModelsRes.ContactOKHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContactParentTVItemID") cSSPModelsRes.ContactParentTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactPreference") cSSPModelsRes.ContactPreference = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceContactID") cSSPModelsRes.ContactPreferenceContactID = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceContactPreferenceID") cSSPModelsRes.ContactPreferenceContactPreferenceID = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceHasErrors") cSSPModelsRes.ContactPreferenceHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceLastUpdateContactTVItemID") cSSPModelsRes.ContactPreferenceLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceLastUpdateContactTVText") cSSPModelsRes.ContactPreferenceLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceLastUpdateDate_UTC") cSSPModelsRes.ContactPreferenceLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceMarkerSize") cSSPModelsRes.ContactPreferenceMarkerSize = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceTVType") cSSPModelsRes.ContactPreferenceTVType = GetRandomString("", 20);
            if (OmitPropName != "ContactPreferenceTVTypeText") cSSPModelsRes.ContactPreferenceTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "ContactSamplingPlanner_ProvincesTVItemID") cSSPModelsRes.ContactSamplingPlanner_ProvincesTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactSearch") cSSPModelsRes.ContactSearch = GetRandomString("", 20);
            if (OmitPropName != "ContactSearchContactID") cSSPModelsRes.ContactSearchContactID = GetRandomString("", 20);
            if (OmitPropName != "ContactSearchContactTVItemID") cSSPModelsRes.ContactSearchContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactSearchFullName") cSSPModelsRes.ContactSearchFullName = GetRandomString("", 20);
            if (OmitPropName != "ContactSearchHasErrors") cSSPModelsRes.ContactSearchHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcut") cSSPModelsRes.ContactShortcut = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutContactID") cSSPModelsRes.ContactShortcutContactID = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutContactShortcutID") cSSPModelsRes.ContactShortcutContactShortcutID = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutHasErrors") cSSPModelsRes.ContactShortcutHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutLastUpdateContactTVItemID") cSSPModelsRes.ContactShortcutLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutLastUpdateContactTVText") cSSPModelsRes.ContactShortcutLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutLastUpdateDate_UTC") cSSPModelsRes.ContactShortcutLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutShortCutAddress") cSSPModelsRes.ContactShortcutShortCutAddress = GetRandomString("", 20);
            if (OmitPropName != "ContactShortcutShortCutText") cSSPModelsRes.ContactShortcutShortCutText = GetRandomString("", 20);
            if (OmitPropName != "ContactWebName") cSSPModelsRes.ContactWebName = GetRandomString("", 20);
            if (OmitPropName != "ContourPolygon") cSSPModelsRes.ContourPolygon = GetRandomString("", 20);
            if (OmitPropName != "ContourPolygonContourNodeList") cSSPModelsRes.ContourPolygonContourNodeList = GetRandomString("", 20);
            if (OmitPropName != "ContourPolygonContourValue") cSSPModelsRes.ContourPolygonContourValue = GetRandomString("", 20);
            if (OmitPropName != "ContourPolygonDepth") cSSPModelsRes.ContourPolygonDepth = GetRandomString("", 20);
            if (OmitPropName != "ContourPolygonHasErrors") cSSPModelsRes.ContourPolygonHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ContourPolygonLayer") cSSPModelsRes.ContourPolygonLayer = GetRandomString("", 20);
            if (OmitPropName != "Coord") cSSPModelsRes.Coord = GetRandomString("", 20);
            if (OmitPropName != "CoordHasErrors") cSSPModelsRes.CoordHasErrors = GetRandomString("", 20);
            if (OmitPropName != "CoordLat") cSSPModelsRes.CoordLat = GetRandomString("", 20);
            if (OmitPropName != "CoordLng") cSSPModelsRes.CoordLng = GetRandomString("", 20);
            if (OmitPropName != "CoordOrdinal") cSSPModelsRes.CoordOrdinal = GetRandomString("", 20);
            if (OmitPropName != "CSSPMPNTable") cSSPModelsRes.CSSPMPNTable = GetRandomString("", 20);
            if (OmitPropName != "CSSPMPNTableHasErrors") cSSPModelsRes.CSSPMPNTableHasErrors = GetRandomString("", 20);
            if (OmitPropName != "CSSPMPNTableMPN") cSSPModelsRes.CSSPMPNTableMPN = GetRandomString("", 20);
            if (OmitPropName != "CSSPMPNTableTube0_1") cSSPModelsRes.CSSPMPNTableTube0_1 = GetRandomString("", 20);
            if (OmitPropName != "CSSPMPNTableTube1_0") cSSPModelsRes.CSSPMPNTableTube1_0 = GetRandomString("", 20);
            if (OmitPropName != "CSSPMPNTableTube10") cSSPModelsRes.CSSPMPNTableTube10 = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputApp") cSSPModelsRes.CSSPWQInputApp = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppAccessCode") cSSPModelsRes.CSSPWQInputAppAccessCode = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppActiveYear") cSSPModelsRes.CSSPWQInputAppActiveYear = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppApprovalCode") cSSPModelsRes.CSSPWQInputAppApprovalCode = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppApprovalDate") cSSPModelsRes.CSSPWQInputAppApprovalDate = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppDailyDuplicatePrecisionCriteria") cSSPModelsRes.CSSPWQInputAppDailyDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppHasErrors") cSSPModelsRes.CSSPWQInputAppHasErrors = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppIncludeLaboratoryQAQC") cSSPModelsRes.CSSPWQInputAppIncludeLaboratoryQAQC = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputAppIntertechDuplicatePrecisionCriteria") cSSPModelsRes.CSSPWQInputAppIntertechDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParam") cSSPModelsRes.CSSPWQInputParam = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamCSSPWQInputType") cSSPModelsRes.CSSPWQInputParamCSSPWQInputType = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamCSSPWQInputTypeText") cSSPModelsRes.CSSPWQInputParamCSSPWQInputTypeText = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamDailyDuplicateMWQMSiteList") cSSPModelsRes.CSSPWQInputParamDailyDuplicateMWQMSiteList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList") cSSPModelsRes.CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamHasErrors") cSSPModelsRes.CSSPWQInputParamHasErrors = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamInfrastructureList") cSSPModelsRes.CSSPWQInputParamInfrastructureList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamInfrastructureTVItemIDList") cSSPModelsRes.CSSPWQInputParamInfrastructureTVItemIDList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamMWQMSiteList") cSSPModelsRes.CSSPWQInputParamMWQMSiteList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamMWQMSiteTVItemIDList") cSSPModelsRes.CSSPWQInputParamMWQMSiteTVItemIDList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamName") cSSPModelsRes.CSSPWQInputParamName = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamsidList") cSSPModelsRes.CSSPWQInputParamsidList = GetRandomString("", 20);
            if (OmitPropName != "CSSPWQInputParamTVItemID") cSSPModelsRes.CSSPWQInputParamTVItemID = GetRandomString("", 20);
            if (OmitPropName != "DataPathOfTide") cSSPModelsRes.DataPathOfTide = GetRandomString("", 20);
            if (OmitPropName != "DataPathOfTideHasErrors") cSSPModelsRes.DataPathOfTideHasErrors = GetRandomString("", 20);
            if (OmitPropName != "DataPathOfTideText") cSSPModelsRes.DataPathOfTideText = GetRandomString("", 20);
            if (OmitPropName != "DataPathOfTideWebTideDataSet") cSSPModelsRes.DataPathOfTideWebTideDataSet = GetRandomString("", 20);
            if (OmitPropName != "DataPathOfTideWebTideDataSetText") cSSPModelsRes.DataPathOfTideWebTideDataSetText = GetRandomString("", 20);
            if (OmitPropName != "DBTable") cSSPModelsRes.DBTable = GetRandomString("", 20);
            if (OmitPropName != "DBTableHasErrors") cSSPModelsRes.DBTableHasErrors = GetRandomString("", 20);
            if (OmitPropName != "DBTablePlurial") cSSPModelsRes.DBTablePlurial = GetRandomString("", 20);
            if (OmitPropName != "DBTableTableName") cSSPModelsRes.DBTableTableName = GetRandomString("", 20);
            if (OmitPropName != "DocTemplate") cSSPModelsRes.DocTemplate = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateDocTemplateID") cSSPModelsRes.DocTemplateDocTemplateID = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateFileName") cSSPModelsRes.DocTemplateFileName = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateHasErrors") cSSPModelsRes.DocTemplateHasErrors = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateLanguage") cSSPModelsRes.DocTemplateLanguage = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateLanguageText") cSSPModelsRes.DocTemplateLanguageText = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateLastUpdateContactTVItemID") cSSPModelsRes.DocTemplateLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateLastUpdateContactTVText") cSSPModelsRes.DocTemplateLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateLastUpdateDate_UTC") cSSPModelsRes.DocTemplateLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateTVFileTVItemID") cSSPModelsRes.DocTemplateTVFileTVItemID = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateTVType") cSSPModelsRes.DocTemplateTVType = GetRandomString("", 20);
            if (OmitPropName != "DocTemplateTVTypeText") cSSPModelsRes.DocTemplateTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "Element") cSSPModelsRes.Element = GetRandomString("", 20);
            if (OmitPropName != "ElementHasErrors") cSSPModelsRes.ElementHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ElementID") cSSPModelsRes.ElementID = GetRandomString("", 20);
            if (OmitPropName != "ElementLayer") cSSPModelsRes.ElementLayer = GetRandomString("", 20);
            if (OmitPropName != "ElementLayerElement") cSSPModelsRes.ElementLayerElement = GetRandomString("", 20);
            if (OmitPropName != "ElementLayerHasErrors") cSSPModelsRes.ElementLayerHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ElementLayerLayer") cSSPModelsRes.ElementLayerLayer = GetRandomString("", 20);
            if (OmitPropName != "ElementLayerZMax") cSSPModelsRes.ElementLayerZMax = GetRandomString("", 20);
            if (OmitPropName != "ElementLayerZMin") cSSPModelsRes.ElementLayerZMin = GetRandomString("", 20);
            if (OmitPropName != "ElementNodeList") cSSPModelsRes.ElementNodeList = GetRandomString("", 20);
            if (OmitPropName != "ElementNumbOfNodes") cSSPModelsRes.ElementNumbOfNodes = GetRandomString("", 20);
            if (OmitPropName != "ElementType") cSSPModelsRes.ElementType = GetRandomString("", 20);
            if (OmitPropName != "ElementValue") cSSPModelsRes.ElementValue = GetRandomString("", 20);
            if (OmitPropName != "ElementXNode0") cSSPModelsRes.ElementXNode0 = GetRandomString("", 20);
            if (OmitPropName != "ElementYNode0") cSSPModelsRes.ElementYNode0 = GetRandomString("", 20);
            if (OmitPropName != "ElementZNode0") cSSPModelsRes.ElementZNode0 = GetRandomString("", 20);
            if (OmitPropName != "Email") cSSPModelsRes.Email = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionList") cSSPModelsRes.EmailDistributionList = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContact") cSSPModelsRes.EmailDistributionListContact = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactCMPRainfallSeasonal") cSSPModelsRes.EmailDistributionListContactCMPRainfallSeasonal = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactCMPWastewater") cSSPModelsRes.EmailDistributionListContactCMPWastewater = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactEmail") cSSPModelsRes.EmailDistributionListContactEmail = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactEmailDistributionListContactID") cSSPModelsRes.EmailDistributionListContactEmailDistributionListContactID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactEmailDistributionListID") cSSPModelsRes.EmailDistributionListContactEmailDistributionListID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactEmergencyWastewater") cSSPModelsRes.EmailDistributionListContactEmergencyWastewater = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactEmergencyWeather") cSSPModelsRes.EmailDistributionListContactEmergencyWeather = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactHasErrors") cSSPModelsRes.EmailDistributionListContactHasErrors = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactIsCC") cSSPModelsRes.EmailDistributionListContactIsCC = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguage") cSSPModelsRes.EmailDistributionListContactLanguage = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageAgency") cSSPModelsRes.EmailDistributionListContactLanguageAgency = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageEmailDistributionListContactID") cSSPModelsRes.EmailDistributionListContactLanguageEmailDistributionListContactID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageEmailDistributionListContactLanguageID") cSSPModelsRes.EmailDistributionListContactLanguageEmailDistributionListContactLanguageID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageHasErrors") cSSPModelsRes.EmailDistributionListContactLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageLanguage") cSSPModelsRes.EmailDistributionListContactLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageLanguageText") cSSPModelsRes.EmailDistributionListContactLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageLastUpdateContactTVItemID") cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageLastUpdateContactTVText") cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageLastUpdateDate_UTC") cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageTranslationStatus") cSSPModelsRes.EmailDistributionListContactLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLanguageTranslationStatusText") cSSPModelsRes.EmailDistributionListContactLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLastUpdateContactTVItemID") cSSPModelsRes.EmailDistributionListContactLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLastUpdateContactTVText") cSSPModelsRes.EmailDistributionListContactLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactLastUpdateDate_UTC") cSSPModelsRes.EmailDistributionListContactLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactName") cSSPModelsRes.EmailDistributionListContactName = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListContactReopeningAllTypes") cSSPModelsRes.EmailDistributionListContactReopeningAllTypes = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListCountryTVItemID") cSSPModelsRes.EmailDistributionListCountryTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListCountryTVText") cSSPModelsRes.EmailDistributionListCountryTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListEmailDistributionListID") cSSPModelsRes.EmailDistributionListEmailDistributionListID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListHasErrors") cSSPModelsRes.EmailDistributionListHasErrors = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguage") cSSPModelsRes.EmailDistributionListLanguage = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageEmailDistributionListID") cSSPModelsRes.EmailDistributionListLanguageEmailDistributionListID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageEmailDistributionListLanguageID") cSSPModelsRes.EmailDistributionListLanguageEmailDistributionListLanguageID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageHasErrors") cSSPModelsRes.EmailDistributionListLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageLanguage") cSSPModelsRes.EmailDistributionListLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageLanguageText") cSSPModelsRes.EmailDistributionListLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageLastUpdateContactTVItemID") cSSPModelsRes.EmailDistributionListLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageLastUpdateContactTVText") cSSPModelsRes.EmailDistributionListLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageLastUpdateDate_UTC") cSSPModelsRes.EmailDistributionListLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageRegionName") cSSPModelsRes.EmailDistributionListLanguageRegionName = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageTranslationStatus") cSSPModelsRes.EmailDistributionListLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLanguageTranslationStatusText") cSSPModelsRes.EmailDistributionListLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLastUpdateContactTVItemID") cSSPModelsRes.EmailDistributionListLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLastUpdateContactTVText") cSSPModelsRes.EmailDistributionListLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListLastUpdateDate_UTC") cSSPModelsRes.EmailDistributionListLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "EmailDistributionListOrdinal") cSSPModelsRes.EmailDistributionListOrdinal = GetRandomString("", 20);
            if (OmitPropName != "EmailEmailAddress") cSSPModelsRes.EmailEmailAddress = GetRandomString("", 20);
            if (OmitPropName != "EmailEmailID") cSSPModelsRes.EmailEmailID = GetRandomString("", 20);
            if (OmitPropName != "EmailEmailTVItemID") cSSPModelsRes.EmailEmailTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailEmailTVText") cSSPModelsRes.EmailEmailTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailEmailType") cSSPModelsRes.EmailEmailType = GetRandomString("", 20);
            if (OmitPropName != "EmailEmailTypeText") cSSPModelsRes.EmailEmailTypeText = GetRandomString("", 20);
            if (OmitPropName != "EmailHasErrors") cSSPModelsRes.EmailHasErrors = GetRandomString("", 20);
            if (OmitPropName != "EmailLastUpdateContactTVItemID") cSSPModelsRes.EmailLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "EmailLastUpdateContactTVText") cSSPModelsRes.EmailLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "EmailLastUpdateDate_UTC") cSSPModelsRes.EmailLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "FileItem") cSSPModelsRes.FileItem = GetRandomString("", 20);
            if (OmitPropName != "FileItemHasErrors") cSSPModelsRes.FileItemHasErrors = GetRandomString("", 20);
            if (OmitPropName != "FileItemList") cSSPModelsRes.FileItemList = GetRandomString("", 20);
            if (OmitPropName != "FileItemListFileName") cSSPModelsRes.FileItemListFileName = GetRandomString("", 20);
            if (OmitPropName != "FileItemListHasErrors") cSSPModelsRes.FileItemListHasErrors = GetRandomString("", 20);
            if (OmitPropName != "FileItemListText") cSSPModelsRes.FileItemListText = GetRandomString("", 20);
            if (OmitPropName != "FileItemName") cSSPModelsRes.FileItemName = GetRandomString("", 20);
            if (OmitPropName != "FileItemTVItemID") cSSPModelsRes.FileItemTVItemID = GetRandomString("", 20);
            if (OmitPropName != "FilePurposeAndText") cSSPModelsRes.FilePurposeAndText = GetRandomString("", 20);
            if (OmitPropName != "FilePurposeAndTextFilePurpose") cSSPModelsRes.FilePurposeAndTextFilePurpose = GetRandomString("", 20);
            if (OmitPropName != "FilePurposeAndTextFilePurposeText") cSSPModelsRes.FilePurposeAndTextFilePurposeText = GetRandomString("", 20);
            if (OmitPropName != "FilePurposeAndTextHasErrors") cSSPModelsRes.FilePurposeAndTextHasErrors = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValue") cSSPModelsRes.HydrometricDataValue = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueDateTime_Local") cSSPModelsRes.HydrometricDataValueDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueFlow_m3_s") cSSPModelsRes.HydrometricDataValueFlow_m3_s = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueHasErrors") cSSPModelsRes.HydrometricDataValueHasErrors = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueHourlyValues") cSSPModelsRes.HydrometricDataValueHourlyValues = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueHydrometricDataValueID") cSSPModelsRes.HydrometricDataValueHydrometricDataValueID = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueHydrometricSiteID") cSSPModelsRes.HydrometricDataValueHydrometricSiteID = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueKeep") cSSPModelsRes.HydrometricDataValueKeep = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueLastUpdateContactTVItemID") cSSPModelsRes.HydrometricDataValueLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueLastUpdateContactTVText") cSSPModelsRes.HydrometricDataValueLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueLastUpdateDate_UTC") cSSPModelsRes.HydrometricDataValueLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueStorageDataType") cSSPModelsRes.HydrometricDataValueStorageDataType = GetRandomString("", 20);
            if (OmitPropName != "HydrometricDataValueStorageDataTypeText") cSSPModelsRes.HydrometricDataValueStorageDataTypeText = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSite") cSSPModelsRes.HydrometricSite = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteDescription") cSSPModelsRes.HydrometricSiteDescription = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteDrainageArea_km2") cSSPModelsRes.HydrometricSiteDrainageArea_km2 = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteElevation_m") cSSPModelsRes.HydrometricSiteElevation_m = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteEndDate_Local") cSSPModelsRes.HydrometricSiteEndDate_Local = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteFedSiteNumber") cSSPModelsRes.HydrometricSiteFedSiteNumber = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteHasErrors") cSSPModelsRes.HydrometricSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteHasRatingCurve") cSSPModelsRes.HydrometricSiteHasRatingCurve = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteHydrometricSiteID") cSSPModelsRes.HydrometricSiteHydrometricSiteID = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteHydrometricSiteName") cSSPModelsRes.HydrometricSiteHydrometricSiteName = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteHydrometricSiteTVItemID") cSSPModelsRes.HydrometricSiteHydrometricSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteHydrometricTVText") cSSPModelsRes.HydrometricSiteHydrometricTVText = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteIsActive") cSSPModelsRes.HydrometricSiteIsActive = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteIsNatural") cSSPModelsRes.HydrometricSiteIsNatural = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteLastUpdateContactTVItemID") cSSPModelsRes.HydrometricSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteLastUpdateContactTVText") cSSPModelsRes.HydrometricSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteLastUpdateDate_UTC") cSSPModelsRes.HydrometricSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteProvince") cSSPModelsRes.HydrometricSiteProvince = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteQuebecSiteNumber") cSSPModelsRes.HydrometricSiteQuebecSiteNumber = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteRealTime") cSSPModelsRes.HydrometricSiteRealTime = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteRHBN") cSSPModelsRes.HydrometricSiteRHBN = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteSediment") cSSPModelsRes.HydrometricSiteSediment = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteStartDate_Local") cSSPModelsRes.HydrometricSiteStartDate_Local = GetRandomString("", 20);
            if (OmitPropName != "HydrometricSiteTimeOffset_hour") cSSPModelsRes.HydrometricSiteTimeOffset_hour = GetRandomString("", 20);
            if (OmitPropName != "Infrastructure") cSSPModelsRes.Infrastructure = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureAerationType") cSSPModelsRes.InfrastructureAerationType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureAerationTypeText") cSSPModelsRes.InfrastructureAerationTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureAlarmSystemType") cSSPModelsRes.InfrastructureAlarmSystemType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureAlarmSystemTypeText") cSSPModelsRes.InfrastructureAlarmSystemTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureAverageDepth_m") cSSPModelsRes.InfrastructureAverageDepth_m = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureAverageFlow_m3_day") cSSPModelsRes.InfrastructureAverageFlow_m3_day = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureCanOverflow") cSSPModelsRes.InfrastructureCanOverflow = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureCivicAddressTVItemID") cSSPModelsRes.InfrastructureCivicAddressTVItemID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureCivicAddressTVText") cSSPModelsRes.InfrastructureCivicAddressTVText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureCollectionSystemType") cSSPModelsRes.InfrastructureCollectionSystemType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureCollectionSystemTypeText") cSSPModelsRes.InfrastructureCollectionSystemTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureDecayRate_per_day") cSSPModelsRes.InfrastructureDecayRate_per_day = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureDesignFlow_m3_day") cSSPModelsRes.InfrastructureDesignFlow_m3_day = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureDisinfectionType") cSSPModelsRes.InfrastructureDisinfectionType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureDisinfectionTypeText") cSSPModelsRes.InfrastructureDisinfectionTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureDistanceFromShore_m") cSSPModelsRes.InfrastructureDistanceFromShore_m = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureFacilityType") cSSPModelsRes.InfrastructureFacilityType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureFacilityTypeText") cSSPModelsRes.InfrastructureFacilityTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureFarFieldVelocity_m_s") cSSPModelsRes.InfrastructureFarFieldVelocity_m_s = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureHasErrors") cSSPModelsRes.InfrastructureHasErrors = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureHorizontalAngle_deg") cSSPModelsRes.InfrastructureHorizontalAngle_deg = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureInfrastructureCategory") cSSPModelsRes.InfrastructureInfrastructureCategory = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureInfrastructureID") cSSPModelsRes.InfrastructureInfrastructureID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureInfrastructureTVItemID") cSSPModelsRes.InfrastructureInfrastructureTVItemID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureInfrastructureTVText") cSSPModelsRes.InfrastructureInfrastructureTVText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureInfrastructureType") cSSPModelsRes.InfrastructureInfrastructureType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureInfrastructureTypeText") cSSPModelsRes.InfrastructureInfrastructureTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureIsMechanicallyAerated") cSSPModelsRes.InfrastructureIsMechanicallyAerated = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguage") cSSPModelsRes.InfrastructureLanguage = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageComment") cSSPModelsRes.InfrastructureLanguageComment = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageHasErrors") cSSPModelsRes.InfrastructureLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageInfrastructureID") cSSPModelsRes.InfrastructureLanguageInfrastructureID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageInfrastructureLanguageID") cSSPModelsRes.InfrastructureLanguageInfrastructureLanguageID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageLanguage") cSSPModelsRes.InfrastructureLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageLanguageText") cSSPModelsRes.InfrastructureLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageLastUpdateContactTVItemID") cSSPModelsRes.InfrastructureLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageLastUpdateContactTVText") cSSPModelsRes.InfrastructureLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageLastUpdateDate_UTC") cSSPModelsRes.InfrastructureLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageTranslationStatus") cSSPModelsRes.InfrastructureLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLanguageTranslationStatusText") cSSPModelsRes.InfrastructureLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLastUpdateContactTVItemID") cSSPModelsRes.InfrastructureLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLastUpdateContactTVText") cSSPModelsRes.InfrastructureLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLastUpdateDate_UTC") cSSPModelsRes.InfrastructureLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureLSID") cSSPModelsRes.InfrastructureLSID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureNearFieldVelocity_m_s") cSSPModelsRes.InfrastructureNearFieldVelocity_m_s = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureNumberOfAeratedCells") cSSPModelsRes.InfrastructureNumberOfAeratedCells = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureNumberOfCells") cSSPModelsRes.InfrastructureNumberOfCells = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureNumberOfPorts") cSSPModelsRes.InfrastructureNumberOfPorts = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePeakFlow_m3_day") cSSPModelsRes.InfrastructurePeakFlow_m3_day = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePercFlowOfTotal") cSSPModelsRes.InfrastructurePercFlowOfTotal = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePopServed") cSSPModelsRes.InfrastructurePopServed = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePortDiameter_m") cSSPModelsRes.InfrastructurePortDiameter_m = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePortElevation_m") cSSPModelsRes.InfrastructurePortElevation_m = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePortSpacing_m") cSSPModelsRes.InfrastructurePortSpacing_m = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePreliminaryTreatmentType") cSSPModelsRes.InfrastructurePreliminaryTreatmentType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePreliminaryTreatmentTypeText") cSSPModelsRes.InfrastructurePreliminaryTreatmentTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePrimaryTreatmentType") cSSPModelsRes.InfrastructurePrimaryTreatmentType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePrimaryTreatmentTypeText") cSSPModelsRes.InfrastructurePrimaryTreatmentTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructurePrismID") cSSPModelsRes.InfrastructurePrismID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureReceivingWater_MPN_per_100ml") cSSPModelsRes.InfrastructureReceivingWater_MPN_per_100ml = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureReceivingWaterSalinity_PSU") cSSPModelsRes.InfrastructureReceivingWaterSalinity_PSU = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureReceivingWaterTemperature_C") cSSPModelsRes.InfrastructureReceivingWaterTemperature_C = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureSecondaryTreatmentType") cSSPModelsRes.InfrastructureSecondaryTreatmentType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureSecondaryTreatmentTypeText") cSSPModelsRes.InfrastructureSecondaryTreatmentTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureSeeOtherTVItemID") cSSPModelsRes.InfrastructureSeeOtherTVItemID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureSeeOtherTVText") cSSPModelsRes.InfrastructureSeeOtherTVText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureSite") cSSPModelsRes.InfrastructureSite = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureSiteID") cSSPModelsRes.InfrastructureSiteID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTempCatchAllRemoveLater") cSSPModelsRes.InfrastructureTempCatchAllRemoveLater = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTertiaryTreatmentType") cSSPModelsRes.InfrastructureTertiaryTreatmentType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTertiaryTreatmentTypeText") cSSPModelsRes.InfrastructureTertiaryTreatmentTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTimeOffset_hour") cSSPModelsRes.InfrastructureTimeOffset_hour = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTPID") cSSPModelsRes.InfrastructureTPID = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTreatmentType") cSSPModelsRes.InfrastructureTreatmentType = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureTreatmentTypeText") cSSPModelsRes.InfrastructureTreatmentTypeText = GetRandomString("", 20);
            if (OmitPropName != "InfrastructureVerticalAngle_deg") cSSPModelsRes.InfrastructureVerticalAngle_deg = GetRandomString("", 20);
            if (OmitPropName != "InputSummary") cSSPModelsRes.InputSummary = GetRandomString("", 20);
            if (OmitPropName != "InputSummaryError") cSSPModelsRes.InputSummaryError = GetRandomString("", 20);
            if (OmitPropName != "InputSummaryHasErrors") cSSPModelsRes.InputSummaryHasErrors = GetRandomString("", 20);
            if (OmitPropName != "InputSummarySummary") cSSPModelsRes.InputSummarySummary = GetRandomString("", 20);
            if (OmitPropName != "LabSheet") cSSPModelsRes.LabSheet = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1Measurement") cSSPModelsRes.LabSheetA1Measurement = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementHasErrors") cSSPModelsRes.LabSheetA1MeasurementHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementMPN") cSSPModelsRes.LabSheetA1MeasurementMPN = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementProcessedBy") cSSPModelsRes.LabSheetA1MeasurementProcessedBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementSalinity") cSSPModelsRes.LabSheetA1MeasurementSalinity = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementSampleType") cSSPModelsRes.LabSheetA1MeasurementSampleType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementSampleTypeText") cSSPModelsRes.LabSheetA1MeasurementSampleTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementSite") cSSPModelsRes.LabSheetA1MeasurementSite = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementSiteComment") cSSPModelsRes.LabSheetA1MeasurementSiteComment = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementTemperature") cSSPModelsRes.LabSheetA1MeasurementTemperature = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementTime") cSSPModelsRes.LabSheetA1MeasurementTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementTube0_1") cSSPModelsRes.LabSheetA1MeasurementTube0_1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementTube1_0") cSSPModelsRes.LabSheetA1MeasurementTube1_0 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementTube10") cSSPModelsRes.LabSheetA1MeasurementTube10 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1MeasurementTVItemID") cSSPModelsRes.LabSheetA1MeasurementTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1Sheet") cSSPModelsRes.LabSheetA1Sheet = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetApprovalDay") cSSPModelsRes.LabSheetA1SheetApprovalDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetApprovalMonth") cSSPModelsRes.LabSheetA1SheetApprovalMonth = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetApprovalYear") cSSPModelsRes.LabSheetA1SheetApprovalYear = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetApprovedBySupervisorInitials") cSSPModelsRes.LabSheetA1SheetApprovedBySupervisorInitials = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath1Blank44_5") cSSPModelsRes.LabSheetA1SheetBath1Blank44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath1Negative44_5") cSSPModelsRes.LabSheetA1SheetBath1Negative44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath1NonTarget44_5") cSSPModelsRes.LabSheetA1SheetBath1NonTarget44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath1Positive44_5") cSSPModelsRes.LabSheetA1SheetBath1Positive44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath2Blank44_5") cSSPModelsRes.LabSheetA1SheetBath2Blank44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath2Negative44_5") cSSPModelsRes.LabSheetA1SheetBath2Negative44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath2NonTarget44_5") cSSPModelsRes.LabSheetA1SheetBath2NonTarget44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath2Positive44_5") cSSPModelsRes.LabSheetA1SheetBath2Positive44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath3Blank44_5") cSSPModelsRes.LabSheetA1SheetBath3Blank44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath3Negative44_5") cSSPModelsRes.LabSheetA1SheetBath3Negative44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath3NonTarget44_5") cSSPModelsRes.LabSheetA1SheetBath3NonTarget44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBath3Positive44_5") cSSPModelsRes.LabSheetA1SheetBath3Positive44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetBlank35") cSSPModelsRes.LabSheetA1SheetBlank35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetControlLot") cSSPModelsRes.LabSheetA1SheetControlLot = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable") cSSPModelsRes.LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetDailyDuplicatePrecisionCriteria") cSSPModelsRes.LabSheetA1SheetDailyDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetDailyDuplicateRLog") cSSPModelsRes.LabSheetA1SheetDailyDuplicateRLog = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetError") cSSPModelsRes.LabSheetA1SheetError = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetHasErrors") cSSPModelsRes.LabSheetA1SheetHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncludeLaboratoryQAQC") cSSPModelsRes.LabSheetA1SheetIncludeLaboratoryQAQC = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath1EndTime") cSSPModelsRes.LabSheetA1SheetIncubationBath1EndTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath1StartTime") cSSPModelsRes.LabSheetA1SheetIncubationBath1StartTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath1TimeCalculated") cSSPModelsRes.LabSheetA1SheetIncubationBath1TimeCalculated = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath2EndTime") cSSPModelsRes.LabSheetA1SheetIncubationBath2EndTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath2StartTime") cSSPModelsRes.LabSheetA1SheetIncubationBath2StartTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath2TimeCalculated") cSSPModelsRes.LabSheetA1SheetIncubationBath2TimeCalculated = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath3EndTime") cSSPModelsRes.LabSheetA1SheetIncubationBath3EndTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath3StartTime") cSSPModelsRes.LabSheetA1SheetIncubationBath3StartTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationBath3TimeCalculated") cSSPModelsRes.LabSheetA1SheetIncubationBath3TimeCalculated = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIncubationStartSameDay") cSSPModelsRes.LabSheetA1SheetIncubationStartSameDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable") cSSPModelsRes.LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIntertechDuplicatePrecisionCriteria") cSSPModelsRes.LabSheetA1SheetIntertechDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIntertechDuplicateRLog") cSSPModelsRes.LabSheetA1SheetIntertechDuplicateRLog = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetIntertechReadAcceptableOrUnacceptable") cSSPModelsRes.LabSheetA1SheetIntertechReadAcceptableOrUnacceptable = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetLabSheetA1MeasurementList") cSSPModelsRes.LabSheetA1SheetLabSheetA1MeasurementList = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetLabSheetType") cSSPModelsRes.LabSheetA1SheetLabSheetType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetLabSheetTypeText") cSSPModelsRes.LabSheetA1SheetLabSheetTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetLog") cSSPModelsRes.LabSheetA1SheetLog = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetLot35") cSSPModelsRes.LabSheetA1SheetLot35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetLot44_5") cSSPModelsRes.LabSheetA1SheetLot44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetNegative35") cSSPModelsRes.LabSheetA1SheetNegative35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetNonTarget35") cSSPModelsRes.LabSheetA1SheetNonTarget35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetPositive35") cSSPModelsRes.LabSheetA1SheetPositive35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsReadBy") cSSPModelsRes.LabSheetA1SheetResultsReadBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsReadDay") cSSPModelsRes.LabSheetA1SheetResultsReadDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsReadMonth") cSSPModelsRes.LabSheetA1SheetResultsReadMonth = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsReadYear") cSSPModelsRes.LabSheetA1SheetResultsReadYear = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsRecordedBy") cSSPModelsRes.LabSheetA1SheetResultsRecordedBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsRecordedDay") cSSPModelsRes.LabSheetA1SheetResultsRecordedDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsRecordedMonth") cSSPModelsRes.LabSheetA1SheetResultsRecordedMonth = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetResultsRecordedYear") cSSPModelsRes.LabSheetA1SheetResultsRecordedYear = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetRunComment") cSSPModelsRes.LabSheetA1SheetRunComment = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetRunDay") cSSPModelsRes.LabSheetA1SheetRunDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetRunMonth") cSSPModelsRes.LabSheetA1SheetRunMonth = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetRunNumber") cSSPModelsRes.LabSheetA1SheetRunNumber = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetRunWeatherComment") cSSPModelsRes.LabSheetA1SheetRunWeatherComment = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetRunYear") cSSPModelsRes.LabSheetA1SheetRunYear = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSalinitiesReadBy") cSSPModelsRes.LabSheetA1SheetSalinitiesReadBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSalinitiesReadDay") cSSPModelsRes.LabSheetA1SheetSalinitiesReadDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSalinitiesReadMonth") cSSPModelsRes.LabSheetA1SheetSalinitiesReadMonth = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSalinitiesReadYear") cSSPModelsRes.LabSheetA1SheetSalinitiesReadYear = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSampleBottleLotNumber") cSSPModelsRes.LabSheetA1SheetSampleBottleLotNumber = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSampleCrewInitials") cSSPModelsRes.LabSheetA1SheetSampleCrewInitials = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSampleType") cSSPModelsRes.LabSheetA1SheetSampleType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSampleTypeText") cSSPModelsRes.LabSheetA1SheetSampleTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSamplingPlanType") cSSPModelsRes.LabSheetA1SheetSamplingPlanType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSamplingPlanTypeText") cSSPModelsRes.LabSheetA1SheetSamplingPlanTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSubsectorLocation") cSSPModelsRes.LabSheetA1SheetSubsectorLocation = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSubsectorName") cSSPModelsRes.LabSheetA1SheetSubsectorName = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetSubsectorTVItemID") cSSPModelsRes.LabSheetA1SheetSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCAverage") cSSPModelsRes.LabSheetA1SheetTCAverage = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCField1") cSSPModelsRes.LabSheetA1SheetTCField1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCField2") cSSPModelsRes.LabSheetA1SheetTCField2 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCFirst") cSSPModelsRes.LabSheetA1SheetTCFirst = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCHas2Coolers") cSSPModelsRes.LabSheetA1SheetTCHas2Coolers = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCLab1") cSSPModelsRes.LabSheetA1SheetTCLab1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTCLab2") cSSPModelsRes.LabSheetA1SheetTCLab2 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetTides") cSSPModelsRes.LabSheetA1SheetTides = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetVersion") cSSPModelsRes.LabSheetA1SheetVersion = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetWaterBath1") cSSPModelsRes.LabSheetA1SheetWaterBath1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetWaterBath2") cSSPModelsRes.LabSheetA1SheetWaterBath2 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetWaterBath3") cSSPModelsRes.LabSheetA1SheetWaterBath3 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetA1SheetWaterBathCount") cSSPModelsRes.LabSheetA1SheetWaterBathCount = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAcceptedOrRejectedByContactTVItemID") cSSPModelsRes.LabSheetAcceptedOrRejectedByContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAcceptedOrRejectedByContactTVText") cSSPModelsRes.LabSheetAcceptedOrRejectedByContactTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAcceptedOrRejectedDateTime") cSSPModelsRes.LabSheetAcceptedOrRejectedDateTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAndA1Sheet") cSSPModelsRes.LabSheetAndA1Sheet = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAndA1SheetHasErrors") cSSPModelsRes.LabSheetAndA1SheetHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAndA1SheetLabSheet") cSSPModelsRes.LabSheetAndA1SheetLabSheet = GetRandomString("", 20);
            if (OmitPropName != "LabSheetAndA1SheetLabSheetA1Sheet") cSSPModelsRes.LabSheetAndA1SheetLabSheetA1Sheet = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDay") cSSPModelsRes.LabSheetDay = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetail") cSSPModelsRes.LabSheetDetail = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath1Blank44_5") cSSPModelsRes.LabSheetDetailBath1Blank44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath1Negative44_5") cSSPModelsRes.LabSheetDetailBath1Negative44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath1NonTarget44_5") cSSPModelsRes.LabSheetDetailBath1NonTarget44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath1Positive44_5") cSSPModelsRes.LabSheetDetailBath1Positive44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath2Blank44_5") cSSPModelsRes.LabSheetDetailBath2Blank44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath2Negative44_5") cSSPModelsRes.LabSheetDetailBath2Negative44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath2NonTarget44_5") cSSPModelsRes.LabSheetDetailBath2NonTarget44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath2Positive44_5") cSSPModelsRes.LabSheetDetailBath2Positive44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath3Blank44_5") cSSPModelsRes.LabSheetDetailBath3Blank44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath3Negative44_5") cSSPModelsRes.LabSheetDetailBath3Negative44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath3NonTarget44_5") cSSPModelsRes.LabSheetDetailBath3NonTarget44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBath3Positive44_5") cSSPModelsRes.LabSheetDetailBath3Positive44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailBlank35") cSSPModelsRes.LabSheetDetailBlank35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailControlLot") cSSPModelsRes.LabSheetDetailControlLot = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailDailyDuplicateAcceptable") cSSPModelsRes.LabSheetDetailDailyDuplicateAcceptable = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailDailyDuplicatePrecisionCriteria") cSSPModelsRes.LabSheetDetailDailyDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailDailyDuplicateRLog") cSSPModelsRes.LabSheetDetailDailyDuplicateRLog = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailHasErrors") cSSPModelsRes.LabSheetDetailHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath1EndTime") cSSPModelsRes.LabSheetDetailIncubationBath1EndTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath1StartTime") cSSPModelsRes.LabSheetDetailIncubationBath1StartTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath1TimeCalculated_minutes") cSSPModelsRes.LabSheetDetailIncubationBath1TimeCalculated_minutes = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath2EndTime") cSSPModelsRes.LabSheetDetailIncubationBath2EndTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath2StartTime") cSSPModelsRes.LabSheetDetailIncubationBath2StartTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath2TimeCalculated_minutes") cSSPModelsRes.LabSheetDetailIncubationBath2TimeCalculated_minutes = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath3EndTime") cSSPModelsRes.LabSheetDetailIncubationBath3EndTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath3StartTime") cSSPModelsRes.LabSheetDetailIncubationBath3StartTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIncubationBath3TimeCalculated_minutes") cSSPModelsRes.LabSheetDetailIncubationBath3TimeCalculated_minutes = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIntertechDuplicateAcceptable") cSSPModelsRes.LabSheetDetailIntertechDuplicateAcceptable = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIntertechDuplicatePrecisionCriteria") cSSPModelsRes.LabSheetDetailIntertechDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIntertechDuplicateRLog") cSSPModelsRes.LabSheetDetailIntertechDuplicateRLog = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailIntertechReadAcceptable") cSSPModelsRes.LabSheetDetailIntertechReadAcceptable = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLabSheetDetailID") cSSPModelsRes.LabSheetDetailLabSheetDetailID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLabSheetID") cSSPModelsRes.LabSheetDetailLabSheetID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLastUpdateContactTVItemID") cSSPModelsRes.LabSheetDetailLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLastUpdateContactTVText") cSSPModelsRes.LabSheetDetailLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLastUpdateDate_UTC") cSSPModelsRes.LabSheetDetailLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLot35") cSSPModelsRes.LabSheetDetailLot35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailLot44_5") cSSPModelsRes.LabSheetDetailLot44_5 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailNegative35") cSSPModelsRes.LabSheetDetailNegative35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailNonTarget35") cSSPModelsRes.LabSheetDetailNonTarget35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailPositive35") cSSPModelsRes.LabSheetDetailPositive35 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailResultsReadBy") cSSPModelsRes.LabSheetDetailResultsReadBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailResultsReadDate") cSSPModelsRes.LabSheetDetailResultsReadDate = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailResultsRecordedBy") cSSPModelsRes.LabSheetDetailResultsRecordedBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailResultsRecordedDate") cSSPModelsRes.LabSheetDetailResultsRecordedDate = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailRunComment") cSSPModelsRes.LabSheetDetailRunComment = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailRunDate") cSSPModelsRes.LabSheetDetailRunDate = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailRunWeatherComment") cSSPModelsRes.LabSheetDetailRunWeatherComment = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSalinitiesReadBy") cSSPModelsRes.LabSheetDetailSalinitiesReadBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSalinitiesReadDate") cSSPModelsRes.LabSheetDetailSalinitiesReadDate = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSampleBottleLotNumber") cSSPModelsRes.LabSheetDetailSampleBottleLotNumber = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSampleCrewInitials") cSSPModelsRes.LabSheetDetailSampleCrewInitials = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSamplingPlanID") cSSPModelsRes.LabSheetDetailSamplingPlanID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSubsectorTVItemID") cSSPModelsRes.LabSheetDetailSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailSubsectorTVText") cSSPModelsRes.LabSheetDetailSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTCAverage") cSSPModelsRes.LabSheetDetailTCAverage = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTCField1") cSSPModelsRes.LabSheetDetailTCField1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTCField2") cSSPModelsRes.LabSheetDetailTCField2 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTCFirst") cSSPModelsRes.LabSheetDetailTCFirst = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTCLab1") cSSPModelsRes.LabSheetDetailTCLab1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTCLab2") cSSPModelsRes.LabSheetDetailTCLab2 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailTides") cSSPModelsRes.LabSheetDetailTides = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailVersion") cSSPModelsRes.LabSheetDetailVersion = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailWaterBath1") cSSPModelsRes.LabSheetDetailWaterBath1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailWaterBath2") cSSPModelsRes.LabSheetDetailWaterBath2 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailWaterBath3") cSSPModelsRes.LabSheetDetailWaterBath3 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailWaterBathCount") cSSPModelsRes.LabSheetDetailWaterBathCount = GetRandomString("", 20);
            if (OmitPropName != "LabSheetDetailWeather") cSSPModelsRes.LabSheetDetailWeather = GetRandomString("", 20);
            if (OmitPropName != "LabSheetFileContent") cSSPModelsRes.LabSheetFileContent = GetRandomString("", 20);
            if (OmitPropName != "LabSheetFileLastModifiedDate_Local") cSSPModelsRes.LabSheetFileLastModifiedDate_Local = GetRandomString("", 20);
            if (OmitPropName != "LabSheetFileName") cSSPModelsRes.LabSheetFileName = GetRandomString("", 20);
            if (OmitPropName != "LabSheetHasErrors") cSSPModelsRes.LabSheetHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLabSheetID") cSSPModelsRes.LabSheetLabSheetID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLabSheetStatus") cSSPModelsRes.LabSheetLabSheetStatus = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLabSheetStatusText") cSSPModelsRes.LabSheetLabSheetStatusText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLabSheetType") cSSPModelsRes.LabSheetLabSheetType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLabSheetTypeText") cSSPModelsRes.LabSheetLabSheetTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLastUpdateContactTVItemID") cSSPModelsRes.LabSheetLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLastUpdateContactTVText") cSSPModelsRes.LabSheetLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetLastUpdateDate_UTC") cSSPModelsRes.LabSheetLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "LabSheetMonth") cSSPModelsRes.LabSheetMonth = GetRandomString("", 20);
            if (OmitPropName != "LabSheetMWQMRunTVItemID") cSSPModelsRes.LabSheetMWQMRunTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetMWQMRunTVText") cSSPModelsRes.LabSheetMWQMRunTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetOtherServerLabSheetID") cSSPModelsRes.LabSheetOtherServerLabSheetID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetRejectReason") cSSPModelsRes.LabSheetRejectReason = GetRandomString("", 20);
            if (OmitPropName != "LabSheetRunNumber") cSSPModelsRes.LabSheetRunNumber = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSampleType") cSSPModelsRes.LabSheetSampleType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSampleTypeText") cSSPModelsRes.LabSheetSampleTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSamplingPlanID") cSSPModelsRes.LabSheetSamplingPlanID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSamplingPlanName") cSSPModelsRes.LabSheetSamplingPlanName = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSamplingPlanType") cSSPModelsRes.LabSheetSamplingPlanType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSamplingPlanTypeText") cSSPModelsRes.LabSheetSamplingPlanTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSubsectorTVItemID") cSSPModelsRes.LabSheetSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetSubsectorTVText") cSSPModelsRes.LabSheetSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetail") cSSPModelsRes.LabSheetTubeMPNDetail = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailHasErrors") cSSPModelsRes.LabSheetTubeMPNDetailHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailLabSheetDetailID") cSSPModelsRes.LabSheetTubeMPNDetailLabSheetDetailID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailLabSheetTubeMPNDetailID") cSSPModelsRes.LabSheetTubeMPNDetailLabSheetTubeMPNDetailID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailLastUpdateContactTVItemID") cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailLastUpdateContactTVText") cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailLastUpdateDate_UTC") cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailMPN") cSSPModelsRes.LabSheetTubeMPNDetailMPN = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailMWQMSiteTVItemID") cSSPModelsRes.LabSheetTubeMPNDetailMWQMSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailMWQMSiteTVText") cSSPModelsRes.LabSheetTubeMPNDetailMWQMSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailOrdinal") cSSPModelsRes.LabSheetTubeMPNDetailOrdinal = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailProcessedBy") cSSPModelsRes.LabSheetTubeMPNDetailProcessedBy = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailSalinity") cSSPModelsRes.LabSheetTubeMPNDetailSalinity = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailSampleDateTime") cSSPModelsRes.LabSheetTubeMPNDetailSampleDateTime = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailSampleType") cSSPModelsRes.LabSheetTubeMPNDetailSampleType = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailSampleTypeText") cSSPModelsRes.LabSheetTubeMPNDetailSampleTypeText = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailSiteComment") cSSPModelsRes.LabSheetTubeMPNDetailSiteComment = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailTemperature") cSSPModelsRes.LabSheetTubeMPNDetailTemperature = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailTube0_1") cSSPModelsRes.LabSheetTubeMPNDetailTube0_1 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailTube1_0") cSSPModelsRes.LabSheetTubeMPNDetailTube1_0 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetTubeMPNDetailTube10") cSSPModelsRes.LabSheetTubeMPNDetailTube10 = GetRandomString("", 20);
            if (OmitPropName != "LabSheetYear") cSSPModelsRes.LabSheetYear = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndContact") cSSPModelsRes.LastUpdateAndContact = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndContactError") cSSPModelsRes.LastUpdateAndContactError = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndContactHasErrors") cSSPModelsRes.LastUpdateAndContactHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndContactLastUpdateContactTVItemID") cSSPModelsRes.LastUpdateAndContactLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndContactLastUpdateDate_UTC") cSSPModelsRes.LastUpdateAndContactLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndTVText") cSSPModelsRes.LastUpdateAndTVText = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndTVTextError") cSSPModelsRes.LastUpdateAndTVTextError = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndTVTextHasErrors") cSSPModelsRes.LastUpdateAndTVTextHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndTVTextLastUpdateDate_Local") cSSPModelsRes.LastUpdateAndTVTextLastUpdateDate_Local = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndTVTextLastUpdateDate_UTC") cSSPModelsRes.LastUpdateAndTVTextLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "LastUpdateAndTVTextTVText") cSSPModelsRes.LastUpdateAndTVTextTVText = GetRandomString("", 20);
            if (OmitPropName != "LatLng") cSSPModelsRes.LatLng = GetRandomString("", 20);
            if (OmitPropName != "LatLngHasErrors") cSSPModelsRes.LatLngHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LatLngLat") cSSPModelsRes.LatLngLat = GetRandomString("", 20);
            if (OmitPropName != "LatLngLng") cSSPModelsRes.LatLngLng = GetRandomString("", 20);
            if (OmitPropName != "Log") cSSPModelsRes.Log = GetRandomString("", 20);
            if (OmitPropName != "LogHasErrors") cSSPModelsRes.LogHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LogID") cSSPModelsRes.LogID = GetRandomString("", 20);
            if (OmitPropName != "Login") cSSPModelsRes.Login = GetRandomString("", 20);
            if (OmitPropName != "LoginConfirmPassword") cSSPModelsRes.LoginConfirmPassword = GetRandomString("", 20);
            if (OmitPropName != "LogInformation") cSSPModelsRes.LogInformation = GetRandomString("", 20);
            if (OmitPropName != "LoginHasErrors") cSSPModelsRes.LoginHasErrors = GetRandomString("", 20);
            if (OmitPropName != "LoginLoginEmail") cSSPModelsRes.LoginLoginEmail = GetRandomString("", 20);
            if (OmitPropName != "LoginPassword") cSSPModelsRes.LoginPassword = GetRandomString("", 20);
            if (OmitPropName != "LogLastUpdateContactTVItemID") cSSPModelsRes.LogLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "LogLastUpdateContactTVText") cSSPModelsRes.LogLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "LogLastUpdateDate_UTC") cSSPModelsRes.LogLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "LogLogCommand") cSSPModelsRes.LogLogCommand = GetRandomString("", 20);
            if (OmitPropName != "LogLogCommandText") cSSPModelsRes.LogLogCommandText = GetRandomString("", 20);
            if (OmitPropName != "LogLogID") cSSPModelsRes.LogLogID = GetRandomString("", 20);
            if (OmitPropName != "LogTableName") cSSPModelsRes.LogTableName = GetRandomString("", 20);
            if (OmitPropName != "MapInfo") cSSPModelsRes.MapInfo = GetRandomString("", 20);
            if (OmitPropName != "MapInfoHasErrors") cSSPModelsRes.MapInfoHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLastUpdateContactTVItemID") cSSPModelsRes.MapInfoLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLastUpdateContactTVText") cSSPModelsRes.MapInfoLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLastUpdateDate_UTC") cSSPModelsRes.MapInfoLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLatMax") cSSPModelsRes.MapInfoLatMax = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLatMin") cSSPModelsRes.MapInfoLatMin = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLngMax") cSSPModelsRes.MapInfoLngMax = GetRandomString("", 20);
            if (OmitPropName != "MapInfoLngMin") cSSPModelsRes.MapInfoLngMin = GetRandomString("", 20);
            if (OmitPropName != "MapInfoMapInfoDrawType") cSSPModelsRes.MapInfoMapInfoDrawType = GetRandomString("", 20);
            if (OmitPropName != "MapInfoMapInfoDrawTypeText") cSSPModelsRes.MapInfoMapInfoDrawTypeText = GetRandomString("", 20);
            if (OmitPropName != "MapInfoMapInfoID") cSSPModelsRes.MapInfoMapInfoID = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPoint") cSSPModelsRes.MapInfoPoint = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointHasErrors") cSSPModelsRes.MapInfoPointHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointLastUpdateContactTVItemID") cSSPModelsRes.MapInfoPointLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointLastUpdateContactTVText") cSSPModelsRes.MapInfoPointLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointLastUpdateDate_UTC") cSSPModelsRes.MapInfoPointLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointLat") cSSPModelsRes.MapInfoPointLat = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointLng") cSSPModelsRes.MapInfoPointLng = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointMapInfoID") cSSPModelsRes.MapInfoPointMapInfoID = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointMapInfoPointID") cSSPModelsRes.MapInfoPointMapInfoPointID = GetRandomString("", 20);
            if (OmitPropName != "MapInfoPointOrdinal") cSSPModelsRes.MapInfoPointOrdinal = GetRandomString("", 20);
            if (OmitPropName != "MapInfoTVItemID") cSSPModelsRes.MapInfoTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MapInfoTVText") cSSPModelsRes.MapInfoTVText = GetRandomString("", 20);
            if (OmitPropName != "MapInfoTVType") cSSPModelsRes.MapInfoTVType = GetRandomString("", 20);
            if (OmitPropName != "MapInfoTVTypeText") cSSPModelsRes.MapInfoTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "MapObj") cSSPModelsRes.MapObj = GetRandomString("", 20);
            if (OmitPropName != "MapObjCoordList") cSSPModelsRes.MapObjCoordList = GetRandomString("", 20);
            if (OmitPropName != "MapObjHasErrors") cSSPModelsRes.MapObjHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MapObjMapInfoDrawType") cSSPModelsRes.MapObjMapInfoDrawType = GetRandomString("", 20);
            if (OmitPropName != "MapObjMapInfoDrawTypeText") cSSPModelsRes.MapObjMapInfoDrawTypeText = GetRandomString("", 20);
            if (OmitPropName != "MapObjMapInfoID") cSSPModelsRes.MapObjMapInfoID = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryCondition") cSSPModelsRes.MikeBoundaryCondition = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionHasErrors") cSSPModelsRes.MikeBoundaryConditionHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionLastUpdateContactTVItemID") cSSPModelsRes.MikeBoundaryConditionLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionLastUpdateContactTVText") cSSPModelsRes.MikeBoundaryConditionLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionLastUpdateDate_UTC") cSSPModelsRes.MikeBoundaryConditionLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionCode") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionCode = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionFormat") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionFormat = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionID") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionID = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionLength_m") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLength_m = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionName") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionName = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionTVItemID") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionMikeBoundaryConditionTVText") cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionNumberOfWebTideNodes") cSSPModelsRes.MikeBoundaryConditionNumberOfWebTideNodes = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionTVType") cSSPModelsRes.MikeBoundaryConditionTVType = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionTVTypeText") cSSPModelsRes.MikeBoundaryConditionTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionWebTideDataFromStartToEndDate") cSSPModelsRes.MikeBoundaryConditionWebTideDataFromStartToEndDate = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionWebTideDataSet") cSSPModelsRes.MikeBoundaryConditionWebTideDataSet = GetRandomString("", 20);
            if (OmitPropName != "MikeBoundaryConditionWebTideDataSetText") cSSPModelsRes.MikeBoundaryConditionWebTideDataSetText = GetRandomString("", 20);
            if (OmitPropName != "MikeScenario") cSSPModelsRes.MikeScenario = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioAmbientSalinity_PSU") cSSPModelsRes.MikeScenarioAmbientSalinity_PSU = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioAmbientTemperature_C") cSSPModelsRes.MikeScenarioAmbientTemperature_C = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioDecayFactor_per_day") cSSPModelsRes.MikeScenarioDecayFactor_per_day = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioDecayFactorAmplitude") cSSPModelsRes.MikeScenarioDecayFactorAmplitude = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioDecayIsConstant") cSSPModelsRes.MikeScenarioDecayIsConstant = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioErrorInfo") cSSPModelsRes.MikeScenarioErrorInfo = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioEstimatedHydroFileSize") cSSPModelsRes.MikeScenarioEstimatedHydroFileSize = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioEstimatedTransFileSize") cSSPModelsRes.MikeScenarioEstimatedTransFileSize = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioHasErrors") cSSPModelsRes.MikeScenarioHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioLastUpdateContactTVItemID") cSSPModelsRes.MikeScenarioLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioLastUpdateContactTVText") cSSPModelsRes.MikeScenarioLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioLastUpdateDate_UTC") cSSPModelsRes.MikeScenarioLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioManningNumber") cSSPModelsRes.MikeScenarioManningNumber = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioEndDateTime_Local") cSSPModelsRes.MikeScenarioMikeScenarioEndDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioExecutionTime_min") cSSPModelsRes.MikeScenarioMikeScenarioExecutionTime_min = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioID") cSSPModelsRes.MikeScenarioMikeScenarioID = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioStartDateTime_Local") cSSPModelsRes.MikeScenarioMikeScenarioStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioStartExecutionDateTime_Local") cSSPModelsRes.MikeScenarioMikeScenarioStartExecutionDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioTVItemID") cSSPModelsRes.MikeScenarioMikeScenarioTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioMikeScenarioTVText") cSSPModelsRes.MikeScenarioMikeScenarioTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioNumberOfElements") cSSPModelsRes.MikeScenarioNumberOfElements = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioNumberOfHydroOutputParameters") cSSPModelsRes.MikeScenarioNumberOfHydroOutputParameters = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioNumberOfSigmaLayers") cSSPModelsRes.MikeScenarioNumberOfSigmaLayers = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioNumberOfTimeSteps") cSSPModelsRes.MikeScenarioNumberOfTimeSteps = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioNumberOfTransOutputParameters") cSSPModelsRes.MikeScenarioNumberOfTransOutputParameters = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioNumberOfZLayers") cSSPModelsRes.MikeScenarioNumberOfZLayers = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioParentMikeScenarioID") cSSPModelsRes.MikeScenarioParentMikeScenarioID = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioResultFrequency_min") cSSPModelsRes.MikeScenarioResultFrequency_min = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioScenarioStatus") cSSPModelsRes.MikeScenarioScenarioStatus = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioScenarioStatusText") cSSPModelsRes.MikeScenarioScenarioStatusText = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioWindDirection_deg") cSSPModelsRes.MikeScenarioWindDirection_deg = GetRandomString("", 20);
            if (OmitPropName != "MikeScenarioWindSpeed_km_h") cSSPModelsRes.MikeScenarioWindSpeed_km_h = GetRandomString("", 20);
            if (OmitPropName != "MikeSource") cSSPModelsRes.MikeSource = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceHasErrors") cSSPModelsRes.MikeSourceHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceInclude") cSSPModelsRes.MikeSourceInclude = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceIsContinuous") cSSPModelsRes.MikeSourceIsContinuous = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceIsRiver") cSSPModelsRes.MikeSourceIsRiver = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceLastUpdateContactTVItemID") cSSPModelsRes.MikeSourceLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceLastUpdateContactTVText") cSSPModelsRes.MikeSourceLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceLastUpdateDate_UTC") cSSPModelsRes.MikeSourceLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceMikeSourceID") cSSPModelsRes.MikeSourceMikeSourceID = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceMikeSourceTVItemID") cSSPModelsRes.MikeSourceMikeSourceTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceMikeSourceTVText") cSSPModelsRes.MikeSourceMikeSourceTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceSourceNumberString") cSSPModelsRes.MikeSourceSourceNumberString = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEnd") cSSPModelsRes.MikeSourceStartEnd = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndEndDateAndTime_Local") cSSPModelsRes.MikeSourceStartEndEndDateAndTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndHasErrors") cSSPModelsRes.MikeSourceStartEndHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndLastUpdateContactTVItemID") cSSPModelsRes.MikeSourceStartEndLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndLastUpdateContactTVText") cSSPModelsRes.MikeSourceStartEndLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndLastUpdateDate_UTC") cSSPModelsRes.MikeSourceStartEndLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndMikeSourceID") cSSPModelsRes.MikeSourceStartEndMikeSourceID = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndMikeSourceStartEndID") cSSPModelsRes.MikeSourceStartEndMikeSourceStartEndID = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourceFlowEnd_m3_day") cSSPModelsRes.MikeSourceStartEndSourceFlowEnd_m3_day = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourceFlowStart_m3_day") cSSPModelsRes.MikeSourceStartEndSourceFlowStart_m3_day = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourcePollutionEnd_MPN_100ml") cSSPModelsRes.MikeSourceStartEndSourcePollutionEnd_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourcePollutionStart_MPN_100ml") cSSPModelsRes.MikeSourceStartEndSourcePollutionStart_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourceSalinityEnd_PSU") cSSPModelsRes.MikeSourceStartEndSourceSalinityEnd_PSU = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourceSalinityStart_PSU") cSSPModelsRes.MikeSourceStartEndSourceSalinityStart_PSU = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourceTemperatureEnd_C") cSSPModelsRes.MikeSourceStartEndSourceTemperatureEnd_C = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndSourceTemperatureStart_C") cSSPModelsRes.MikeSourceStartEndSourceTemperatureStart_C = GetRandomString("", 20);
            if (OmitPropName != "MikeSourceStartEndStartDateAndTime_Local") cSSPModelsRes.MikeSourceStartEndStartDateAndTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameter") cSSPModelsRes.MWQMAnalysisReportParameter = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterAnalysisCalculationType") cSSPModelsRes.MWQMAnalysisReportParameterAnalysisCalculationType = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterAnalysisName") cSSPModelsRes.MWQMAnalysisReportParameterAnalysisName = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterAnalysisReportYear") cSSPModelsRes.MWQMAnalysisReportParameterAnalysisReportYear = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterDryLimit24h") cSSPModelsRes.MWQMAnalysisReportParameterDryLimit24h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterDryLimit48h") cSSPModelsRes.MWQMAnalysisReportParameterDryLimit48h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterDryLimit72h") cSSPModelsRes.MWQMAnalysisReportParameterDryLimit72h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterDryLimit96h") cSSPModelsRes.MWQMAnalysisReportParameterDryLimit96h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterEndDate") cSSPModelsRes.MWQMAnalysisReportParameterEndDate = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterFullYear") cSSPModelsRes.MWQMAnalysisReportParameterFullYear = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterHasErrors") cSSPModelsRes.MWQMAnalysisReportParameterHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterLastUpdateContactTVItemID") cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterLastUpdateContactTVText") cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterLastUpdateDate_UTC") cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterMidRangeNumberOfDays") cSSPModelsRes.MWQMAnalysisReportParameterMidRangeNumberOfDays = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterMWQMAnalysisReportParameterID") cSSPModelsRes.MWQMAnalysisReportParameterMWQMAnalysisReportParameterID = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterNumberOfRuns") cSSPModelsRes.MWQMAnalysisReportParameterNumberOfRuns = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterRunsToOmit") cSSPModelsRes.MWQMAnalysisReportParameterRunsToOmit = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage") cSSPModelsRes.MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterShortRangeNumberOfDays") cSSPModelsRes.MWQMAnalysisReportParameterShortRangeNumberOfDays = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterStartDate") cSSPModelsRes.MWQMAnalysisReportParameterStartDate = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterSubsectorTVItemID") cSSPModelsRes.MWQMAnalysisReportParameterSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterWetLimit24h") cSSPModelsRes.MWQMAnalysisReportParameterWetLimit24h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterWetLimit48h") cSSPModelsRes.MWQMAnalysisReportParameterWetLimit48h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterWetLimit72h") cSSPModelsRes.MWQMAnalysisReportParameterWetLimit72h = GetRandomString("", 20);
            if (OmitPropName != "MWQMAnalysisReportParameterWetLimit96h") cSSPModelsRes.MWQMAnalysisReportParameterWetLimit96h = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPN") cSSPModelsRes.MWQMLookupMPN = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNHasErrors") cSSPModelsRes.MWQMLookupMPNHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNLastUpdateContactTVItemID") cSSPModelsRes.MWQMLookupMPNLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNLastUpdateContactTVText") cSSPModelsRes.MWQMLookupMPNLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNLastUpdateDate_UTC") cSSPModelsRes.MWQMLookupMPNLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNMPN_100ml") cSSPModelsRes.MWQMLookupMPNMPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNMWQMLookupMPNID") cSSPModelsRes.MWQMLookupMPNMWQMLookupMPNID = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNTubes01") cSSPModelsRes.MWQMLookupMPNTubes01 = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNTubes1") cSSPModelsRes.MWQMLookupMPNTubes1 = GetRandomString("", 20);
            if (OmitPropName != "MWQMLookupMPNTubes10") cSSPModelsRes.MWQMLookupMPNTubes10 = GetRandomString("", 20);
            if (OmitPropName != "MWQMRun") cSSPModelsRes.MWQMRun = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunAnalyzeMethod") cSSPModelsRes.MWQMRunAnalyzeMethod = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunAnalyzeMethodText") cSSPModelsRes.MWQMRunAnalyzeMethodText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunDateTime_Local") cSSPModelsRes.MWQMRunDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunEndDateTime_Local") cSSPModelsRes.MWQMRunEndDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunHasErrors") cSSPModelsRes.MWQMRunHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local") cSSPModelsRes.MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local") cSSPModelsRes.MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local") cSSPModelsRes.MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLaboratory") cSSPModelsRes.MWQMRunLaboratory = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLaboratoryText") cSSPModelsRes.MWQMRunLaboratoryText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabReceivedDateTime_Local") cSSPModelsRes.MWQMRunLabReceivedDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabRunSampleApprovalDateTime_Local") cSSPModelsRes.MWQMRunLabRunSampleApprovalDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabSampleApprovalContactTVItemID") cSSPModelsRes.MWQMRunLabSampleApprovalContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLabSampleApprovalContactTVText") cSSPModelsRes.MWQMRunLabSampleApprovalContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguage") cSSPModelsRes.MWQMRunLanguage = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageHasErrors") cSSPModelsRes.MWQMRunLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageLanguage") cSSPModelsRes.MWQMRunLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageLanguageText") cSSPModelsRes.MWQMRunLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageLastUpdateContactTVItemID") cSSPModelsRes.MWQMRunLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageLastUpdateContactTVText") cSSPModelsRes.MWQMRunLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageLastUpdateDate_UTC") cSSPModelsRes.MWQMRunLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageMWQMRunID") cSSPModelsRes.MWQMRunLanguageMWQMRunID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageMWQMRunLanguageID") cSSPModelsRes.MWQMRunLanguageMWQMRunLanguageID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageRunComment") cSSPModelsRes.MWQMRunLanguageRunComment = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageRunWeatherComment") cSSPModelsRes.MWQMRunLanguageRunWeatherComment = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageTranslationStatusRunComment") cSSPModelsRes.MWQMRunLanguageTranslationStatusRunComment = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageTranslationStatusRunCommentText") cSSPModelsRes.MWQMRunLanguageTranslationStatusRunCommentText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageTranslationStatusRunWeatherComment") cSSPModelsRes.MWQMRunLanguageTranslationStatusRunWeatherComment = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLanguageTranslationStatusRunWeatherCommentText") cSSPModelsRes.MWQMRunLanguageTranslationStatusRunWeatherCommentText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLastUpdateContactTVItemID") cSSPModelsRes.MWQMRunLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLastUpdateContactTVText") cSSPModelsRes.MWQMRunLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunLastUpdateDate_UTC") cSSPModelsRes.MWQMRunLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunMWQMRunID") cSSPModelsRes.MWQMRunMWQMRunID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunMWQMRunTVItemID") cSSPModelsRes.MWQMRunMWQMRunTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunMWQMRunTVText") cSSPModelsRes.MWQMRunMWQMRunTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay0_mm") cSSPModelsRes.MWQMRunRainDay0_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay1_mm") cSSPModelsRes.MWQMRunRainDay1_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay10_mm") cSSPModelsRes.MWQMRunRainDay10_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay2_mm") cSSPModelsRes.MWQMRunRainDay2_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay3_mm") cSSPModelsRes.MWQMRunRainDay3_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay4_mm") cSSPModelsRes.MWQMRunRainDay4_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay5_mm") cSSPModelsRes.MWQMRunRainDay5_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay6_mm") cSSPModelsRes.MWQMRunRainDay6_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay7_mm") cSSPModelsRes.MWQMRunRainDay7_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay8_mm") cSSPModelsRes.MWQMRunRainDay8_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRainDay9_mm") cSSPModelsRes.MWQMRunRainDay9_mm = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRemoveFromStat") cSSPModelsRes.MWQMRunRemoveFromStat = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRunNumber") cSSPModelsRes.MWQMRunRunNumber = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRunSampleType") cSSPModelsRes.MWQMRunRunSampleType = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunRunSampleTypeText") cSSPModelsRes.MWQMRunRunSampleTypeText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSampleCrewInitials") cSSPModelsRes.MWQMRunSampleCrewInitials = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSampleMatrix") cSSPModelsRes.MWQMRunSampleMatrix = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSampleMatrixText") cSSPModelsRes.MWQMRunSampleMatrixText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSampleStatus") cSSPModelsRes.MWQMRunSampleStatus = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSampleStatusText") cSSPModelsRes.MWQMRunSampleStatusText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSeaStateAtEnd_BeaufortScale") cSSPModelsRes.MWQMRunSeaStateAtEnd_BeaufortScale = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSeaStateAtEnd_BeaufortScaleText") cSSPModelsRes.MWQMRunSeaStateAtEnd_BeaufortScaleText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSeaStateAtStart_BeaufortScale") cSSPModelsRes.MWQMRunSeaStateAtStart_BeaufortScale = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSeaStateAtStart_BeaufortScaleText") cSSPModelsRes.MWQMRunSeaStateAtStart_BeaufortScaleText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunStartDateTime_Local") cSSPModelsRes.MWQMRunStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSubsectorTVItemID") cSSPModelsRes.MWQMRunSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunSubsectorTVText") cSSPModelsRes.MWQMRunSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunTemperatureControl1_C") cSSPModelsRes.MWQMRunTemperatureControl1_C = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunTemperatureControl2_C") cSSPModelsRes.MWQMRunTemperatureControl2_C = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunTide_End") cSSPModelsRes.MWQMRunTide_End = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunTide_EndText") cSSPModelsRes.MWQMRunTide_EndText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunTide_Start") cSSPModelsRes.MWQMRunTide_Start = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunTide_StartText") cSSPModelsRes.MWQMRunTide_StartText = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunWaterLevelAtBrook_m") cSSPModelsRes.MWQMRunWaterLevelAtBrook_m = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunWaveHightAtEnd_m") cSSPModelsRes.MWQMRunWaveHightAtEnd_m = GetRandomString("", 20);
            if (OmitPropName != "MWQMRunWaveHightAtStart_m") cSSPModelsRes.MWQMRunWaveHightAtStart_m = GetRandomString("", 20);
            if (OmitPropName != "MWQMSample") cSSPModelsRes.MWQMSample = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleDepth_m") cSSPModelsRes.MWQMSampleDepth_m = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleDuplicateItem") cSSPModelsRes.MWQMSampleDuplicateItem = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleDuplicateItemDuplicateSite") cSSPModelsRes.MWQMSampleDuplicateItemDuplicateSite = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleDuplicateItemHasErrors") cSSPModelsRes.MWQMSampleDuplicateItemHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleDuplicateItemParentSite") cSSPModelsRes.MWQMSampleDuplicateItemParentSite = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleFecCol_MPN_100ml") cSSPModelsRes.MWQMSampleFecCol_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleHasErrors") cSSPModelsRes.MWQMSampleHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguage") cSSPModelsRes.MWQMSampleLanguage = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageHasErrors") cSSPModelsRes.MWQMSampleLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageLanguage") cSSPModelsRes.MWQMSampleLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageLanguageText") cSSPModelsRes.MWQMSampleLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageLastUpdateContactTVItemID") cSSPModelsRes.MWQMSampleLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageLastUpdateContactTVText") cSSPModelsRes.MWQMSampleLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageLastUpdateDate_UTC") cSSPModelsRes.MWQMSampleLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageMWQMSampleID") cSSPModelsRes.MWQMSampleLanguageMWQMSampleID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageMWQMSampleLanguageID") cSSPModelsRes.MWQMSampleLanguageMWQMSampleLanguageID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageMWQMSampleNote") cSSPModelsRes.MWQMSampleLanguageMWQMSampleNote = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageTranslationStatus") cSSPModelsRes.MWQMSampleLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLanguageTranslationStatusText") cSSPModelsRes.MWQMSampleLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLastUpdateContactTVItemID") cSSPModelsRes.MWQMSampleLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLastUpdateContactTVText") cSSPModelsRes.MWQMSampleLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleLastUpdateDate_UTC") cSSPModelsRes.MWQMSampleLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleMWQMRunTVItemID") cSSPModelsRes.MWQMSampleMWQMRunTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleMWQMRunTVText") cSSPModelsRes.MWQMSampleMWQMRunTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleMWQMSampleID") cSSPModelsRes.MWQMSampleMWQMSampleID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleMWQMSiteTVItemID") cSSPModelsRes.MWQMSampleMWQMSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleMWQMSiteTVText") cSSPModelsRes.MWQMSampleMWQMSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSamplePH") cSSPModelsRes.MWQMSamplePH = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleProcessedBy") cSSPModelsRes.MWQMSampleProcessedBy = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleSalinity_PPT") cSSPModelsRes.MWQMSampleSalinity_PPT = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleSampleDateTime_Local") cSSPModelsRes.MWQMSampleSampleDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleSampleType_old") cSSPModelsRes.MWQMSampleSampleType_old = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleSampleType_oldText") cSSPModelsRes.MWQMSampleSampleType_oldText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleSampleTypesText") cSSPModelsRes.MWQMSampleSampleTypesText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleTube_0_1") cSSPModelsRes.MWQMSampleTube_0_1 = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleTube_1_0") cSSPModelsRes.MWQMSampleTube_1_0 = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleTube_10") cSSPModelsRes.MWQMSampleTube_10 = GetRandomString("", 20);
            if (OmitPropName != "MWQMSampleWaterTemp_C") cSSPModelsRes.MWQMSampleWaterTemp_C = GetRandomString("", 20);
            if (OmitPropName != "MWQMSite") cSSPModelsRes.MWQMSite = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteHasErrors") cSSPModelsRes.MWQMSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteLastUpdateContactTVItemID") cSSPModelsRes.MWQMSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteLastUpdateContactTVText") cSSPModelsRes.MWQMSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteLastUpdateDate_UTC") cSSPModelsRes.MWQMSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteDescription") cSSPModelsRes.MWQMSiteMWQMSiteDescription = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteID") cSSPModelsRes.MWQMSiteMWQMSiteID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteLatestClassification") cSSPModelsRes.MWQMSiteMWQMSiteLatestClassification = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteLatestClassificationText") cSSPModelsRes.MWQMSiteMWQMSiteLatestClassificationText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteNumber") cSSPModelsRes.MWQMSiteMWQMSiteNumber = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteTVItemID") cSSPModelsRes.MWQMSiteMWQMSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteMWQMSiteTVText") cSSPModelsRes.MWQMSiteMWQMSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteOrdinal") cSSPModelsRes.MWQMSiteOrdinal = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFC") cSSPModelsRes.MWQMSiteSampleFC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCDepth") cSSPModelsRes.MWQMSiteSampleFCDepth = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCDO") cSSPModelsRes.MWQMSiteSampleFCDO = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCError") cSSPModelsRes.MWQMSiteSampleFCError = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCFC") cSSPModelsRes.MWQMSiteSampleFCFC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCGeoMean") cSSPModelsRes.MWQMSiteSampleFCGeoMean = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCHasErrors") cSSPModelsRes.MWQMSiteSampleFCHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCMaxFC") cSSPModelsRes.MWQMSiteSampleFCMaxFC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCMedian") cSSPModelsRes.MWQMSiteSampleFCMedian = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCMinFC") cSSPModelsRes.MWQMSiteSampleFCMinFC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCP90") cSSPModelsRes.MWQMSiteSampleFCP90 = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCPercOver260") cSSPModelsRes.MWQMSiteSampleFCPercOver260 = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCPercOver43") cSSPModelsRes.MWQMSiteSampleFCPercOver43 = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCPH") cSSPModelsRes.MWQMSiteSampleFCPH = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCSal") cSSPModelsRes.MWQMSiteSampleFCSal = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCSampCount") cSSPModelsRes.MWQMSiteSampleFCSampCount = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCSampleDate") cSSPModelsRes.MWQMSiteSampleFCSampleDate = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteSampleFCTemp") cSSPModelsRes.MWQMSiteSampleFCTemp = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDate") cSSPModelsRes.MWQMSiteStartEndDate = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateEndDate") cSSPModelsRes.MWQMSiteStartEndDateEndDate = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateHasErrors") cSSPModelsRes.MWQMSiteStartEndDateHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateLastUpdateContactTVItemID") cSSPModelsRes.MWQMSiteStartEndDateLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateLastUpdateContactTVText") cSSPModelsRes.MWQMSiteStartEndDateLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateLastUpdateDate_UTC") cSSPModelsRes.MWQMSiteStartEndDateLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateMWQMSiteStartEndDateID") cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteStartEndDateID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateMWQMSiteTVItemID") cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateMWQMSiteTVText") cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSiteStartEndDateStartDate") cSSPModelsRes.MWQMSiteStartEndDateStartDate = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsector") cSSPModelsRes.MWQMSubsector = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorHasErrors") cSSPModelsRes.MWQMSubsectorHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguage") cSSPModelsRes.MWQMSubsectorLanguage = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageHasErrors") cSSPModelsRes.MWQMSubsectorLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageLanguage") cSSPModelsRes.MWQMSubsectorLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageLanguageText") cSSPModelsRes.MWQMSubsectorLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageLastUpdateContactTVItemID") cSSPModelsRes.MWQMSubsectorLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageLastUpdateContactTVText") cSSPModelsRes.MWQMSubsectorLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageLastUpdateDate_UTC") cSSPModelsRes.MWQMSubsectorLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageLogBook") cSSPModelsRes.MWQMSubsectorLanguageLogBook = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageMWQMSubsectorID") cSSPModelsRes.MWQMSubsectorLanguageMWQMSubsectorID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageMWQMSubsectorLanguageID") cSSPModelsRes.MWQMSubsectorLanguageMWQMSubsectorLanguageID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageSubsectorDesc") cSSPModelsRes.MWQMSubsectorLanguageSubsectorDesc = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageTranslationStatusLogBook") cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusLogBook = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageTranslationStatusLogBookText") cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusLogBookText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageTranslationStatusSubsectorDesc") cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusSubsectorDesc = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLanguageTranslationStatusSubsectorDescText") cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusSubsectorDescText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLastUpdateContactTVItemID") cSSPModelsRes.MWQMSubsectorLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLastUpdateContactTVText") cSSPModelsRes.MWQMSubsectorLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorLastUpdateDate_UTC") cSSPModelsRes.MWQMSubsectorLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorMWQMSubsectorID") cSSPModelsRes.MWQMSubsectorMWQMSubsectorID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorMWQMSubsectorTVItemID") cSSPModelsRes.MWQMSubsectorMWQMSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorSubsectorHistoricKey") cSSPModelsRes.MWQMSubsectorSubsectorHistoricKey = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorSubsectorTVText") cSSPModelsRes.MWQMSubsectorSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "MWQMSubsectorTideLocationSIDText") cSSPModelsRes.MWQMSubsectorTideLocationSIDText = GetRandomString("", 20);
            if (OmitPropName != "NewContact") cSSPModelsRes.NewContact = GetRandomString("", 20);
            if (OmitPropName != "NewContactContactTitle") cSSPModelsRes.NewContactContactTitle = GetRandomString("", 20);
            if (OmitPropName != "NewContactContactTitleText") cSSPModelsRes.NewContactContactTitleText = GetRandomString("", 20);
            if (OmitPropName != "NewContactFirstName") cSSPModelsRes.NewContactFirstName = GetRandomString("", 20);
            if (OmitPropName != "NewContactHasErrors") cSSPModelsRes.NewContactHasErrors = GetRandomString("", 20);
            if (OmitPropName != "NewContactInitial") cSSPModelsRes.NewContactInitial = GetRandomString("", 20);
            if (OmitPropName != "NewContactLastName") cSSPModelsRes.NewContactLastName = GetRandomString("", 20);
            if (OmitPropName != "NewContactLoginEmail") cSSPModelsRes.NewContactLoginEmail = GetRandomString("", 20);
            if (OmitPropName != "Node") cSSPModelsRes.Node = GetRandomString("", 20);
            if (OmitPropName != "NodeCode") cSSPModelsRes.NodeCode = GetRandomString("", 20);
            if (OmitPropName != "NodeConnectNodeList") cSSPModelsRes.NodeConnectNodeList = GetRandomString("", 20);
            if (OmitPropName != "NodeElementList") cSSPModelsRes.NodeElementList = GetRandomString("", 20);
            if (OmitPropName != "NodeHasErrors") cSSPModelsRes.NodeHasErrors = GetRandomString("", 20);
            if (OmitPropName != "NodeID") cSSPModelsRes.NodeID = GetRandomString("", 20);
            if (OmitPropName != "NodeLayer") cSSPModelsRes.NodeLayer = GetRandomString("", 20);
            if (OmitPropName != "NodeLayerHasErrors") cSSPModelsRes.NodeLayerHasErrors = GetRandomString("", 20);
            if (OmitPropName != "NodeLayerLayer") cSSPModelsRes.NodeLayerLayer = GetRandomString("", 20);
            if (OmitPropName != "NodeLayerNode") cSSPModelsRes.NodeLayerNode = GetRandomString("", 20);
            if (OmitPropName != "NodeLayerZ") cSSPModelsRes.NodeLayerZ = GetRandomString("", 20);
            if (OmitPropName != "NodeValue") cSSPModelsRes.NodeValue = GetRandomString("", 20);
            if (OmitPropName != "NodeX") cSSPModelsRes.NodeX = GetRandomString("", 20);
            if (OmitPropName != "NodeY") cSSPModelsRes.NodeY = GetRandomString("", 20);
            if (OmitPropName != "NodeZ") cSSPModelsRes.NodeZ = GetRandomString("", 20);
            if (OmitPropName != "OtherFilesToUpload") cSSPModelsRes.OtherFilesToUpload = GetRandomString("", 20);
            if (OmitPropName != "OtherFilesToUploadError") cSSPModelsRes.OtherFilesToUploadError = GetRandomString("", 20);
            if (OmitPropName != "OtherFilesToUploadHasErrors") cSSPModelsRes.OtherFilesToUploadHasErrors = GetRandomString("", 20);
            if (OmitPropName != "OtherFilesToUploadMikeScenarioID") cSSPModelsRes.OtherFilesToUploadMikeScenarioID = GetRandomString("", 20);
            if (OmitPropName != "OtherFilesToUploadTVFileList") cSSPModelsRes.OtherFilesToUploadTVFileList = GetRandomString("", 20);
            if (OmitPropName != "PolSourceInactiveReasonEnumTextAndID") cSSPModelsRes.PolSourceInactiveReasonEnumTextAndID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceInactiveReasonEnumTextAndIDHasErrors") cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolSourceInactiveReasonEnumTextAndIDID") cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceInactiveReasonEnumTextAndIDText") cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservation") cSSPModelsRes.PolSourceObservation = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationContactTVItemID") cSSPModelsRes.PolSourceObservationContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationContactTVText") cSSPModelsRes.PolSourceObservationContactTVText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationHasErrors") cSSPModelsRes.PolSourceObservationHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssue") cSSPModelsRes.PolSourceObservationIssue = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssueHasErrors") cSSPModelsRes.PolSourceObservationIssueHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssueLastUpdateContactTVItemID") cSSPModelsRes.PolSourceObservationIssueLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssueLastUpdateContactTVText") cSSPModelsRes.PolSourceObservationIssueLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssueLastUpdateDate_UTC") cSSPModelsRes.PolSourceObservationIssueLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssueObservationInfo") cSSPModelsRes.PolSourceObservationIssueObservationInfo = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssueOrdinal") cSSPModelsRes.PolSourceObservationIssueOrdinal = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssuePolSourceObservationID") cSSPModelsRes.PolSourceObservationIssuePolSourceObservationID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationIssuePolSourceObservationIssueID") cSSPModelsRes.PolSourceObservationIssuePolSourceObservationIssueID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationLastUpdateContactTVItemID") cSSPModelsRes.PolSourceObservationLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationLastUpdateContactTVText") cSSPModelsRes.PolSourceObservationLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationLastUpdateDate_UTC") cSSPModelsRes.PolSourceObservationLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationObservation_ToBeDeleted") cSSPModelsRes.PolSourceObservationObservation_ToBeDeleted = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationObservationDate_Local") cSSPModelsRes.PolSourceObservationObservationDate_Local = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationPolSourceObservationID") cSSPModelsRes.PolSourceObservationPolSourceObservationID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationPolSourceSiteID") cSSPModelsRes.PolSourceObservationPolSourceSiteID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObservationPolSourceSiteTVText") cSSPModelsRes.PolSourceObservationPolSourceSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoChild") cSSPModelsRes.PolSourceObsInfoChild = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoChildHasErrors") cSSPModelsRes.PolSourceObsInfoChildHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoChildPolSourceObsInfo") cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfo = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoChildPolSourceObsInfoChildStart") cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoChildStart = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoChildPolSourceObsInfoChildStartText") cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoChildStartText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoChildPolSourceObsInfoText") cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoEnumTextAndID") cSSPModelsRes.PolSourceObsInfoEnumTextAndID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoEnumTextAndIDHasErrors") cSSPModelsRes.PolSourceObsInfoEnumTextAndIDHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoEnumTextAndIDID") cSSPModelsRes.PolSourceObsInfoEnumTextAndIDID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceObsInfoEnumTextAndIDText") cSSPModelsRes.PolSourceObsInfoEnumTextAndIDText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSite") cSSPModelsRes.PolSourceSite = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteCivicAddressTVItemID") cSSPModelsRes.PolSourceSiteCivicAddressTVItemID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteHasErrors") cSSPModelsRes.PolSourceSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteInactiveReason") cSSPModelsRes.PolSourceSiteInactiveReason = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteInactiveReasonText") cSSPModelsRes.PolSourceSiteInactiveReasonText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteIsPointSource") cSSPModelsRes.PolSourceSiteIsPointSource = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteLastUpdateContactTVItemID") cSSPModelsRes.PolSourceSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteLastUpdateContactTVText") cSSPModelsRes.PolSourceSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteLastUpdateDate_UTC") cSSPModelsRes.PolSourceSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteOldsiteid") cSSPModelsRes.PolSourceSiteOldsiteid = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSitePolSourceSiteID") cSSPModelsRes.PolSourceSitePolSourceSiteID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSitePolSourceSiteTVItemID") cSSPModelsRes.PolSourceSitePolSourceSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSitePolSourceSiteTVText") cSSPModelsRes.PolSourceSitePolSourceSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteSite") cSSPModelsRes.PolSourceSiteSite = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteSiteID") cSSPModelsRes.PolSourceSiteSiteID = GetRandomString("", 20);
            if (OmitPropName != "PolSourceSiteTemp_Locator_CanDelete") cSSPModelsRes.PolSourceSiteTemp_Locator_CanDelete = GetRandomString("", 20);
            if (OmitPropName != "PolyPoint") cSSPModelsRes.PolyPoint = GetRandomString("", 20);
            if (OmitPropName != "PolyPointHasErrors") cSSPModelsRes.PolyPointHasErrors = GetRandomString("", 20);
            if (OmitPropName != "PolyPointXCoord") cSSPModelsRes.PolyPointXCoord = GetRandomString("", 20);
            if (OmitPropName != "PolyPointYCoord") cSSPModelsRes.PolyPointYCoord = GetRandomString("", 20);
            if (OmitPropName != "PolyPointZ") cSSPModelsRes.PolyPointZ = GetRandomString("", 20);
            if (OmitPropName != "RainExceedance") cSSPModelsRes.RainExceedance = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceClimateSiteTVItemIDs") cSSPModelsRes.RainExceedanceClimateSiteTVItemIDs = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceDaysPriorToStart") cSSPModelsRes.RainExceedanceDaysPriorToStart = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceEmailDistributionListIDs") cSSPModelsRes.RainExceedanceEmailDistributionListIDs = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceEndDate_Local") cSSPModelsRes.RainExceedanceEndDate_Local = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceHasErrors") cSSPModelsRes.RainExceedanceHasErrors = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceLastUpdateContactTVItemID") cSSPModelsRes.RainExceedanceLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceLastUpdateContactTVText") cSSPModelsRes.RainExceedanceLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceLastUpdateDate_UTC") cSSPModelsRes.RainExceedanceLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceProvinceTVItemIDs") cSSPModelsRes.RainExceedanceProvinceTVItemIDs = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceRainExceedanceID") cSSPModelsRes.RainExceedanceRainExceedanceID = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceRainExtreme_mm") cSSPModelsRes.RainExceedanceRainExtreme_mm = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceRainMaximum_mm") cSSPModelsRes.RainExceedanceRainMaximum_mm = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceRepeatEveryYear") cSSPModelsRes.RainExceedanceRepeatEveryYear = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceStartDate_Local") cSSPModelsRes.RainExceedanceStartDate_Local = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceSubsectorTVItemIDs") cSSPModelsRes.RainExceedanceSubsectorTVItemIDs = GetRandomString("", 20);
            if (OmitPropName != "RainExceedanceYearRound") cSSPModelsRes.RainExceedanceYearRound = GetRandomString("", 20);
            if (OmitPropName != "RatingCurve") cSSPModelsRes.RatingCurve = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveHasErrors") cSSPModelsRes.RatingCurveHasErrors = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveHydrometricSiteID") cSSPModelsRes.RatingCurveHydrometricSiteID = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveLastUpdateContactTVItemID") cSSPModelsRes.RatingCurveLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveLastUpdateContactTVText") cSSPModelsRes.RatingCurveLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveLastUpdateDate_UTC") cSSPModelsRes.RatingCurveLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveRatingCurveID") cSSPModelsRes.RatingCurveRatingCurveID = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveRatingCurveNumber") cSSPModelsRes.RatingCurveRatingCurveNumber = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValue") cSSPModelsRes.RatingCurveValue = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueDischargeValue_m3_s") cSSPModelsRes.RatingCurveValueDischargeValue_m3_s = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueHasErrors") cSSPModelsRes.RatingCurveValueHasErrors = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueLastUpdateContactTVItemID") cSSPModelsRes.RatingCurveValueLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueLastUpdateContactTVText") cSSPModelsRes.RatingCurveValueLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueLastUpdateDate_UTC") cSSPModelsRes.RatingCurveValueLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueRatingCurveID") cSSPModelsRes.RatingCurveValueRatingCurveID = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueRatingCurveValueID") cSSPModelsRes.RatingCurveValueRatingCurveValueID = GetRandomString("", 20);
            if (OmitPropName != "RatingCurveValueStageValue_m") cSSPModelsRes.RatingCurveValueStageValue_m = GetRandomString("", 20);
            if (OmitPropName != "Register") cSSPModelsRes.Register = GetRandomString("", 20);
            if (OmitPropName != "RegisterConfirmPassword") cSSPModelsRes.RegisterConfirmPassword = GetRandomString("", 20);
            if (OmitPropName != "RegisterFirstName") cSSPModelsRes.RegisterFirstName = GetRandomString("", 20);
            if (OmitPropName != "RegisterHasErrors") cSSPModelsRes.RegisterHasErrors = GetRandomString("", 20);
            if (OmitPropName != "RegisterInitial") cSSPModelsRes.RegisterInitial = GetRandomString("", 20);
            if (OmitPropName != "RegisterLastName") cSSPModelsRes.RegisterLastName = GetRandomString("", 20);
            if (OmitPropName != "RegisterLoginEmail") cSSPModelsRes.RegisterLoginEmail = GetRandomString("", 20);
            if (OmitPropName != "RegisterPassword") cSSPModelsRes.RegisterPassword = GetRandomString("", 20);
            if (OmitPropName != "RegisterWebName") cSSPModelsRes.RegisterWebName = GetRandomString("", 20);
            if (OmitPropName != "ResetPassword") cSSPModelsRes.ResetPassword = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordCode") cSSPModelsRes.ResetPasswordCode = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordConfirmPassword") cSSPModelsRes.ResetPasswordConfirmPassword = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordEmail") cSSPModelsRes.ResetPasswordEmail = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordExpireDate_Local") cSSPModelsRes.ResetPasswordExpireDate_Local = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordHasErrors") cSSPModelsRes.ResetPasswordHasErrors = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordLastUpdateContactTVItemID") cSSPModelsRes.ResetPasswordLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordLastUpdateContactTVText") cSSPModelsRes.ResetPasswordLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordLastUpdateDate_UTC") cSSPModelsRes.ResetPasswordLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordPassword") cSSPModelsRes.ResetPasswordPassword = GetRandomString("", 20);
            if (OmitPropName != "ResetPasswordResetPasswordID") cSSPModelsRes.ResetPasswordResetPasswordID = GetRandomString("", 20);
            if (OmitPropName != "RTBStringPos") cSSPModelsRes.RTBStringPos = GetRandomString("", 20);
            if (OmitPropName != "RTBStringPosEndPos") cSSPModelsRes.RTBStringPosEndPos = GetRandomString("", 20);
            if (OmitPropName != "RTBStringPosHasErrors") cSSPModelsRes.RTBStringPosHasErrors = GetRandomString("", 20);
            if (OmitPropName != "RTBStringPosStartPos") cSSPModelsRes.RTBStringPosStartPos = GetRandomString("", 20);
            if (OmitPropName != "RTBStringPosTagText") cSSPModelsRes.RTBStringPosTagText = GetRandomString("", 20);
            if (OmitPropName != "RTBStringPosText") cSSPModelsRes.RTBStringPosText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlan") cSSPModelsRes.SamplingPlan = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAccessCode") cSSPModelsRes.SamplingPlanAccessCode = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAndFilesLabSheetCount") cSSPModelsRes.SamplingPlanAndFilesLabSheetCount = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAndFilesLabSheetCountHasErrors") cSSPModelsRes.SamplingPlanAndFilesLabSheetCountHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount") cSSPModelsRes.SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount") cSSPModelsRes.SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAndFilesLabSheetCountSamplingPlan") cSSPModelsRes.SamplingPlanAndFilesLabSheetCountSamplingPlan = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT") cSSPModelsRes.SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanApprovalCode") cSSPModelsRes.SamplingPlanApprovalCode = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanCreatorTVItemID") cSSPModelsRes.SamplingPlanCreatorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanCreatorTVText") cSSPModelsRes.SamplingPlanCreatorTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanDailyDuplicatePrecisionCriteria") cSSPModelsRes.SamplingPlanDailyDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanForGroupName") cSSPModelsRes.SamplingPlanForGroupName = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanHasErrors") cSSPModelsRes.SamplingPlanHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanIncludeLaboratoryQAQC") cSSPModelsRes.SamplingPlanIncludeLaboratoryQAQC = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanIntertechDuplicatePrecisionCriteria") cSSPModelsRes.SamplingPlanIntertechDuplicatePrecisionCriteria = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanLabSheetType") cSSPModelsRes.SamplingPlanLabSheetType = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanLabSheetTypeText") cSSPModelsRes.SamplingPlanLabSheetTypeText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanLastUpdateContactTVItemID") cSSPModelsRes.SamplingPlanLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanLastUpdateContactTVText") cSSPModelsRes.SamplingPlanLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanLastUpdateDate_UTC") cSSPModelsRes.SamplingPlanLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanProvinceTVItemID") cSSPModelsRes.SamplingPlanProvinceTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanProvinceTVText") cSSPModelsRes.SamplingPlanProvinceTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSampleType") cSSPModelsRes.SamplingPlanSampleType = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSampleTypeText") cSSPModelsRes.SamplingPlanSampleTypeText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSamplingPlanFileTVItemID") cSSPModelsRes.SamplingPlanSamplingPlanFileTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSamplingPlanFileTVText") cSSPModelsRes.SamplingPlanSamplingPlanFileTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSamplingPlanID") cSSPModelsRes.SamplingPlanSamplingPlanID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSamplingPlanName") cSSPModelsRes.SamplingPlanSamplingPlanName = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSamplingPlanType") cSSPModelsRes.SamplingPlanSamplingPlanType = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSamplingPlanTypeText") cSSPModelsRes.SamplingPlanSamplingPlanTypeText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsector") cSSPModelsRes.SamplingPlanSubsector = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorHasErrors") cSSPModelsRes.SamplingPlanSubsectorHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorLastUpdateContactTVItemID") cSSPModelsRes.SamplingPlanSubsectorLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorLastUpdateContactTVText") cSSPModelsRes.SamplingPlanSubsectorLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorLastUpdateDate_UTC") cSSPModelsRes.SamplingPlanSubsectorLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSamplingPlanID") cSSPModelsRes.SamplingPlanSubsectorSamplingPlanID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSamplingPlanSubsectorID") cSSPModelsRes.SamplingPlanSubsectorSamplingPlanSubsectorID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSite") cSSPModelsRes.SamplingPlanSubsectorSite = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteHasErrors") cSSPModelsRes.SamplingPlanSubsectorSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteIsDuplicate") cSSPModelsRes.SamplingPlanSubsectorSiteIsDuplicate = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteLastUpdateContactTVItemID") cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteLastUpdateContactTVText") cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteLastUpdateDate_UTC") cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteMWQMSiteTVItemID") cSSPModelsRes.SamplingPlanSubsectorSiteMWQMSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteMWQMSiteTVText") cSSPModelsRes.SamplingPlanSubsectorSiteMWQMSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteSamplingPlanSubsectorID") cSSPModelsRes.SamplingPlanSubsectorSiteSamplingPlanSubsectorID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID") cSSPModelsRes.SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSubsectorTVItemID") cSSPModelsRes.SamplingPlanSubsectorSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanSubsectorSubsectorTVText") cSSPModelsRes.SamplingPlanSubsectorSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "SamplingPlanYear") cSSPModelsRes.SamplingPlanYear = GetRandomString("", 20);
            if (OmitPropName != "Search") cSSPModelsRes.Search = GetRandomString("", 20);
            if (OmitPropName != "SearchHasErrors") cSSPModelsRes.SearchHasErrors = GetRandomString("", 20);
            if (OmitPropName != "Searchid") cSSPModelsRes.Searchid = GetRandomString("", 20);
            if (OmitPropName != "SearchTagAndTerms") cSSPModelsRes.SearchTagAndTerms = GetRandomString("", 20);
            if (OmitPropName != "SearchTagAndTermsHasErrors") cSSPModelsRes.SearchTagAndTermsHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SearchTagAndTermsSearchTag") cSSPModelsRes.SearchTagAndTermsSearchTag = GetRandomString("", 20);
            if (OmitPropName != "SearchTagAndTermsSearchTagText") cSSPModelsRes.SearchTagAndTermsSearchTagText = GetRandomString("", 20);
            if (OmitPropName != "SearchTagAndTermsSearchTermList") cSSPModelsRes.SearchTagAndTermsSearchTermList = GetRandomString("", 20);
            if (OmitPropName != "Searchvalue") cSSPModelsRes.Searchvalue = GetRandomString("", 20);
            if (OmitPropName != "Spill") cSSPModelsRes.Spill = GetRandomString("", 20);
            if (OmitPropName != "SpillAverageFlow_m3_day") cSSPModelsRes.SpillAverageFlow_m3_day = GetRandomString("", 20);
            if (OmitPropName != "SpillEndDateTime_Local") cSSPModelsRes.SpillEndDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "SpillHasErrors") cSSPModelsRes.SpillHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SpillInfrastructureTVItemID") cSSPModelsRes.SpillInfrastructureTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SpillInfrastructureTVText") cSSPModelsRes.SpillInfrastructureTVText = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguage") cSSPModelsRes.SpillLanguage = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageHasErrors") cSSPModelsRes.SpillLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageLanguage") cSSPModelsRes.SpillLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageLanguageText") cSSPModelsRes.SpillLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageLastUpdateContactTVItemID") cSSPModelsRes.SpillLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageLastUpdateContactTVText") cSSPModelsRes.SpillLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageLastUpdateDate_UTC") cSSPModelsRes.SpillLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageSpillComment") cSSPModelsRes.SpillLanguageSpillComment = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageSpillID") cSSPModelsRes.SpillLanguageSpillID = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageSpillLanguageID") cSSPModelsRes.SpillLanguageSpillLanguageID = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageTranslationStatus") cSSPModelsRes.SpillLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "SpillLanguageTranslationStatusText") cSSPModelsRes.SpillLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "SpillLastUpdateContactTVItemID") cSSPModelsRes.SpillLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SpillLastUpdateContactTVText") cSSPModelsRes.SpillLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "SpillLastUpdateDate_UTC") cSSPModelsRes.SpillLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "SpillMunicipalityTVItemID") cSSPModelsRes.SpillMunicipalityTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SpillMunicipalityTVText") cSSPModelsRes.SpillMunicipalityTVText = GetRandomString("", 20);
            if (OmitPropName != "SpillSpillID") cSSPModelsRes.SpillSpillID = GetRandomString("", 20);
            if (OmitPropName != "SpillStartDateTime_Local") cSSPModelsRes.SpillStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "SubsectorMWQMSampleYear") cSSPModelsRes.SubsectorMWQMSampleYear = GetRandomString("", 20);
            if (OmitPropName != "SubsectorMWQMSampleYearEarliestDate") cSSPModelsRes.SubsectorMWQMSampleYearEarliestDate = GetRandomString("", 20);
            if (OmitPropName != "SubsectorMWQMSampleYearHasErrors") cSSPModelsRes.SubsectorMWQMSampleYearHasErrors = GetRandomString("", 20);
            if (OmitPropName != "SubsectorMWQMSampleYearLatestDate") cSSPModelsRes.SubsectorMWQMSampleYearLatestDate = GetRandomString("", 20);
            if (OmitPropName != "SubsectorMWQMSampleYearSubsectorTVItemID") cSSPModelsRes.SubsectorMWQMSampleYearSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "SubsectorMWQMSampleYearYear") cSSPModelsRes.SubsectorMWQMSampleYearYear = GetRandomString("", 20);
            if (OmitPropName != "Tel") cSSPModelsRes.Tel = GetRandomString("", 20);
            if (OmitPropName != "TelHasErrors") cSSPModelsRes.TelHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TelLastUpdateContactTVItemID") cSSPModelsRes.TelLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TelLastUpdateContactTVText") cSSPModelsRes.TelLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TelLastUpdateDate_UTC") cSSPModelsRes.TelLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TelTelID") cSSPModelsRes.TelTelID = GetRandomString("", 20);
            if (OmitPropName != "TelTelNumber") cSSPModelsRes.TelTelNumber = GetRandomString("", 20);
            if (OmitPropName != "TelTelTVItemID") cSSPModelsRes.TelTelTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TelTelTVText") cSSPModelsRes.TelTelTVText = GetRandomString("", 20);
            if (OmitPropName != "TelTelType") cSSPModelsRes.TelTelType = GetRandomString("", 20);
            if (OmitPropName != "TelTelTypeText") cSSPModelsRes.TelTelTypeText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValue") cSSPModelsRes.TideDataValue = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueDateTime_Local") cSSPModelsRes.TideDataValueDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueDepth_m") cSSPModelsRes.TideDataValueDepth_m = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueHasErrors") cSSPModelsRes.TideDataValueHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueKeep") cSSPModelsRes.TideDataValueKeep = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueLastUpdateContactTVItemID") cSSPModelsRes.TideDataValueLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueLastUpdateContactTVText") cSSPModelsRes.TideDataValueLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueLastUpdateDate_UTC") cSSPModelsRes.TideDataValueLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueStorageDataType") cSSPModelsRes.TideDataValueStorageDataType = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueStorageDataTypeText") cSSPModelsRes.TideDataValueStorageDataTypeText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideDataType") cSSPModelsRes.TideDataValueTideDataType = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideDataTypeText") cSSPModelsRes.TideDataValueTideDataTypeText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideDataValueID") cSSPModelsRes.TideDataValueTideDataValueID = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideEnd") cSSPModelsRes.TideDataValueTideEnd = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideEndText") cSSPModelsRes.TideDataValueTideEndText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideSiteTVItemID") cSSPModelsRes.TideDataValueTideSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideSiteTVText") cSSPModelsRes.TideDataValueTideSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideStart") cSSPModelsRes.TideDataValueTideStart = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueTideStartText") cSSPModelsRes.TideDataValueTideStartText = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueUVelocity_m_s") cSSPModelsRes.TideDataValueUVelocity_m_s = GetRandomString("", 20);
            if (OmitPropName != "TideDataValueVVelocity_m_s") cSSPModelsRes.TideDataValueVVelocity_m_s = GetRandomString("", 20);
            if (OmitPropName != "TideLocation") cSSPModelsRes.TideLocation = GetRandomString("", 20);
            if (OmitPropName != "TideLocationHasErrors") cSSPModelsRes.TideLocationHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TideLocationLat") cSSPModelsRes.TideLocationLat = GetRandomString("", 20);
            if (OmitPropName != "TideLocationLng") cSSPModelsRes.TideLocationLng = GetRandomString("", 20);
            if (OmitPropName != "TideLocationName") cSSPModelsRes.TideLocationName = GetRandomString("", 20);
            if (OmitPropName != "TideLocationProv") cSSPModelsRes.TideLocationProv = GetRandomString("", 20);
            if (OmitPropName != "TideLocationsid") cSSPModelsRes.TideLocationsid = GetRandomString("", 20);
            if (OmitPropName != "TideLocationTideLocationID") cSSPModelsRes.TideLocationTideLocationID = GetRandomString("", 20);
            if (OmitPropName != "TideLocationZone") cSSPModelsRes.TideLocationZone = GetRandomString("", 20);
            if (OmitPropName != "TideSite") cSSPModelsRes.TideSite = GetRandomString("", 20);
            if (OmitPropName != "TideSiteHasErrors") cSSPModelsRes.TideSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TideSiteLastUpdateContactTVItemID") cSSPModelsRes.TideSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TideSiteLastUpdateContactTVText") cSSPModelsRes.TideSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TideSiteLastUpdateDate_UTC") cSSPModelsRes.TideSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TideSiteTideSiteID") cSSPModelsRes.TideSiteTideSiteID = GetRandomString("", 20);
            if (OmitPropName != "TideSiteTideSiteTVItemID") cSSPModelsRes.TideSiteTideSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TideSiteTideSiteTVText") cSSPModelsRes.TideSiteTideSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "TideSiteWebTideDatum_m") cSSPModelsRes.TideSiteWebTideDatum_m = GetRandomString("", 20);
            if (OmitPropName != "TideSiteWebTideModel") cSSPModelsRes.TideSiteWebTideModel = GetRandomString("", 20);
            if (OmitPropName != "TVFile") cSSPModelsRes.TVFile = GetRandomString("", 20);
            if (OmitPropName != "TVFileClientFilePath") cSSPModelsRes.TVFileClientFilePath = GetRandomString("", 20);
            if (OmitPropName != "TVFileFileCreatedDate_UTC") cSSPModelsRes.TVFileFileCreatedDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVFileFileInfo") cSSPModelsRes.TVFileFileInfo = GetRandomString("", 20);
            if (OmitPropName != "TVFileFilePurpose") cSSPModelsRes.TVFileFilePurpose = GetRandomString("", 20);
            if (OmitPropName != "TVFileFilePurposeText") cSSPModelsRes.TVFileFilePurposeText = GetRandomString("", 20);
            if (OmitPropName != "TVFileFileSize_kb") cSSPModelsRes.TVFileFileSize_kb = GetRandomString("", 20);
            if (OmitPropName != "TVFileFileType") cSSPModelsRes.TVFileFileType = GetRandomString("", 20);
            if (OmitPropName != "TVFileFileTypeText") cSSPModelsRes.TVFileFileTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVFileFromWater") cSSPModelsRes.TVFileFromWater = GetRandomString("", 20);
            if (OmitPropName != "TVFileHasErrors") cSSPModelsRes.TVFileHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguage") cSSPModelsRes.TVFileLanguage = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageFileDescription") cSSPModelsRes.TVFileLanguageFileDescription = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageHasErrors") cSSPModelsRes.TVFileLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageLanguage") cSSPModelsRes.TVFileLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageLanguageText") cSSPModelsRes.TVFileLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageLastUpdateContactTVItemID") cSSPModelsRes.TVFileLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageLastUpdateContactTVText") cSSPModelsRes.TVFileLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageLastUpdateDate_UTC") cSSPModelsRes.TVFileLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageText") cSSPModelsRes.TVFileLanguageText = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageTranslationStatus") cSSPModelsRes.TVFileLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageTranslationStatusText") cSSPModelsRes.TVFileLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageTVFileID") cSSPModelsRes.TVFileLanguageTVFileID = GetRandomString("", 20);
            if (OmitPropName != "TVFileLanguageTVFileLanguageID") cSSPModelsRes.TVFileLanguageTVFileLanguageID = GetRandomString("", 20);
            if (OmitPropName != "TVFileLastUpdateContactTVItemID") cSSPModelsRes.TVFileLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVFileLastUpdateContactTVText") cSSPModelsRes.TVFileLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVFileLastUpdateDate_UTC") cSSPModelsRes.TVFileLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVFileServerFileName") cSSPModelsRes.TVFileServerFileName = GetRandomString("", 20);
            if (OmitPropName != "TVFileServerFilePath") cSSPModelsRes.TVFileServerFilePath = GetRandomString("", 20);
            if (OmitPropName != "TVFileTemplateTVType") cSSPModelsRes.TVFileTemplateTVType = GetRandomString("", 20);
            if (OmitPropName != "TVFileTemplateTVTypeText") cSSPModelsRes.TVFileTemplateTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVFileTVFileID") cSSPModelsRes.TVFileTVFileID = GetRandomString("", 20);
            if (OmitPropName != "TVFileTVFileTVItemID") cSSPModelsRes.TVFileTVFileTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVFileTVFileTVText") cSSPModelsRes.TVFileTVFileTVText = GetRandomString("", 20);
            if (OmitPropName != "TVFullText") cSSPModelsRes.TVFullText = GetRandomString("", 20);
            if (OmitPropName != "TVFullTextFullText") cSSPModelsRes.TVFullTextFullText = GetRandomString("", 20);
            if (OmitPropName != "TVFullTextHasErrors") cSSPModelsRes.TVFullTextHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVFullTextTVPath") cSSPModelsRes.TVFullTextTVPath = GetRandomString("", 20);
            if (OmitPropName != "TVItem") cSSPModelsRes.TVItem = GetRandomString("", 20);
            if (OmitPropName != "TVItemHasErrors") cSSPModelsRes.TVItemHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLink") cSSPModelsRes.TVItemInfrastructureTypeTVItemLink = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkFlowTo") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkFlowTo = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkHasErrors") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkInfrastructureType") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkInfrastructureType = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkTVItem") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkTVItem = GetRandomString("", 20);
            if (OmitPropName != "TVItemInfrastructureTypeTVItemLinkTVItemLinkList") cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkTVItemLinkList = GetRandomString("", 20);
            if (OmitPropName != "TVItemIsActive") cSSPModelsRes.TVItemIsActive = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguage") cSSPModelsRes.TVItemLanguage = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageHasErrors") cSSPModelsRes.TVItemLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageLanguage") cSSPModelsRes.TVItemLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageLanguageText") cSSPModelsRes.TVItemLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageLastUpdateContactTVItemID") cSSPModelsRes.TVItemLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageLastUpdateContactTVText") cSSPModelsRes.TVItemLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageLastUpdateDate_UTC") cSSPModelsRes.TVItemLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageTranslationStatus") cSSPModelsRes.TVItemLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageTranslationStatusText") cSSPModelsRes.TVItemLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageTVItemID") cSSPModelsRes.TVItemLanguageTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageTVItemLanguageID") cSSPModelsRes.TVItemLanguageTVItemLanguageID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLanguageTVText") cSSPModelsRes.TVItemLanguageTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLastUpdateContactTVItemID") cSSPModelsRes.TVItemLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLastUpdateContactTVText") cSSPModelsRes.TVItemLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLastUpdateDate_UTC") cSSPModelsRes.TVItemLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVItemLink") cSSPModelsRes.TVItemLink = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkEndDateTime_Local") cSSPModelsRes.TVItemLinkEndDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkFromTVItemID") cSSPModelsRes.TVItemLinkFromTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkFromTVText") cSSPModelsRes.TVItemLinkFromTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkFromTVType") cSSPModelsRes.TVItemLinkFromTVType = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkFromTVTypeText") cSSPModelsRes.TVItemLinkFromTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkHasErrors") cSSPModelsRes.TVItemLinkHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkLastUpdateContactTVItemID") cSSPModelsRes.TVItemLinkLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkLastUpdateContactTVText") cSSPModelsRes.TVItemLinkLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkLastUpdateDate_UTC") cSSPModelsRes.TVItemLinkLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkOrdinal") cSSPModelsRes.TVItemLinkOrdinal = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkParentTVItemLinkID") cSSPModelsRes.TVItemLinkParentTVItemLinkID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkStartDateTime_Local") cSSPModelsRes.TVItemLinkStartDateTime_Local = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkToTVItemID") cSSPModelsRes.TVItemLinkToTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkToTVText") cSSPModelsRes.TVItemLinkToTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkToTVType") cSSPModelsRes.TVItemLinkToTVType = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkToTVTypeText") cSSPModelsRes.TVItemLinkToTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkTVItemLinkID") cSSPModelsRes.TVItemLinkTVItemLinkID = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkTVLevel") cSSPModelsRes.TVItemLinkTVLevel = GetRandomString("", 20);
            if (OmitPropName != "TVItemLinkTVPath") cSSPModelsRes.TVItemLinkTVPath = GetRandomString("", 20);
            if (OmitPropName != "TVItemParentID") cSSPModelsRes.TVItemParentID = GetRandomString("", 20);
            if (OmitPropName != "TVItemStat") cSSPModelsRes.TVItemStat = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatChildCount") cSSPModelsRes.TVItemStatChildCount = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatHasErrors") cSSPModelsRes.TVItemStatHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatLastUpdateContactTVItemID") cSSPModelsRes.TVItemStatLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatLastUpdateContactTVText") cSSPModelsRes.TVItemStatLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatLastUpdateDate_UTC") cSSPModelsRes.TVItemStatLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatTVItemID") cSSPModelsRes.TVItemStatTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatTVItemStatID") cSSPModelsRes.TVItemStatTVItemStatID = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatTVText") cSSPModelsRes.TVItemStatTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatTVType") cSSPModelsRes.TVItemStatTVType = GetRandomString("", 20);
            if (OmitPropName != "TVItemStatTVTypeText") cSSPModelsRes.TVItemStatTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVItemSubsectorAndMWQMSite") cSSPModelsRes.TVItemSubsectorAndMWQMSite = GetRandomString("", 20);
            if (OmitPropName != "TVItemSubsectorAndMWQMSiteHasErrors") cSSPModelsRes.TVItemSubsectorAndMWQMSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate") cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate = GetRandomString("", 20);
            if (OmitPropName != "TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList") cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList = GetRandomString("", 20);
            if (OmitPropName != "TVItemSubsectorAndMWQMSiteTVItemSubsector") cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemSubsector = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuth") cSSPModelsRes.TVItemTVAuth = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthError") cSSPModelsRes.TVItemTVAuthError = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthHasErrors") cSSPModelsRes.TVItemTVAuthHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthTVAuth") cSSPModelsRes.TVItemTVAuthTVAuth = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthTVAuthText") cSSPModelsRes.TVItemTVAuthTVAuthText = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthTVItemID1") cSSPModelsRes.TVItemTVAuthTVItemID1 = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthTVItemUserAuthID") cSSPModelsRes.TVItemTVAuthTVItemUserAuthID = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthTVText") cSSPModelsRes.TVItemTVAuthTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVAuthTVTypeStr") cSSPModelsRes.TVItemTVAuthTVTypeStr = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVItemID") cSSPModelsRes.TVItemTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVLevel") cSSPModelsRes.TVItemTVLevel = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVPath") cSSPModelsRes.TVItemTVPath = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVText") cSSPModelsRes.TVItemTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVType") cSSPModelsRes.TVItemTVType = GetRandomString("", 20);
            if (OmitPropName != "TVItemTVTypeText") cSSPModelsRes.TVItemTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorization") cSSPModelsRes.TVItemUserAuthorization = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationContactTVItemID") cSSPModelsRes.TVItemUserAuthorizationContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationContactTVText") cSSPModelsRes.TVItemUserAuthorizationContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationHasErrors") cSSPModelsRes.TVItemUserAuthorizationHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationLastUpdateContactTVItemID") cSSPModelsRes.TVItemUserAuthorizationLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationLastUpdateContactTVText") cSSPModelsRes.TVItemUserAuthorizationLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationLastUpdateDate_UTC") cSSPModelsRes.TVItemUserAuthorizationLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVAuth") cSSPModelsRes.TVItemUserAuthorizationTVAuth = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVAuthText") cSSPModelsRes.TVItemUserAuthorizationTVAuthText = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVItemID1") cSSPModelsRes.TVItemUserAuthorizationTVItemID1 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVItemID2") cSSPModelsRes.TVItemUserAuthorizationTVItemID2 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVItemID3") cSSPModelsRes.TVItemUserAuthorizationTVItemID3 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVItemID4") cSSPModelsRes.TVItemUserAuthorizationTVItemID4 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVItemUserAuthorizationID") cSSPModelsRes.TVItemUserAuthorizationTVItemUserAuthorizationID = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVText1") cSSPModelsRes.TVItemUserAuthorizationTVText1 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVText2") cSSPModelsRes.TVItemUserAuthorizationTVText2 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVText3") cSSPModelsRes.TVItemUserAuthorizationTVText3 = GetRandomString("", 20);
            if (OmitPropName != "TVItemUserAuthorizationTVText4") cSSPModelsRes.TVItemUserAuthorizationTVText4 = GetRandomString("", 20);
            if (OmitPropName != "TVLocation") cSSPModelsRes.TVLocation = GetRandomString("", 20);
            if (OmitPropName != "TVLocationError") cSSPModelsRes.TVLocationError = GetRandomString("", 20);
            if (OmitPropName != "TVLocationHasErrors") cSSPModelsRes.TVLocationHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVLocationMapObjList") cSSPModelsRes.TVLocationMapObjList = GetRandomString("", 20);
            if (OmitPropName != "TVLocationSubTVType") cSSPModelsRes.TVLocationSubTVType = GetRandomString("", 20);
            if (OmitPropName != "TVLocationSubTVTypeText") cSSPModelsRes.TVLocationSubTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVLocationTVItemID") cSSPModelsRes.TVLocationTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVLocationTVText") cSSPModelsRes.TVLocationTVText = GetRandomString("", 20);
            if (OmitPropName != "TVLocationTVType") cSSPModelsRes.TVLocationTVType = GetRandomString("", 20);
            if (OmitPropName != "TVLocationTVTypeText") cSSPModelsRes.TVLocationTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVTextLanguage") cSSPModelsRes.TVTextLanguage = GetRandomString("", 20);
            if (OmitPropName != "TVTextLanguageHasErrors") cSSPModelsRes.TVTextLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVTextLanguageLanguage") cSSPModelsRes.TVTextLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "TVTextLanguageLanguageText") cSSPModelsRes.TVTextLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "TVTextLanguageTVText") cSSPModelsRes.TVTextLanguageTVText = GetRandomString("", 20);
            if (OmitPropName != "TVTypeNamesAndPath") cSSPModelsRes.TVTypeNamesAndPath = GetRandomString("", 20);
            if (OmitPropName != "TVTypeNamesAndPathHasErrors") cSSPModelsRes.TVTypeNamesAndPathHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVTypeNamesAndPathIndex") cSSPModelsRes.TVTypeNamesAndPathIndex = GetRandomString("", 20);
            if (OmitPropName != "TVTypeNamesAndPathTVPath") cSSPModelsRes.TVTypeNamesAndPathTVPath = GetRandomString("", 20);
            if (OmitPropName != "TVTypeNamesAndPathTVTypeName") cSSPModelsRes.TVTypeNamesAndPathTVTypeName = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorization") cSSPModelsRes.TVTypeUserAuthorization = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationContactTVItemID") cSSPModelsRes.TVTypeUserAuthorizationContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationContactTVText") cSSPModelsRes.TVTypeUserAuthorizationContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationHasErrors") cSSPModelsRes.TVTypeUserAuthorizationHasErrors = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationLastUpdateContactTVItemID") cSSPModelsRes.TVTypeUserAuthorizationLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationLastUpdateContactTVText") cSSPModelsRes.TVTypeUserAuthorizationLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationLastUpdateDate_UTC") cSSPModelsRes.TVTypeUserAuthorizationLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationTVAuth") cSSPModelsRes.TVTypeUserAuthorizationTVAuth = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationTVAuthText") cSSPModelsRes.TVTypeUserAuthorizationTVAuthText = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationTVType") cSSPModelsRes.TVTypeUserAuthorizationTVType = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationTVTypeText") cSSPModelsRes.TVTypeUserAuthorizationTVTypeText = GetRandomString("", 20);
            if (OmitPropName != "TVTypeUserAuthorizationTVTypeUserAuthorizationID") cSSPModelsRes.TVTypeUserAuthorizationTVTypeUserAuthorizationID = GetRandomString("", 20);
            if (OmitPropName != "URLNumberOfSamples") cSSPModelsRes.URLNumberOfSamples = GetRandomString("", 20);
            if (OmitPropName != "URLNumberOfSamplesHasErrors") cSSPModelsRes.URLNumberOfSamplesHasErrors = GetRandomString("", 20);
            if (OmitPropName != "URLNumberOfSamplesNumberOfSamples") cSSPModelsRes.URLNumberOfSamplesNumberOfSamples = GetRandomString("", 20);
            if (OmitPropName != "URLNumberOfSamplesurl") cSSPModelsRes.URLNumberOfSamplesurl = GetRandomString("", 20);
            if (OmitPropName != "UseOfSite") cSSPModelsRes.UseOfSite = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteEndYear") cSSPModelsRes.UseOfSiteEndYear = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteHasErrors") cSSPModelsRes.UseOfSiteHasErrors = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteLastUpdateContactTVItemID") cSSPModelsRes.UseOfSiteLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteLastUpdateContactTVText") cSSPModelsRes.UseOfSiteLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteLastUpdateDate_UTC") cSSPModelsRes.UseOfSiteLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteOrdinal") cSSPModelsRes.UseOfSiteOrdinal = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteParam1") cSSPModelsRes.UseOfSiteParam1 = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteParam2") cSSPModelsRes.UseOfSiteParam2 = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteParam3") cSSPModelsRes.UseOfSiteParam3 = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteParam4") cSSPModelsRes.UseOfSiteParam4 = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteSiteTVItemID") cSSPModelsRes.UseOfSiteSiteTVItemID = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteSiteTVText") cSSPModelsRes.UseOfSiteSiteTVText = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteSiteType") cSSPModelsRes.UseOfSiteSiteType = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteSiteTypeText") cSSPModelsRes.UseOfSiteSiteTypeText = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteStartYear") cSSPModelsRes.UseOfSiteStartYear = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteSubsectorTVItemID") cSSPModelsRes.UseOfSiteSubsectorTVItemID = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteSubsectorTVText") cSSPModelsRes.UseOfSiteSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteUseEquation") cSSPModelsRes.UseOfSiteUseEquation = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteUseOfSiteID") cSSPModelsRes.UseOfSiteUseOfSiteID = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteUseWeight") cSSPModelsRes.UseOfSiteUseWeight = GetRandomString("", 20);
            if (OmitPropName != "UseOfSiteWeight_perc") cSSPModelsRes.UseOfSiteWeight_perc = GetRandomString("", 20);
            if (OmitPropName != "Vector") cSSPModelsRes.Vector = GetRandomString("", 20);
            if (OmitPropName != "VectorEndNode") cSSPModelsRes.VectorEndNode = GetRandomString("", 20);
            if (OmitPropName != "VectorHasErrors") cSSPModelsRes.VectorHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VectorStartNode") cSSPModelsRes.VectorStartNode = GetRandomString("", 20);
            if (OmitPropName != "VPAmbient") cSSPModelsRes.VPAmbient = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientAmbientSalinity_PSU") cSSPModelsRes.VPAmbientAmbientSalinity_PSU = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientAmbientTemperature_C") cSSPModelsRes.VPAmbientAmbientTemperature_C = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientBackgroundConcentration_MPN_100ml") cSSPModelsRes.VPAmbientBackgroundConcentration_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientCurrentDirection_deg") cSSPModelsRes.VPAmbientCurrentDirection_deg = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientCurrentSpeed_m_s") cSSPModelsRes.VPAmbientCurrentSpeed_m_s = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientFarFieldCurrentDirection_deg") cSSPModelsRes.VPAmbientFarFieldCurrentDirection_deg = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientFarFieldCurrentSpeed_m_s") cSSPModelsRes.VPAmbientFarFieldCurrentSpeed_m_s = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientFarFieldDiffusionCoefficient") cSSPModelsRes.VPAmbientFarFieldDiffusionCoefficient = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientHasErrors") cSSPModelsRes.VPAmbientHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientLastUpdateContactTVItemID") cSSPModelsRes.VPAmbientLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientLastUpdateContactTVText") cSSPModelsRes.VPAmbientLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientLastUpdateDate_UTC") cSSPModelsRes.VPAmbientLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientMeasurementDepth_m") cSSPModelsRes.VPAmbientMeasurementDepth_m = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientPollutantDecayRate_per_day") cSSPModelsRes.VPAmbientPollutantDecayRate_per_day = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientRow") cSSPModelsRes.VPAmbientRow = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientVPAmbientID") cSSPModelsRes.VPAmbientVPAmbientID = GetRandomString("", 20);
            if (OmitPropName != "VPAmbientVPScenarioID") cSSPModelsRes.VPAmbientVPScenarioID = GetRandomString("", 20);
            if (OmitPropName != "VPFull") cSSPModelsRes.VPFull = GetRandomString("", 20);
            if (OmitPropName != "VPFullHasErrors") cSSPModelsRes.VPFullHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPFullVPAmbientList") cSSPModelsRes.VPFullVPAmbientList = GetRandomString("", 20);
            if (OmitPropName != "VPFullVPResultList") cSSPModelsRes.VPFullVPResultList = GetRandomString("", 20);
            if (OmitPropName != "VPFullVPScenario") cSSPModelsRes.VPFullVPScenario = GetRandomString("", 20);
            if (OmitPropName != "VPResult") cSSPModelsRes.VPResult = GetRandomString("", 20);
            if (OmitPropName != "VPResultConcentration_MPN_100ml") cSSPModelsRes.VPResultConcentration_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "VPResultDilution") cSSPModelsRes.VPResultDilution = GetRandomString("", 20);
            if (OmitPropName != "VPResultDispersionDistance_m") cSSPModelsRes.VPResultDispersionDistance_m = GetRandomString("", 20);
            if (OmitPropName != "VPResultFarFieldWidth_m") cSSPModelsRes.VPResultFarFieldWidth_m = GetRandomString("", 20);
            if (OmitPropName != "VPResultHasErrors") cSSPModelsRes.VPResultHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPResultLastUpdateContactTVItemID") cSSPModelsRes.VPResultLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "VPResultLastUpdateContactTVText") cSSPModelsRes.VPResultLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "VPResultLastUpdateDate_UTC") cSSPModelsRes.VPResultLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "VPResultOrdinal") cSSPModelsRes.VPResultOrdinal = GetRandomString("", 20);
            if (OmitPropName != "VPResultTravelTime_hour") cSSPModelsRes.VPResultTravelTime_hour = GetRandomString("", 20);
            if (OmitPropName != "VPResultVPResultID") cSSPModelsRes.VPResultVPResultID = GetRandomString("", 20);
            if (OmitPropName != "VPResultVPScenarioID") cSSPModelsRes.VPResultVPScenarioID = GetRandomString("", 20);
            if (OmitPropName != "VPResValues") cSSPModelsRes.VPResValues = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesConc") cSSPModelsRes.VPResValuesConc = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesDecay") cSSPModelsRes.VPResValuesDecay = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesDilu") cSSPModelsRes.VPResValuesDilu = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesDistance") cSSPModelsRes.VPResValuesDistance = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesFarfieldWidth") cSSPModelsRes.VPResValuesFarfieldWidth = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesHasErrors") cSSPModelsRes.VPResValuesHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPResValuesTheTime") cSSPModelsRes.VPResValuesTheTime = GetRandomString("", 20);
            if (OmitPropName != "VPScenario") cSSPModelsRes.VPScenario = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioAcuteMixZone_m") cSSPModelsRes.VPScenarioAcuteMixZone_m = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioChronicMixZone_m") cSSPModelsRes.VPScenarioChronicMixZone_m = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioEffluentConcentration_MPN_100ml") cSSPModelsRes.VPScenarioEffluentConcentration_MPN_100ml = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioEffluentFlow_m3_s") cSSPModelsRes.VPScenarioEffluentFlow_m3_s = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioEffluentSalinity_PSU") cSSPModelsRes.VPScenarioEffluentSalinity_PSU = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioEffluentTemperature_C") cSSPModelsRes.VPScenarioEffluentTemperature_C = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioEffluentVelocity_m_s") cSSPModelsRes.VPScenarioEffluentVelocity_m_s = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioFroudeNumber") cSSPModelsRes.VPScenarioFroudeNumber = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioHasErrors") cSSPModelsRes.VPScenarioHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioHorizontalAngle_deg") cSSPModelsRes.VPScenarioHorizontalAngle_deg = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioIDAndRawResults") cSSPModelsRes.VPScenarioIDAndRawResults = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioIDAndRawResultsHasErrors") cSSPModelsRes.VPScenarioIDAndRawResultsHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioIDAndRawResultsRawResults") cSSPModelsRes.VPScenarioIDAndRawResultsRawResults = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioIDAndRawResultsVPScenarioID") cSSPModelsRes.VPScenarioIDAndRawResultsVPScenarioID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioInfrastructureTVItemID") cSSPModelsRes.VPScenarioInfrastructureTVItemID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguage") cSSPModelsRes.VPScenarioLanguage = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageHasErrors") cSSPModelsRes.VPScenarioLanguageHasErrors = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageLanguage") cSSPModelsRes.VPScenarioLanguageLanguage = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageLanguageText") cSSPModelsRes.VPScenarioLanguageLanguageText = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageLastUpdateContactTVItemID") cSSPModelsRes.VPScenarioLanguageLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageLastUpdateContactTVText") cSSPModelsRes.VPScenarioLanguageLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageLastUpdateDate_UTC") cSSPModelsRes.VPScenarioLanguageLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageTranslationStatus") cSSPModelsRes.VPScenarioLanguageTranslationStatus = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageTranslationStatusText") cSSPModelsRes.VPScenarioLanguageTranslationStatusText = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageVPScenarioID") cSSPModelsRes.VPScenarioLanguageVPScenarioID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageVPScenarioLanguageID") cSSPModelsRes.VPScenarioLanguageVPScenarioLanguageID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLanguageVPScenarioName") cSSPModelsRes.VPScenarioLanguageVPScenarioName = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLastUpdateContactTVItemID") cSSPModelsRes.VPScenarioLastUpdateContactTVItemID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLastUpdateContactTVText") cSSPModelsRes.VPScenarioLastUpdateContactTVText = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioLastUpdateDate_UTC") cSSPModelsRes.VPScenarioLastUpdateDate_UTC = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioNumberOfPorts") cSSPModelsRes.VPScenarioNumberOfPorts = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioPortDepth_m") cSSPModelsRes.VPScenarioPortDepth_m = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioPortDiameter_m") cSSPModelsRes.VPScenarioPortDiameter_m = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioPortElevation_m") cSSPModelsRes.VPScenarioPortElevation_m = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioPortSpacing_m") cSSPModelsRes.VPScenarioPortSpacing_m = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioRawResults") cSSPModelsRes.VPScenarioRawResults = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioSubsectorTVText") cSSPModelsRes.VPScenarioSubsectorTVText = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioUseAsBestEstimate") cSSPModelsRes.VPScenarioUseAsBestEstimate = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioVerticalAngle_deg") cSSPModelsRes.VPScenarioVerticalAngle_deg = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioVPScenarioID") cSSPModelsRes.VPScenarioVPScenarioID = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioVPScenarioStatus") cSSPModelsRes.VPScenarioVPScenarioStatus = GetRandomString("", 20);
            if (OmitPropName != "VPScenarioVPScenarioStatusText") cSSPModelsRes.VPScenarioVPScenarioStatusText = GetRandomString("", 20);

            return cSSPModelsRes;
        }
        #endregion Functions private

        #region Tests Generated CRUD and Properties
        [TestMethod]
        public void CSSPModelsRes_CRUD_And_Properties_Test()
        {
            foreach (CultureInfo culture in AllowableCulture)
            {
                ChangeCulture(culture);

                using (CSSPWebToolsDBContext dbTestDB = new CSSPWebToolsDBContext(DatabaseTypeEnum.SqlServerTestDB))
                {
                    CSSPModelsResService cSSPModelsResService = new CSSPModelsResService(LanguageRequest, dbTestDB, ContactID);

                    int count = 0;
                    if (count == 1)
                    {
                        // just so we don't get a warning during compile [The variable 'count' is assigned but its value is never used]
                    }

                    CSSPModelsRes cSSPModelsRes = GetFilledRandomCSSPModelsRes("");

                    // -------------------------------
                    // -------------------------------
                    // CRUD testing
                    // -------------------------------
                    // -------------------------------

                count = cSSPModelsResService.GetRead().Count();

                Assert.AreEqual(cSSPModelsResService.GetRead().Count(), cSSPModelsResService.GetEdit().Count());

                cSSPModelsResService.Add(cSSPModelsRes);
                if (cSSPModelsRes.HasErrors)
                {
                    Assert.AreEqual("", cSSPModelsRes.ValidationResults.FirstOrDefault().ErrorMessage);
                }
                Assert.AreEqual(true, cSSPModelsResService.GetRead().Where(c => c == cSSPModelsRes).Any());
                cSSPModelsResService.Update(cSSPModelsRes);
                if (cSSPModelsRes.HasErrors)
                {
                    Assert.AreEqual("", cSSPModelsRes.ValidationResults.FirstOrDefault().ErrorMessage);
                }
                Assert.AreEqual(count + 1, cSSPModelsResService.GetRead().Count());
                cSSPModelsResService.Delete(cSSPModelsRes);
                if (cSSPModelsRes.HasErrors)
                {
                    Assert.AreEqual("", cSSPModelsRes.ValidationResults.FirstOrDefault().ErrorMessage);
                }
                Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());

                    // -------------------------------
                    // -------------------------------
                    // Properties testing
                    // -------------------------------
                    // -------------------------------


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResourceManager   (ResourceManager)
                    // -----------------------------------

                    //Error: Type not implemented [ResourceManager]


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Culture   (CultureInfo)
                    // -----------------------------------

                    //Error: Type not implemented [Culture]


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes._IsRequired   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("_IsRequired");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsRes_IsRequired)).Any());
                    Assert.AreEqual(null, cSSPModelsRes._IsRequired);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Address   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Address");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddress)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Address);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressAddressID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressAddressID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressAddressID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressAddressID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressAddressTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressAddressTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressAddressTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressAddressTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressAddressTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressAddressTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressAddressTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressAddressTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressAddressType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressAddressType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressAddressType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressAddressType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressAddressTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressAddressTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressAddressTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressAddressTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressCountryTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressCountryTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressCountryTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressCountryTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressCountryTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressCountryTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressCountryTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressCountryTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressGoogleAddressText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressGoogleAddressText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressGoogleAddressText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressGoogleAddressText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressMunicipalityTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressMunicipalityTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressMunicipalityTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressMunicipalityTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressMunicipalityTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressMunicipalityTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressMunicipalityTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressMunicipalityTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressParentTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressParentTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressParentTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressParentTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressPostalCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressPostalCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressPostalCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressPostalCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressProvinceTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressProvinceTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressProvinceTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressProvinceTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressProvinceTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressProvinceTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressProvinceTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressProvinceTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressStreetName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressStreetName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressStreetName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressStreetName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressStreetNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressStreetNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressStreetNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressStreetNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressStreetType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressStreetType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressStreetType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressStreetType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AddressStreetTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AddressStreetTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAddressStreetTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AddressStreetTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLog   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLog");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLog);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogAppErrLogID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogAppErrLogID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogAppErrLogID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogAppErrLogID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogDateTime_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogDateTime_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogDateTime_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogDateTime_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogLineNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogLineNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogLineNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogLineNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogMessage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogMessage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogMessage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogMessage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogSource   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogSource");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogSource)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogSource);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppErrLogTag   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppErrLogTag");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppErrLogTag)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppErrLogTag);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTask   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTask");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTask)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTask);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskAppTaskCommand   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskAppTaskCommand");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskAppTaskCommand)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskAppTaskCommand);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskAppTaskCommandText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskAppTaskCommandText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskAppTaskCommandText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskAppTaskCommandText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskAppTaskID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskAppTaskID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskAppTaskID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskAppTaskID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskAppTaskStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskAppTaskStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskAppTaskStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskAppTaskStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskAppTaskStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskAppTaskStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskAppTaskStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskAppTaskStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskEndDateTime_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskEndDateTime_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskEndDateTime_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskEndDateTime_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskEstimatedLength_second   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskEstimatedLength_second");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskEstimatedLength_second)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskEstimatedLength_second);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageAppTaskID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageAppTaskID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageAppTaskID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageAppTaskID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageAppTaskLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageAppTaskLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageAppTaskLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageAppTaskLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageErrorText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageErrorText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageErrorText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageErrorText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskParameter   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskParameter");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskParameter)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskParameter);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskParameterHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskParameterHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskParameterHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskParameterHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskParameterName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskParameterName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskParameterName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskParameterName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskParameters   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskParameters");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskParameters)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskParameters);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskParameterValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskParameterValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskParameterValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskParameterValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskPercentCompleted   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskPercentCompleted");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskPercentCompleted)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskPercentCompleted);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskRemainingTime_second   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskRemainingTime_second");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskRemainingTime_second)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskRemainingTime_second);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskStartDateTime_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskStartDateTime_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskStartDateTime_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskStartDateTime_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskTVItem2TVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskTVItem2TVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskTVItem2TVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskTVItem2TVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskTVItemID2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskTVItemID2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskTVItemID2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskTVItemID2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.AppTaskTVItemTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("AppTaskTVItemTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResAppTaskTVItemTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.AppTaskTVItemTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModel   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModel");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModel)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModel);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelBoxModelID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelBoxModelID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelBoxModelID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelBoxModelID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumb   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumb");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumb)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumb);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbBoxModelResultType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbBoxModelResultType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbBoxModelResultType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbBoxModelResultType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbBoxModelResultTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbBoxModelResultTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbBoxModelResultTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbBoxModelResultTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbCalLength_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbCalLength_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbCalLength_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbCalLength_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbCalRadius_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbCalRadius_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbCalRadius_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbCalRadius_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbCalSurface_m2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbCalSurface_m2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbCalSurface_m2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbCalSurface_m2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbCalVolume_m3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbCalVolume_m3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbCalVolume_m3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbCalVolume_m3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbCalWidth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbCalWidth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbCalWidth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbCalWidth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbFixLength   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbFixLength");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbFixLength)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbFixLength);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbFixWidth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbFixWidth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbFixWidth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbFixWidth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelCalNumbHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelCalNumbHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelCalNumbHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelCalNumbHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelConcentration_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelConcentration_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelConcentration_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelConcentration_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelDecayRate_per_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelDecayRate_per_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelDecayRate_per_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelDecayRate_per_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelDepth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelDepth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelDepth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelDepth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelDilution   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelDilution");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelDilution)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelDilution);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelFCPreDisinfection_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelFCPreDisinfection_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelFCPreDisinfection_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelFCPreDisinfection_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelFCUntreated_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelFCUntreated_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelFCUntreated_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelFCUntreated_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelFlow_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelFlow_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelFlow_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelFlow_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelFlowDuration_hour   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelFlowDuration_hour");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelFlowDuration_hour)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelFlowDuration_hour);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelInfrastructureTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelInfrastructureTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelInfrastructureTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelInfrastructureTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelInfrastructureTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelInfrastructureTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelInfrastructureTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelInfrastructureTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageBoxModelID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageBoxModelID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageBoxModelID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageBoxModelID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageBoxModelLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageBoxModelLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageBoxModelLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageBoxModelLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageScenarioName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageScenarioName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageScenarioName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageScenarioName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResult   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResult");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResult)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResult);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultBoxModelID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultBoxModelID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultBoxModelID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultBoxModelID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultBoxModelResultID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultBoxModelResultID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultBoxModelResultID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultBoxModelResultID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultBoxModelResultType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultBoxModelResultType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultBoxModelResultType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultBoxModelResultType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultBoxModelResultTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultBoxModelResultTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultBoxModelResultTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultBoxModelResultTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultCircleCenterLatitude   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultCircleCenterLatitude");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultCircleCenterLatitude)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultCircleCenterLatitude);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultCircleCenterLongitude   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultCircleCenterLongitude");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultCircleCenterLongitude)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultCircleCenterLongitude);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultFixLength   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultFixLength");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultFixLength)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultFixLength);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultFixWidth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultFixWidth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultFixWidth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultFixWidth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLeftSideDiameterLineAngle_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLeftSideDiameterLineAngle_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLeftSideDiameterLineAngle_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLeftSideDiameterLineAngle_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLeftSideLineAngle_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLeftSideLineAngle_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLeftSideLineAngle_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLeftSideLineAngle_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLeftSideLineStartLatitude   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLeftSideLineStartLatitude");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLeftSideLineStartLatitude)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLeftSideLineStartLatitude);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultLeftSideLineStartLongitude   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultLeftSideLineStartLongitude");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultLeftSideLineStartLongitude)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultLeftSideLineStartLongitude);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultRadius_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultRadius_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultRadius_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultRadius_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultRectLength_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultRectLength_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultRectLength_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultRectLength_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultRectWidth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultRectWidth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultRectWidth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultRectWidth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultSurface_m2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultSurface_m2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultSurface_m2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultSurface_m2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelResultVolume_m3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelResultVolume_m3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelResultVolume_m3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelResultVolume_m3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelT90_hour   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelT90_hour");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelT90_hour)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelT90_hour);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.BoxModelTemperature_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("BoxModelTemperature_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResBoxModelTemperature_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.BoxModelTemperature_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CalDecay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CalDecay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCalDecay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CalDecay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CalDecayDecay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CalDecayDecay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCalDecayDecay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CalDecayDecay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CalDecayError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CalDecayError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCalDecayError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CalDecayError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CalDecayHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CalDecayHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCalDecayHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CalDecayHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueClimateDataValueID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueClimateDataValueID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueClimateDataValueID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueClimateDataValueID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueClimateSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueClimateSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueClimateSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueClimateSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueCoolDegDays_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueCoolDegDays_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueCoolDegDays_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueCoolDegDays_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueDirMaxGust_0North   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueDirMaxGust_0North");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueDirMaxGust_0North)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueDirMaxGust_0North);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueHeatDegDays_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueHeatDegDays_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueHeatDegDays_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueHeatDegDays_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueHourlyValues   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueHourlyValues");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueHourlyValues)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueHourlyValues);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueKeep   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueKeep");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueKeep)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueKeep);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueMaxTemp_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueMaxTemp_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueMaxTemp_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueMaxTemp_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueMinTemp_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueMinTemp_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueMinTemp_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueMinTemp_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueRainfall_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueRainfall_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueRainfall_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueRainfall_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueRainfallEntered_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueRainfallEntered_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueRainfallEntered_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueRainfallEntered_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueSnow_cm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueSnow_cm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueSnow_cm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueSnow_cm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueSnowOnGround_cm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueSnowOnGround_cm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueSnowOnGround_cm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueSnowOnGround_cm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueSpdMaxGust_kmh   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueSpdMaxGust_kmh");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueSpdMaxGust_kmh)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueSpdMaxGust_kmh);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueStorageDataType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueStorageDataType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueStorageDataType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueStorageDataType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueStorageDataTypeEnumText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueStorageDataTypeEnumText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueStorageDataTypeEnumText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueStorageDataTypeEnumText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateDataValueTotalPrecip_mm_cm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateDataValueTotalPrecip_mm_cm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateDataValueTotalPrecip_mm_cm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateDataValueTotalPrecip_mm_cm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteClimateID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteClimateID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteClimateID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteClimateID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteClimateSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteClimateSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteClimateSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteClimateSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteClimateSiteName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteClimateSiteName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteClimateSiteName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteClimateSiteName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteClimateSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteClimateSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteClimateSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteClimateSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteClimateSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteClimateSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteClimateSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteClimateSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteDailyEndDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteDailyEndDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteDailyEndDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteDailyEndDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteDailyNow   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteDailyNow");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteDailyNow)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteDailyNow);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteDailyStartDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteDailyStartDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteDailyStartDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteDailyStartDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteECDBID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteECDBID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteECDBID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteECDBID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteElevation_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteElevation_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteElevation_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteElevation_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteFile_desc   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteFile_desc");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteFile_desc)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteFile_desc);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteHourlyEndDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteHourlyEndDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteHourlyEndDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteHourlyEndDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteHourlyNow   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteHourlyNow");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteHourlyNow)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteHourlyNow);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteHourlyStartDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteHourlyStartDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteHourlyStartDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteHourlyStartDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteIsProvincial   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteIsProvincial");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteIsProvincial)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteIsProvincial);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteMonthlyEndDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteMonthlyEndDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteMonthlyEndDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteMonthlyEndDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteMonthlyNow   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteMonthlyNow");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteMonthlyNow)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteMonthlyNow);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteMonthlyStartDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteMonthlyStartDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteMonthlyStartDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteMonthlyStartDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteProvince   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteProvince");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteProvince)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteProvince);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteProvSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteProvSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteProvSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteProvSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteTCID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteTCID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteTCID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteTCID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteTimeOffset_hour   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteTimeOffset_hour");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteTimeOffset_hour)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteTimeOffset_hour);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ClimateSiteWMOID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ClimateSiteWMOID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResClimateSiteWMOID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ClimateSiteWMOID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Contact   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Contact");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContact)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Contact);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactContactTitle   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactContactTitle");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactContactTitle)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactContactTitle);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactContactTitleText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactContactTitleText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactContactTitleText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactContactTitleText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactDisabled   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactDisabled");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactDisabled)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactDisabled);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactEmailValidated   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactEmailValidated");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactEmailValidated)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactEmailValidated);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactFirstName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactFirstName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactFirstName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactFirstName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactId   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactId");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactId)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactId);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactInitial   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactInitial");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactInitial)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactInitial);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactIsAdmin   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactIsAdmin");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactIsAdmin)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactIsAdmin);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactIsNew   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactIsNew");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactIsNew)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactIsNew);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLastName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLastName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLastName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLastName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLogin   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLogin");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLogin)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLogin);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginConfirmPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginConfirmPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginConfirmPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginConfirmPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginContactLoginID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginContactLoginID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginContactLoginID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginContactLoginID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginLoginEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginLoginEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginLoginEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginLoginEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginPasswordHash   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginPasswordHash");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginPasswordHash)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginPasswordHash);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactLoginPasswordSalt   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactLoginPasswordSalt");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactLoginPasswordSalt)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactLoginPasswordSalt);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactOK   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactOK");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactOK)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactOK);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactOKContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactOKContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactOKContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactOKContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactOKContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactOKContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactOKContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactOKContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactOKError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactOKError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactOKError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactOKError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactOKHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactOKHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactOKHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactOKHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactParentTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactParentTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactParentTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactParentTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreference   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreference");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreference)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreference);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceContactPreferenceID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceContactPreferenceID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceContactPreferenceID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceContactPreferenceID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceMarkerSize   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceMarkerSize");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceMarkerSize)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceMarkerSize);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactPreferenceTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactPreferenceTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactPreferenceTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactPreferenceTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactSamplingPlanner_ProvincesTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactSamplingPlanner_ProvincesTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactSamplingPlanner_ProvincesTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactSamplingPlanner_ProvincesTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactSearch   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactSearch");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactSearch)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactSearch);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactSearchContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactSearchContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactSearchContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactSearchContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactSearchContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactSearchContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactSearchContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactSearchContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactSearchFullName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactSearchFullName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactSearchFullName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactSearchFullName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactSearchHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactSearchHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactSearchHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactSearchHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcut   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcut");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcut)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcut);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutContactShortcutID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutContactShortcutID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutContactShortcutID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutContactShortcutID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutShortCutAddress   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutShortCutAddress");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutShortCutAddress)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutShortCutAddress);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactShortcutShortCutText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactShortcutShortCutText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactShortcutShortCutText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactShortcutShortCutText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContactWebName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContactWebName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContactWebName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContactWebName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContourPolygon   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContourPolygon");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContourPolygon)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContourPolygon);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContourPolygonContourNodeList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContourPolygonContourNodeList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContourPolygonContourNodeList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContourPolygonContourNodeList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContourPolygonContourValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContourPolygonContourValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContourPolygonContourValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContourPolygonContourValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContourPolygonDepth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContourPolygonDepth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContourPolygonDepth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContourPolygonDepth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContourPolygonHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContourPolygonHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContourPolygonHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContourPolygonHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ContourPolygonLayer   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ContourPolygonLayer");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResContourPolygonLayer)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ContourPolygonLayer);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Coord   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Coord");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCoord)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Coord);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CoordHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CoordHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCoordHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CoordHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CoordLat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CoordLat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCoordLat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CoordLat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CoordLng   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CoordLng");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCoordLng)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CoordLng);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CoordOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CoordOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCoordOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CoordOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPMPNTable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPMPNTable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPMPNTable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPMPNTable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPMPNTableHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPMPNTableHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPMPNTableHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPMPNTableHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPMPNTableMPN   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPMPNTableMPN");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPMPNTableMPN)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPMPNTableMPN);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPMPNTableTube0_1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPMPNTableTube0_1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPMPNTableTube0_1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPMPNTableTube0_1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPMPNTableTube1_0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPMPNTableTube1_0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPMPNTableTube1_0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPMPNTableTube1_0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPMPNTableTube10   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPMPNTableTube10");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPMPNTableTube10)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPMPNTableTube10);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputApp   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputApp");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputApp)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputApp);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppAccessCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppAccessCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppAccessCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppAccessCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppActiveYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppActiveYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppActiveYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppActiveYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppApprovalCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppApprovalCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppApprovalCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppApprovalCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppApprovalDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppApprovalDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppApprovalDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppApprovalDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppDailyDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppDailyDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppDailyDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppDailyDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppIncludeLaboratoryQAQC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppIncludeLaboratoryQAQC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppIncludeLaboratoryQAQC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppIncludeLaboratoryQAQC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputAppIntertechDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputAppIntertechDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputAppIntertechDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputAppIntertechDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParam   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParam");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParam)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParam);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamCSSPWQInputType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamCSSPWQInputType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamCSSPWQInputType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamCSSPWQInputType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamCSSPWQInputTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamCSSPWQInputTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamCSSPWQInputTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamCSSPWQInputTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamDailyDuplicateMWQMSiteList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamDailyDuplicateMWQMSiteList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamDailyDuplicateMWQMSiteList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamDailyDuplicateMWQMSiteList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamInfrastructureList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamInfrastructureList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamInfrastructureList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamInfrastructureList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamInfrastructureTVItemIDList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamInfrastructureTVItemIDList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamInfrastructureTVItemIDList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamInfrastructureTVItemIDList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamMWQMSiteList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamMWQMSiteList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamMWQMSiteList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamMWQMSiteList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamMWQMSiteTVItemIDList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamMWQMSiteTVItemIDList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamMWQMSiteTVItemIDList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamMWQMSiteTVItemIDList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamsidList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamsidList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamsidList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamsidList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.CSSPWQInputParamTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("CSSPWQInputParamTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResCSSPWQInputParamTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.CSSPWQInputParamTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DataPathOfTide   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DataPathOfTide");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDataPathOfTide)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DataPathOfTide);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DataPathOfTideHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DataPathOfTideHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDataPathOfTideHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DataPathOfTideHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DataPathOfTideText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DataPathOfTideText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDataPathOfTideText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DataPathOfTideText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DataPathOfTideWebTideDataSet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DataPathOfTideWebTideDataSet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDataPathOfTideWebTideDataSet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DataPathOfTideWebTideDataSet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DataPathOfTideWebTideDataSetText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DataPathOfTideWebTideDataSetText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDataPathOfTideWebTideDataSetText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DataPathOfTideWebTideDataSetText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DBTable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DBTable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDBTable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DBTable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DBTableHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DBTableHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDBTableHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DBTableHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DBTablePlurial   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DBTablePlurial");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDBTablePlurial)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DBTablePlurial);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DBTableTableName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DBTableTableName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDBTableTableName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DBTableTableName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateDocTemplateID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateDocTemplateID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateDocTemplateID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateDocTemplateID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateFileName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateFileName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateFileName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateFileName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateTVFileTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateTVFileTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateTVFileTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateTVFileTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.DocTemplateTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("DocTemplateTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResDocTemplateTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.DocTemplateTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Element   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Element");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElement)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Element);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementLayer   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementLayer");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementLayer)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementLayer);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementLayerElement   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementLayerElement");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementLayerElement)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementLayerElement);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementLayerHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementLayerHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementLayerHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementLayerHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementLayerLayer   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementLayerLayer");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementLayerLayer)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementLayerLayer);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementLayerZMax   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementLayerZMax");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementLayerZMax)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementLayerZMax);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementLayerZMin   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementLayerZMin");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementLayerZMin)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementLayerZMin);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementNodeList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementNodeList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementNodeList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementNodeList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementNumbOfNodes   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementNumbOfNodes");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementNumbOfNodes)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementNumbOfNodes);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementXNode0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementXNode0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementXNode0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementXNode0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementYNode0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementYNode0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementYNode0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementYNode0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ElementZNode0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ElementZNode0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResElementZNode0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ElementZNode0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Email   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Email");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Email);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContact   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContact");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContact)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContact);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactCMPRainfallSeasonal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactCMPRainfallSeasonal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactCMPRainfallSeasonal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactCMPRainfallSeasonal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactCMPWastewater   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactCMPWastewater");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactCMPWastewater)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactCMPWastewater);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactEmailDistributionListContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactEmailDistributionListContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactEmailDistributionListContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactEmailDistributionListContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactEmailDistributionListID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactEmailDistributionListID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactEmailDistributionListID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactEmailDistributionListID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactEmergencyWastewater   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactEmergencyWastewater");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactEmergencyWastewater)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactEmergencyWastewater);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactEmergencyWeather   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactEmergencyWeather");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactEmergencyWeather)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactEmergencyWeather);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactIsCC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactIsCC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactIsCC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactIsCC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageAgency   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageAgency");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageAgency)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageAgency);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageEmailDistributionListContactID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageEmailDistributionListContactID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageEmailDistributionListContactID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageEmailDistributionListContactID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageEmailDistributionListContactLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageEmailDistributionListContactLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageEmailDistributionListContactLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageEmailDistributionListContactLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListContactReopeningAllTypes   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListContactReopeningAllTypes");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListContactReopeningAllTypes)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListContactReopeningAllTypes);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListCountryTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListCountryTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListCountryTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListCountryTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListCountryTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListCountryTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListCountryTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListCountryTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListEmailDistributionListID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListEmailDistributionListID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListEmailDistributionListID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListEmailDistributionListID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageEmailDistributionListID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageEmailDistributionListID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageEmailDistributionListID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageEmailDistributionListID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageEmailDistributionListLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageEmailDistributionListLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageEmailDistributionListLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageEmailDistributionListLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageRegionName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageRegionName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageRegionName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageRegionName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailDistributionListOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailDistributionListOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailDistributionListOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailDistributionListOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailEmailAddress   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailEmailAddress");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailEmailAddress)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailEmailAddress);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailEmailID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailEmailID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailEmailID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailEmailID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailEmailTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailEmailTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailEmailTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailEmailTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailEmailTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailEmailTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailEmailTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailEmailTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailEmailType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailEmailType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailEmailType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailEmailType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailEmailTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailEmailTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailEmailTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailEmailTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.EmailLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("EmailLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResEmailLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.EmailLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItem   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItem");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItem)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItem);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemListFileName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemListFileName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemListFileName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemListFileName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemListHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemListHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemListHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemListHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemListText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemListText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemListText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemListText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FileItemTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FileItemTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFileItemTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FileItemTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FilePurposeAndText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FilePurposeAndText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFilePurposeAndText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FilePurposeAndText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FilePurposeAndTextFilePurpose   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FilePurposeAndTextFilePurpose");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFilePurposeAndTextFilePurpose)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FilePurposeAndTextFilePurpose);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FilePurposeAndTextFilePurposeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FilePurposeAndTextFilePurposeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFilePurposeAndTextFilePurposeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FilePurposeAndTextFilePurposeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.FilePurposeAndTextHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("FilePurposeAndTextHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResFilePurposeAndTextHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.FilePurposeAndTextHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueFlow_m3_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueFlow_m3_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueFlow_m3_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueFlow_m3_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueHourlyValues   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueHourlyValues");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueHourlyValues)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueHourlyValues);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueHydrometricDataValueID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueHydrometricDataValueID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueHydrometricDataValueID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueHydrometricDataValueID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueHydrometricSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueHydrometricSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueHydrometricSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueHydrometricSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueKeep   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueKeep");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueKeep)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueKeep);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueStorageDataType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueStorageDataType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueStorageDataType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueStorageDataType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricDataValueStorageDataTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricDataValueStorageDataTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricDataValueStorageDataTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricDataValueStorageDataTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteDescription   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteDescription");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteDescription)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteDescription);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteDrainageArea_km2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteDrainageArea_km2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteDrainageArea_km2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteDrainageArea_km2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteElevation_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteElevation_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteElevation_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteElevation_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteEndDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteEndDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteEndDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteEndDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteFedSiteNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteFedSiteNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteFedSiteNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteFedSiteNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteHasRatingCurve   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteHasRatingCurve");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteHasRatingCurve)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteHasRatingCurve);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteHydrometricSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteHydrometricSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteHydrometricSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteHydrometricSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteHydrometricSiteName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteHydrometricSiteName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteHydrometricSiteName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteHydrometricSiteName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteHydrometricSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteHydrometricSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteHydrometricSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteHydrometricSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteHydrometricTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteHydrometricTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteHydrometricTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteHydrometricTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteIsActive   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteIsActive");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteIsActive)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteIsActive);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteIsNatural   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteIsNatural");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteIsNatural)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteIsNatural);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteProvince   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteProvince");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteProvince)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteProvince);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteQuebecSiteNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteQuebecSiteNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteQuebecSiteNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteQuebecSiteNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteRealTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteRealTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteRealTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteRealTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteRHBN   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteRHBN");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteRHBN)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteRHBN);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteSediment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteSediment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteSediment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteSediment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteStartDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteStartDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteStartDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteStartDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.HydrometricSiteTimeOffset_hour   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("HydrometricSiteTimeOffset_hour");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResHydrometricSiteTimeOffset_hour)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.HydrometricSiteTimeOffset_hour);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Infrastructure   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Infrastructure");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructure)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Infrastructure);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureAerationType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureAerationType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureAerationType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureAerationType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureAerationTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureAerationTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureAerationTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureAerationTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureAlarmSystemType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureAlarmSystemType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureAlarmSystemType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureAlarmSystemType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureAlarmSystemTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureAlarmSystemTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureAlarmSystemTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureAlarmSystemTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureAverageDepth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureAverageDepth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureAverageDepth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureAverageDepth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureAverageFlow_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureAverageFlow_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureAverageFlow_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureAverageFlow_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureCanOverflow   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureCanOverflow");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureCanOverflow)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureCanOverflow);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureCivicAddressTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureCivicAddressTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureCivicAddressTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureCivicAddressTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureCivicAddressTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureCivicAddressTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureCivicAddressTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureCivicAddressTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureCollectionSystemType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureCollectionSystemType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureCollectionSystemType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureCollectionSystemType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureCollectionSystemTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureCollectionSystemTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureCollectionSystemTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureCollectionSystemTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureDecayRate_per_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureDecayRate_per_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureDecayRate_per_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureDecayRate_per_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureDesignFlow_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureDesignFlow_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureDesignFlow_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureDesignFlow_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureDisinfectionType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureDisinfectionType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureDisinfectionType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureDisinfectionType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureDisinfectionTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureDisinfectionTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureDisinfectionTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureDisinfectionTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureDistanceFromShore_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureDistanceFromShore_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureDistanceFromShore_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureDistanceFromShore_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureFacilityType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureFacilityType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureFacilityType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureFacilityType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureFacilityTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureFacilityTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureFacilityTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureFacilityTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureFarFieldVelocity_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureFarFieldVelocity_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureFarFieldVelocity_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureFarFieldVelocity_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureHorizontalAngle_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureHorizontalAngle_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureHorizontalAngle_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureHorizontalAngle_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureInfrastructureCategory   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureInfrastructureCategory");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureInfrastructureCategory)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureInfrastructureCategory);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureInfrastructureID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureInfrastructureID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureInfrastructureID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureInfrastructureID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureInfrastructureTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureInfrastructureTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureInfrastructureTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureInfrastructureTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureInfrastructureTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureInfrastructureTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureInfrastructureTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureInfrastructureTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureInfrastructureType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureInfrastructureType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureInfrastructureType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureInfrastructureType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureInfrastructureTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureInfrastructureTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureInfrastructureTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureInfrastructureTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureIsMechanicallyAerated   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureIsMechanicallyAerated");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureIsMechanicallyAerated)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureIsMechanicallyAerated);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageInfrastructureID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageInfrastructureID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageInfrastructureID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageInfrastructureID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageInfrastructureLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageInfrastructureLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageInfrastructureLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageInfrastructureLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureLSID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureLSID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureLSID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureLSID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureNearFieldVelocity_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureNearFieldVelocity_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureNearFieldVelocity_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureNearFieldVelocity_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureNumberOfAeratedCells   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureNumberOfAeratedCells");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureNumberOfAeratedCells)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureNumberOfAeratedCells);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureNumberOfCells   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureNumberOfCells");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureNumberOfCells)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureNumberOfCells);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureNumberOfPorts   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureNumberOfPorts");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureNumberOfPorts)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureNumberOfPorts);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePeakFlow_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePeakFlow_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePeakFlow_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePeakFlow_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePercFlowOfTotal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePercFlowOfTotal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePercFlowOfTotal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePercFlowOfTotal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePopServed   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePopServed");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePopServed)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePopServed);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePortDiameter_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePortDiameter_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePortDiameter_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePortDiameter_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePortElevation_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePortElevation_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePortElevation_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePortElevation_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePortSpacing_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePortSpacing_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePortSpacing_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePortSpacing_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePreliminaryTreatmentType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePreliminaryTreatmentType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePreliminaryTreatmentType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePreliminaryTreatmentType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePreliminaryTreatmentTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePreliminaryTreatmentTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePreliminaryTreatmentTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePreliminaryTreatmentTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePrimaryTreatmentType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePrimaryTreatmentType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePrimaryTreatmentType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePrimaryTreatmentType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePrimaryTreatmentTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePrimaryTreatmentTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePrimaryTreatmentTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePrimaryTreatmentTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructurePrismID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructurePrismID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructurePrismID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructurePrismID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureReceivingWater_MPN_per_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureReceivingWater_MPN_per_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureReceivingWater_MPN_per_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureReceivingWater_MPN_per_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureReceivingWaterSalinity_PSU   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureReceivingWaterSalinity_PSU");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureReceivingWaterSalinity_PSU)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureReceivingWaterSalinity_PSU);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureReceivingWaterTemperature_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureReceivingWaterTemperature_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureReceivingWaterTemperature_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureReceivingWaterTemperature_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureSecondaryTreatmentType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureSecondaryTreatmentType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureSecondaryTreatmentType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureSecondaryTreatmentType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureSecondaryTreatmentTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureSecondaryTreatmentTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureSecondaryTreatmentTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureSecondaryTreatmentTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureSeeOtherTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureSeeOtherTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureSeeOtherTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureSeeOtherTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureSeeOtherTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureSeeOtherTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureSeeOtherTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureSeeOtherTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTempCatchAllRemoveLater   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTempCatchAllRemoveLater");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTempCatchAllRemoveLater)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTempCatchAllRemoveLater);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTertiaryTreatmentType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTertiaryTreatmentType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTertiaryTreatmentType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTertiaryTreatmentType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTertiaryTreatmentTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTertiaryTreatmentTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTertiaryTreatmentTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTertiaryTreatmentTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTimeOffset_hour   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTimeOffset_hour");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTimeOffset_hour)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTimeOffset_hour);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTPID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTPID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTPID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTPID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTreatmentType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTreatmentType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTreatmentType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTreatmentType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureTreatmentTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureTreatmentTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureTreatmentTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureTreatmentTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InfrastructureVerticalAngle_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InfrastructureVerticalAngle_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInfrastructureVerticalAngle_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InfrastructureVerticalAngle_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InputSummary   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InputSummary");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInputSummary)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InputSummary);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InputSummaryError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InputSummaryError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInputSummaryError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InputSummaryError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InputSummaryHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InputSummaryHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInputSummaryHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InputSummaryHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.InputSummarySummary   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("InputSummarySummary");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResInputSummarySummary)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.InputSummarySummary);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1Measurement   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1Measurement");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1Measurement)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1Measurement);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementMPN   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementMPN");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementMPN)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementMPN);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementProcessedBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementProcessedBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementProcessedBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementProcessedBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementSalinity   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementSalinity");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementSalinity)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementSalinity);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementSampleType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementSampleType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementSampleType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementSampleType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementSampleTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementSampleTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementSampleTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementSampleTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementSiteComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementSiteComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementSiteComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementSiteComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementTemperature   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementTemperature");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementTemperature)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementTemperature);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementTube0_1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementTube0_1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementTube0_1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementTube0_1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementTube1_0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementTube1_0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementTube1_0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementTube1_0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementTube10   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementTube10");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementTube10)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementTube10);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1MeasurementTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1MeasurementTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1MeasurementTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1MeasurementTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1Sheet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1Sheet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1Sheet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1Sheet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetApprovalDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetApprovalDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetApprovalDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetApprovalDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetApprovalMonth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetApprovalMonth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetApprovalMonth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetApprovalMonth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetApprovalYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetApprovalYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetApprovalYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetApprovalYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetApprovedBySupervisorInitials   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetApprovedBySupervisorInitials");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetApprovedBySupervisorInitials)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetApprovedBySupervisorInitials);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath1Blank44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath1Blank44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath1Blank44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath1Blank44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath1Negative44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath1Negative44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath1Negative44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath1Negative44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath1NonTarget44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath1NonTarget44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath1NonTarget44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath1NonTarget44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath1Positive44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath1Positive44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath1Positive44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath1Positive44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath2Blank44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath2Blank44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath2Blank44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath2Blank44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath2Negative44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath2Negative44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath2Negative44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath2Negative44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath2NonTarget44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath2NonTarget44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath2NonTarget44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath2NonTarget44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath2Positive44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath2Positive44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath2Positive44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath2Positive44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath3Blank44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath3Blank44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath3Blank44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath3Blank44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath3Negative44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath3Negative44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath3Negative44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath3Negative44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath3NonTarget44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath3NonTarget44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath3NonTarget44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath3NonTarget44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBath3Positive44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBath3Positive44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBath3Positive44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBath3Positive44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetBlank35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetBlank35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetBlank35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetBlank35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetControlLot   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetControlLot");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetControlLot)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetControlLot);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetDailyDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetDailyDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetDailyDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetDailyDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetDailyDuplicateRLog   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetDailyDuplicateRLog");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetDailyDuplicateRLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetDailyDuplicateRLog);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncludeLaboratoryQAQC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncludeLaboratoryQAQC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncludeLaboratoryQAQC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncludeLaboratoryQAQC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath1EndTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath1EndTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath1EndTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath1EndTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath1StartTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath1StartTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath1StartTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath1StartTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath1TimeCalculated   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath1TimeCalculated");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath1TimeCalculated)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath1TimeCalculated);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath2EndTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath2EndTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath2EndTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath2EndTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath2StartTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath2StartTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath2StartTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath2StartTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath2TimeCalculated   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath2TimeCalculated");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath2TimeCalculated)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath2TimeCalculated);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath3EndTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath3EndTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath3EndTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath3EndTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath3StartTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath3StartTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath3StartTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath3StartTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationBath3TimeCalculated   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationBath3TimeCalculated");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationBath3TimeCalculated)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationBath3TimeCalculated);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIncubationStartSameDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIncubationStartSameDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIncubationStartSameDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIncubationStartSameDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIntertechDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIntertechDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIntertechDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIntertechDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIntertechDuplicateRLog   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIntertechDuplicateRLog");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIntertechDuplicateRLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIntertechDuplicateRLog);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetIntertechReadAcceptableOrUnacceptable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetIntertechReadAcceptableOrUnacceptable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetIntertechReadAcceptableOrUnacceptable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetIntertechReadAcceptableOrUnacceptable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetLabSheetA1MeasurementList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetLabSheetA1MeasurementList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetLabSheetA1MeasurementList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetLabSheetA1MeasurementList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetLabSheetType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetLabSheetType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetLabSheetType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetLabSheetType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetLabSheetTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetLabSheetTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetLabSheetTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetLabSheetTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetLog   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetLog");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetLog);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetLot35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetLot35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetLot35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetLot35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetLot44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetLot44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetLot44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetLot44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetNegative35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetNegative35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetNegative35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetNegative35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetNonTarget35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetNonTarget35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetNonTarget35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetNonTarget35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetPositive35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetPositive35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetPositive35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetPositive35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsReadBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsReadBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsReadBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsReadBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsReadDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsReadDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsReadDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsReadDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsReadMonth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsReadMonth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsReadMonth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsReadMonth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsReadYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsReadYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsReadYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsReadYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsRecordedBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsRecordedBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsRecordedBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsRecordedBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsRecordedDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsRecordedDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsRecordedDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsRecordedDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsRecordedMonth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsRecordedMonth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsRecordedMonth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsRecordedMonth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetResultsRecordedYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetResultsRecordedYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetResultsRecordedYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetResultsRecordedYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetRunComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetRunComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetRunComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetRunComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetRunDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetRunDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetRunDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetRunDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetRunMonth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetRunMonth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetRunMonth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetRunMonth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetRunNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetRunNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetRunNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetRunNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetRunWeatherComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetRunWeatherComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetRunWeatherComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetRunWeatherComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetRunYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetRunYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetRunYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetRunYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSalinitiesReadBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSalinitiesReadBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSalinitiesReadBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSalinitiesReadBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSalinitiesReadDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSalinitiesReadDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSalinitiesReadDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSalinitiesReadDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSalinitiesReadMonth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSalinitiesReadMonth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSalinitiesReadMonth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSalinitiesReadMonth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSalinitiesReadYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSalinitiesReadYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSalinitiesReadYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSalinitiesReadYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSampleBottleLotNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSampleBottleLotNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSampleBottleLotNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSampleBottleLotNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSampleCrewInitials   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSampleCrewInitials");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSampleCrewInitials)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSampleCrewInitials);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSampleType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSampleType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSampleType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSampleType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSampleTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSampleTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSampleTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSampleTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSamplingPlanType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSamplingPlanType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSamplingPlanType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSamplingPlanType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSamplingPlanTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSamplingPlanTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSamplingPlanTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSamplingPlanTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSubsectorLocation   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSubsectorLocation");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSubsectorLocation)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSubsectorLocation);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSubsectorName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSubsectorName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSubsectorName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSubsectorName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCAverage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCAverage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCAverage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCAverage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCField1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCField1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCField1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCField1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCField2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCField2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCField2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCField2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCFirst   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCFirst");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCFirst)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCFirst);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCHas2Coolers   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCHas2Coolers");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCHas2Coolers)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCHas2Coolers);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCLab1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCLab1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCLab1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCLab1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTCLab2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTCLab2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTCLab2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTCLab2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetTides   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetTides");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetTides)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetTides);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetVersion   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetVersion");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetVersion)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetVersion);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetWaterBath1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetWaterBath1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetWaterBath1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetWaterBath1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetWaterBath2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetWaterBath2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetWaterBath2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetWaterBath2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetWaterBath3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetWaterBath3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetWaterBath3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetWaterBath3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetA1SheetWaterBathCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetA1SheetWaterBathCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetA1SheetWaterBathCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetA1SheetWaterBathCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAcceptedOrRejectedByContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAcceptedOrRejectedByContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAcceptedOrRejectedByContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAcceptedOrRejectedByContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAcceptedOrRejectedByContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAcceptedOrRejectedByContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAcceptedOrRejectedByContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAcceptedOrRejectedByContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAcceptedOrRejectedDateTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAcceptedOrRejectedDateTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAcceptedOrRejectedDateTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAcceptedOrRejectedDateTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAndA1Sheet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAndA1Sheet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAndA1Sheet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAndA1Sheet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAndA1SheetHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAndA1SheetHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAndA1SheetHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAndA1SheetHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAndA1SheetLabSheet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAndA1SheetLabSheet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAndA1SheetLabSheet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAndA1SheetLabSheet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetAndA1SheetLabSheetA1Sheet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetAndA1SheetLabSheetA1Sheet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetAndA1SheetLabSheetA1Sheet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetAndA1SheetLabSheetA1Sheet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath1Blank44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath1Blank44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath1Blank44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath1Blank44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath1Negative44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath1Negative44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath1Negative44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath1Negative44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath1NonTarget44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath1NonTarget44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath1NonTarget44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath1NonTarget44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath1Positive44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath1Positive44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath1Positive44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath1Positive44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath2Blank44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath2Blank44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath2Blank44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath2Blank44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath2Negative44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath2Negative44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath2Negative44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath2Negative44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath2NonTarget44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath2NonTarget44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath2NonTarget44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath2NonTarget44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath2Positive44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath2Positive44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath2Positive44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath2Positive44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath3Blank44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath3Blank44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath3Blank44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath3Blank44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath3Negative44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath3Negative44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath3Negative44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath3Negative44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath3NonTarget44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath3NonTarget44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath3NonTarget44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath3NonTarget44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBath3Positive44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBath3Positive44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBath3Positive44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBath3Positive44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailBlank35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailBlank35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailBlank35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailBlank35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailControlLot   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailControlLot");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailControlLot)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailControlLot);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailDailyDuplicateAcceptable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailDailyDuplicateAcceptable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailDailyDuplicateAcceptable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailDailyDuplicateAcceptable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailDailyDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailDailyDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailDailyDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailDailyDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailDailyDuplicateRLog   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailDailyDuplicateRLog");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailDailyDuplicateRLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailDailyDuplicateRLog);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath1EndTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath1EndTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath1EndTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath1EndTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath1StartTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath1StartTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath1StartTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath1StartTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath1TimeCalculated_minutes   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath1TimeCalculated_minutes");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath1TimeCalculated_minutes)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath1TimeCalculated_minutes);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath2EndTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath2EndTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath2EndTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath2EndTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath2StartTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath2StartTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath2StartTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath2StartTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath2TimeCalculated_minutes   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath2TimeCalculated_minutes");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath2TimeCalculated_minutes)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath2TimeCalculated_minutes);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath3EndTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath3EndTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath3EndTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath3EndTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath3StartTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath3StartTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath3StartTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath3StartTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIncubationBath3TimeCalculated_minutes   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIncubationBath3TimeCalculated_minutes");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIncubationBath3TimeCalculated_minutes)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIncubationBath3TimeCalculated_minutes);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIntertechDuplicateAcceptable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIntertechDuplicateAcceptable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIntertechDuplicateAcceptable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIntertechDuplicateAcceptable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIntertechDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIntertechDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIntertechDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIntertechDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIntertechDuplicateRLog   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIntertechDuplicateRLog");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIntertechDuplicateRLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIntertechDuplicateRLog);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailIntertechReadAcceptable   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailIntertechReadAcceptable");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailIntertechReadAcceptable)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailIntertechReadAcceptable);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLabSheetDetailID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLabSheetDetailID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLabSheetDetailID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLabSheetDetailID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLabSheetID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLabSheetID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLabSheetID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLabSheetID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLot35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLot35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLot35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLot35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailLot44_5   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailLot44_5");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailLot44_5)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailLot44_5);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailNegative35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailNegative35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailNegative35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailNegative35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailNonTarget35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailNonTarget35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailNonTarget35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailNonTarget35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailPositive35   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailPositive35");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailPositive35)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailPositive35);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailResultsReadBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailResultsReadBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailResultsReadBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailResultsReadBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailResultsReadDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailResultsReadDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailResultsReadDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailResultsReadDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailResultsRecordedBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailResultsRecordedBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailResultsRecordedBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailResultsRecordedBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailResultsRecordedDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailResultsRecordedDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailResultsRecordedDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailResultsRecordedDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailRunComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailRunComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailRunComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailRunComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailRunDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailRunDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailRunDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailRunDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailRunWeatherComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailRunWeatherComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailRunWeatherComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailRunWeatherComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSalinitiesReadBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSalinitiesReadBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSalinitiesReadBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSalinitiesReadBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSalinitiesReadDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSalinitiesReadDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSalinitiesReadDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSalinitiesReadDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSampleBottleLotNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSampleBottleLotNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSampleBottleLotNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSampleBottleLotNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSampleCrewInitials   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSampleCrewInitials");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSampleCrewInitials)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSampleCrewInitials);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSamplingPlanID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSamplingPlanID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSamplingPlanID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSamplingPlanID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTCAverage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTCAverage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTCAverage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTCAverage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTCField1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTCField1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTCField1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTCField1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTCField2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTCField2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTCField2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTCField2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTCFirst   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTCFirst");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTCFirst)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTCFirst);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTCLab1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTCLab1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTCLab1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTCLab1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTCLab2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTCLab2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTCLab2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTCLab2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailTides   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailTides");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailTides)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailTides);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailVersion   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailVersion");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailVersion)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailVersion);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailWaterBath1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailWaterBath1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailWaterBath1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailWaterBath1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailWaterBath2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailWaterBath2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailWaterBath2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailWaterBath2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailWaterBath3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailWaterBath3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailWaterBath3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailWaterBath3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailWaterBathCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailWaterBathCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailWaterBathCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailWaterBathCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetDetailWeather   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetDetailWeather");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetDetailWeather)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetDetailWeather);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetFileContent   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetFileContent");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetFileContent)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetFileContent);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetFileLastModifiedDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetFileLastModifiedDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetFileLastModifiedDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetFileLastModifiedDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetFileName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetFileName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetFileName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetFileName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLabSheetID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLabSheetID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLabSheetID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLabSheetID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLabSheetStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLabSheetStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLabSheetStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLabSheetStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLabSheetStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLabSheetStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLabSheetStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLabSheetStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLabSheetType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLabSheetType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLabSheetType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLabSheetType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLabSheetTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLabSheetTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLabSheetTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLabSheetTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetMonth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetMonth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetMonth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetMonth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetMWQMRunTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetMWQMRunTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetMWQMRunTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetMWQMRunTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetMWQMRunTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetMWQMRunTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetMWQMRunTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetMWQMRunTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetOtherServerLabSheetID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetOtherServerLabSheetID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetOtherServerLabSheetID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetOtherServerLabSheetID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetRejectReason   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetRejectReason");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetRejectReason)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetRejectReason);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetRunNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetRunNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetRunNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetRunNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSampleType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSampleType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSampleType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSampleType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSampleTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSampleTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSampleTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSampleTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSamplingPlanID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSamplingPlanID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSamplingPlanID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSamplingPlanID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSamplingPlanName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSamplingPlanName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSamplingPlanName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSamplingPlanName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSamplingPlanType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSamplingPlanType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSamplingPlanType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSamplingPlanType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSamplingPlanTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSamplingPlanTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSamplingPlanTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSamplingPlanTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailLabSheetDetailID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailLabSheetDetailID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailLabSheetDetailID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailLabSheetDetailID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailLabSheetTubeMPNDetailID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailLabSheetTubeMPNDetailID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailLabSheetTubeMPNDetailID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailLabSheetTubeMPNDetailID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailMPN   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailMPN");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailMPN)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailMPN);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailMWQMSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailMWQMSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailMWQMSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailMWQMSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailMWQMSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailMWQMSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailMWQMSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailMWQMSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailProcessedBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailProcessedBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailProcessedBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailProcessedBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailSalinity   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailSalinity");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailSalinity)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailSalinity);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailSampleDateTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailSampleDateTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailSampleDateTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailSampleDateTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailSampleType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailSampleType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailSampleType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailSampleType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailSampleTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailSampleTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailSampleTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailSampleTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailSiteComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailSiteComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailSiteComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailSiteComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailTemperature   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailTemperature");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailTemperature)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailTemperature);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailTube0_1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailTube0_1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailTube0_1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailTube0_1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailTube1_0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailTube1_0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailTube1_0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailTube1_0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetTubeMPNDetailTube10   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetTubeMPNDetailTube10");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetTubeMPNDetailTube10)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetTubeMPNDetailTube10);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LabSheetYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LabSheetYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLabSheetYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LabSheetYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndContact   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndContact");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndContact)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndContact);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndContactError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndContactError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndContactError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndContactError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndContactHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndContactHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndContactHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndContactHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndContactLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndContactLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndContactLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndContactLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndContactLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndContactLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndContactLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndContactLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndTVTextError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndTVTextError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndTVTextError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndTVTextError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndTVTextHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndTVTextHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndTVTextHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndTVTextHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndTVTextLastUpdateDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndTVTextLastUpdateDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndTVTextLastUpdateDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndTVTextLastUpdateDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndTVTextLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndTVTextLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndTVTextLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndTVTextLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LastUpdateAndTVTextTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LastUpdateAndTVTextTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLastUpdateAndTVTextTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LastUpdateAndTVTextTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LatLng   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LatLng");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLatLng)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LatLng);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LatLngHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LatLngHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLatLngHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LatLngHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LatLngLat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LatLngLat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLatLngLat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LatLngLat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LatLngLng   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LatLngLng");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLatLngLng)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LatLngLng);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Log   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Log");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLog)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Log);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Login   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Login");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogin)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Login);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LoginConfirmPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LoginConfirmPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLoginConfirmPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LoginConfirmPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogInformation   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogInformation");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogInformation)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogInformation);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LoginHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LoginHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLoginHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LoginHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LoginLoginEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LoginLoginEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLoginLoginEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LoginLoginEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LoginPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LoginPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLoginPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LoginPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogLogCommand   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogLogCommand");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogLogCommand)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogLogCommand);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogLogCommandText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogLogCommandText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogLogCommandText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogLogCommandText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogLogID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogLogID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogLogID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogLogID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.LogTableName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("LogTableName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResLogTableName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.LogTableName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfo   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfo");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfo)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfo);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLatMax   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLatMax");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLatMax)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLatMax);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLatMin   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLatMin");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLatMin)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLatMin);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLngMax   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLngMax");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLngMax)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLngMax);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoLngMin   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoLngMin");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoLngMin)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoLngMin);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoMapInfoDrawType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoMapInfoDrawType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoMapInfoDrawType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoMapInfoDrawType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoMapInfoDrawTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoMapInfoDrawTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoMapInfoDrawTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoMapInfoDrawTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoMapInfoID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoMapInfoID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoMapInfoID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoMapInfoID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPoint   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPoint");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPoint)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPoint);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointLat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointLat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointLat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointLat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointLng   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointLng");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointLng)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointLng);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointMapInfoID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointMapInfoID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointMapInfoID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointMapInfoID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointMapInfoPointID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointMapInfoPointID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointMapInfoPointID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointMapInfoPointID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoPointOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoPointOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoPointOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoPointOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapInfoTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapInfoTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapInfoTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapInfoTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapObj   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapObj");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapObj)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapObj);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapObjCoordList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapObjCoordList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapObjCoordList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapObjCoordList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapObjHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapObjHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapObjHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapObjHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapObjMapInfoDrawType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapObjMapInfoDrawType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapObjMapInfoDrawType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapObjMapInfoDrawType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapObjMapInfoDrawTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapObjMapInfoDrawTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapObjMapInfoDrawTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapObjMapInfoDrawTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MapObjMapInfoID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MapObjMapInfoID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMapObjMapInfoID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MapObjMapInfoID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryCondition   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryCondition");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryCondition)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryCondition);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionFormat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionFormat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionFormat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionFormat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLength_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionLength_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionLength_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLength_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionMikeBoundaryConditionTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionMikeBoundaryConditionTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionMikeBoundaryConditionTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionNumberOfWebTideNodes   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionNumberOfWebTideNodes");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionNumberOfWebTideNodes)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionNumberOfWebTideNodes);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionWebTideDataFromStartToEndDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionWebTideDataFromStartToEndDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionWebTideDataFromStartToEndDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionWebTideDataFromStartToEndDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionWebTideDataSet   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionWebTideDataSet");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionWebTideDataSet)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionWebTideDataSet);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeBoundaryConditionWebTideDataSetText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeBoundaryConditionWebTideDataSetText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeBoundaryConditionWebTideDataSetText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeBoundaryConditionWebTideDataSetText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenario   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenario");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenario)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenario);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioAmbientSalinity_PSU   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioAmbientSalinity_PSU");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioAmbientSalinity_PSU)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioAmbientSalinity_PSU);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioAmbientTemperature_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioAmbientTemperature_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioAmbientTemperature_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioAmbientTemperature_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioDecayFactor_per_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioDecayFactor_per_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioDecayFactor_per_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioDecayFactor_per_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioDecayFactorAmplitude   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioDecayFactorAmplitude");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioDecayFactorAmplitude)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioDecayFactorAmplitude);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioDecayIsConstant   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioDecayIsConstant");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioDecayIsConstant)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioDecayIsConstant);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioErrorInfo   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioErrorInfo");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioErrorInfo)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioErrorInfo);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioEstimatedHydroFileSize   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioEstimatedHydroFileSize");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioEstimatedHydroFileSize)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioEstimatedHydroFileSize);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioEstimatedTransFileSize   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioEstimatedTransFileSize");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioEstimatedTransFileSize)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioEstimatedTransFileSize);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioManningNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioManningNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioManningNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioManningNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioEndDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioEndDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioEndDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioEndDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioExecutionTime_min   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioExecutionTime_min");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioExecutionTime_min)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioExecutionTime_min);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioStartExecutionDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioStartExecutionDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioStartExecutionDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioStartExecutionDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioMikeScenarioTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioMikeScenarioTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioMikeScenarioTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioMikeScenarioTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioNumberOfElements   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioNumberOfElements");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioNumberOfElements)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioNumberOfElements);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioNumberOfHydroOutputParameters   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioNumberOfHydroOutputParameters");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioNumberOfHydroOutputParameters)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioNumberOfHydroOutputParameters);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioNumberOfSigmaLayers   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioNumberOfSigmaLayers");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioNumberOfSigmaLayers)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioNumberOfSigmaLayers);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioNumberOfTimeSteps   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioNumberOfTimeSteps");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioNumberOfTimeSteps)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioNumberOfTimeSteps);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioNumberOfTransOutputParameters   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioNumberOfTransOutputParameters");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioNumberOfTransOutputParameters)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioNumberOfTransOutputParameters);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioNumberOfZLayers   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioNumberOfZLayers");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioNumberOfZLayers)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioNumberOfZLayers);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioParentMikeScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioParentMikeScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioParentMikeScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioParentMikeScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioResultFrequency_min   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioResultFrequency_min");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioResultFrequency_min)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioResultFrequency_min);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioScenarioStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioScenarioStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioScenarioStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioScenarioStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioScenarioStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioScenarioStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioScenarioStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioScenarioStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioWindDirection_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioWindDirection_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioWindDirection_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioWindDirection_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeScenarioWindSpeed_km_h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeScenarioWindSpeed_km_h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeScenarioWindSpeed_km_h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeScenarioWindSpeed_km_h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSource   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSource");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSource)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSource);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceInclude   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceInclude");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceInclude)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceInclude);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceIsContinuous   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceIsContinuous");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceIsContinuous)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceIsContinuous);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceIsRiver   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceIsRiver");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceIsRiver)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceIsRiver);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceMikeSourceID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceMikeSourceID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceMikeSourceID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceMikeSourceID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceMikeSourceTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceMikeSourceTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceMikeSourceTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceMikeSourceTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceMikeSourceTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceMikeSourceTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceMikeSourceTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceMikeSourceTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceSourceNumberString   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceSourceNumberString");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceSourceNumberString)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceSourceNumberString);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEnd   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEnd");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEnd)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEnd);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndEndDateAndTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndEndDateAndTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndEndDateAndTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndEndDateAndTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndMikeSourceID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndMikeSourceID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndMikeSourceID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndMikeSourceID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndMikeSourceStartEndID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndMikeSourceStartEndID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndMikeSourceStartEndID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndMikeSourceStartEndID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourceFlowEnd_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourceFlowEnd_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourceFlowEnd_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourceFlowEnd_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourceFlowStart_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourceFlowStart_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourceFlowStart_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourceFlowStart_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourcePollutionEnd_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourcePollutionEnd_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourcePollutionEnd_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourcePollutionEnd_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourcePollutionStart_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourcePollutionStart_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourcePollutionStart_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourcePollutionStart_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourceSalinityEnd_PSU   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourceSalinityEnd_PSU");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourceSalinityEnd_PSU)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourceSalinityEnd_PSU);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourceSalinityStart_PSU   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourceSalinityStart_PSU");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourceSalinityStart_PSU)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourceSalinityStart_PSU);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourceTemperatureEnd_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourceTemperatureEnd_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourceTemperatureEnd_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourceTemperatureEnd_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndSourceTemperatureStart_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndSourceTemperatureStart_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndSourceTemperatureStart_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndSourceTemperatureStart_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MikeSourceStartEndStartDateAndTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MikeSourceStartEndStartDateAndTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMikeSourceStartEndStartDateAndTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MikeSourceStartEndStartDateAndTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameter   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameter");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameter)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameter);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterAnalysisCalculationType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterAnalysisCalculationType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterAnalysisCalculationType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterAnalysisCalculationType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterAnalysisName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterAnalysisName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterAnalysisName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterAnalysisName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterAnalysisReportYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterAnalysisReportYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterAnalysisReportYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterAnalysisReportYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterDryLimit24h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterDryLimit24h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterDryLimit24h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterDryLimit24h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterDryLimit48h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterDryLimit48h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterDryLimit48h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterDryLimit48h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterDryLimit72h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterDryLimit72h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterDryLimit72h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterDryLimit72h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterDryLimit96h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterDryLimit96h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterDryLimit96h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterDryLimit96h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterEndDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterEndDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterEndDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterEndDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterFullYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterFullYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterFullYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterFullYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterMidRangeNumberOfDays   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterMidRangeNumberOfDays");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterMidRangeNumberOfDays)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterMidRangeNumberOfDays);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterMWQMAnalysisReportParameterID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterMWQMAnalysisReportParameterID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterMWQMAnalysisReportParameterID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterMWQMAnalysisReportParameterID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterNumberOfRuns   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterNumberOfRuns");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterNumberOfRuns)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterNumberOfRuns);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterRunsToOmit   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterRunsToOmit");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterRunsToOmit)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterRunsToOmit);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterShortRangeNumberOfDays   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterShortRangeNumberOfDays");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterShortRangeNumberOfDays)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterShortRangeNumberOfDays);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterStartDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterStartDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterStartDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterStartDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterWetLimit24h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterWetLimit24h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterWetLimit24h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterWetLimit24h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterWetLimit48h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterWetLimit48h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterWetLimit48h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterWetLimit48h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterWetLimit72h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterWetLimit72h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterWetLimit72h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterWetLimit72h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMAnalysisReportParameterWetLimit96h   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMAnalysisReportParameterWetLimit96h");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMAnalysisReportParameterWetLimit96h)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMAnalysisReportParameterWetLimit96h);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPN   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPN");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPN)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPN);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNMPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNMPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNMPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNMPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNMWQMLookupMPNID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNMWQMLookupMPNID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNMWQMLookupMPNID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNMWQMLookupMPNID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNTubes01   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNTubes01");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNTubes01)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNTubes01);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNTubes1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNTubes1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNTubes1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNTubes1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMLookupMPNTubes10   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMLookupMPNTubes10");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMLookupMPNTubes10)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMLookupMPNTubes10);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRun   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRun");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRun)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRun);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunAnalyzeMethod   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunAnalyzeMethod");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunAnalyzeMethod)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunAnalyzeMethod);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunAnalyzeMethodText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunAnalyzeMethodText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunAnalyzeMethodText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunAnalyzeMethodText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunEndDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunEndDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunEndDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunEndDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabAnalyzeBath1IncubationStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabAnalyzeBath2IncubationStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabAnalyzeBath3IncubationStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLaboratory   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLaboratory");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLaboratory)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLaboratory);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLaboratoryText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLaboratoryText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLaboratoryText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLaboratoryText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabReceivedDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabReceivedDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabReceivedDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabReceivedDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabRunSampleApprovalDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabRunSampleApprovalDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabRunSampleApprovalDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabRunSampleApprovalDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabSampleApprovalContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabSampleApprovalContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabSampleApprovalContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabSampleApprovalContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLabSampleApprovalContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLabSampleApprovalContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLabSampleApprovalContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLabSampleApprovalContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageMWQMRunID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageMWQMRunID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageMWQMRunID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageMWQMRunID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageMWQMRunLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageMWQMRunLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageMWQMRunLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageMWQMRunLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageRunComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageRunComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageRunComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageRunComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageRunWeatherComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageRunWeatherComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageRunWeatherComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageRunWeatherComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageTranslationStatusRunComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageTranslationStatusRunComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageTranslationStatusRunComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageTranslationStatusRunComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageTranslationStatusRunCommentText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageTranslationStatusRunCommentText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageTranslationStatusRunCommentText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageTranslationStatusRunCommentText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageTranslationStatusRunWeatherComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageTranslationStatusRunWeatherComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageTranslationStatusRunWeatherComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageTranslationStatusRunWeatherComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLanguageTranslationStatusRunWeatherCommentText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLanguageTranslationStatusRunWeatherCommentText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLanguageTranslationStatusRunWeatherCommentText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLanguageTranslationStatusRunWeatherCommentText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunMWQMRunID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunMWQMRunID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunMWQMRunID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunMWQMRunID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunMWQMRunTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunMWQMRunTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunMWQMRunTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunMWQMRunTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunMWQMRunTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunMWQMRunTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunMWQMRunTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunMWQMRunTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay0_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay0_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay0_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay0_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay1_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay1_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay1_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay1_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay10_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay10_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay10_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay10_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay2_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay2_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay2_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay2_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay3_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay3_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay3_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay3_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay4_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay4_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay4_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay4_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay5_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay5_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay5_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay5_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay6_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay6_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay6_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay6_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay7_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay7_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay7_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay7_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay8_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay8_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay8_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay8_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRainDay9_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRainDay9_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRainDay9_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRainDay9_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRemoveFromStat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRemoveFromStat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRemoveFromStat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRemoveFromStat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRunNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRunNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRunNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRunNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRunSampleType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRunSampleType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRunSampleType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRunSampleType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunRunSampleTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunRunSampleTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunRunSampleTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunRunSampleTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSampleCrewInitials   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSampleCrewInitials");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSampleCrewInitials)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSampleCrewInitials);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSampleMatrix   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSampleMatrix");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSampleMatrix)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSampleMatrix);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSampleMatrixText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSampleMatrixText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSampleMatrixText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSampleMatrixText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSampleStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSampleStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSampleStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSampleStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSampleStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSampleStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSampleStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSampleStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSeaStateAtEnd_BeaufortScale   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSeaStateAtEnd_BeaufortScale");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSeaStateAtEnd_BeaufortScale)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSeaStateAtEnd_BeaufortScale);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSeaStateAtEnd_BeaufortScaleText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSeaStateAtEnd_BeaufortScaleText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSeaStateAtEnd_BeaufortScaleText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSeaStateAtEnd_BeaufortScaleText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSeaStateAtStart_BeaufortScale   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSeaStateAtStart_BeaufortScale");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSeaStateAtStart_BeaufortScale)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSeaStateAtStart_BeaufortScale);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSeaStateAtStart_BeaufortScaleText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSeaStateAtStart_BeaufortScaleText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSeaStateAtStart_BeaufortScaleText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSeaStateAtStart_BeaufortScaleText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunTemperatureControl1_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunTemperatureControl1_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunTemperatureControl1_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunTemperatureControl1_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunTemperatureControl2_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunTemperatureControl2_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunTemperatureControl2_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunTemperatureControl2_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunTide_End   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunTide_End");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunTide_End)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunTide_End);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunTide_EndText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunTide_EndText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunTide_EndText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunTide_EndText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunTide_Start   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunTide_Start");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunTide_Start)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunTide_Start);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunTide_StartText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunTide_StartText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunTide_StartText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunTide_StartText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunWaterLevelAtBrook_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunWaterLevelAtBrook_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunWaterLevelAtBrook_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunWaterLevelAtBrook_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunWaveHightAtEnd_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunWaveHightAtEnd_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunWaveHightAtEnd_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunWaveHightAtEnd_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMRunWaveHightAtStart_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMRunWaveHightAtStart_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMRunWaveHightAtStart_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMRunWaveHightAtStart_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSample   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSample");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSample)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSample);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleDepth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleDepth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleDepth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleDepth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleDuplicateItem   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleDuplicateItem");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleDuplicateItem)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleDuplicateItem);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleDuplicateItemDuplicateSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleDuplicateItemDuplicateSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleDuplicateItemDuplicateSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleDuplicateItemDuplicateSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleDuplicateItemHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleDuplicateItemHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleDuplicateItemHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleDuplicateItemHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleDuplicateItemParentSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleDuplicateItemParentSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleDuplicateItemParentSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleDuplicateItemParentSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleFecCol_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleFecCol_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleFecCol_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleFecCol_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageMWQMSampleID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageMWQMSampleID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageMWQMSampleID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageMWQMSampleID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageMWQMSampleLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageMWQMSampleLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageMWQMSampleLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageMWQMSampleLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageMWQMSampleNote   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageMWQMSampleNote");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageMWQMSampleNote)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageMWQMSampleNote);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleMWQMRunTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleMWQMRunTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleMWQMRunTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleMWQMRunTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleMWQMRunTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleMWQMRunTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleMWQMRunTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleMWQMRunTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleMWQMSampleID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleMWQMSampleID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleMWQMSampleID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleMWQMSampleID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleMWQMSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleMWQMSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleMWQMSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleMWQMSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleMWQMSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleMWQMSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleMWQMSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleMWQMSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSamplePH   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSamplePH");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSamplePH)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSamplePH);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleProcessedBy   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleProcessedBy");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleProcessedBy)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleProcessedBy);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleSalinity_PPT   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleSalinity_PPT");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleSalinity_PPT)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleSalinity_PPT);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleSampleDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleSampleDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleSampleDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleSampleDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleSampleType_old   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleSampleType_old");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleSampleType_old)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleSampleType_old);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleSampleType_oldText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleSampleType_oldText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleSampleType_oldText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleSampleType_oldText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleSampleTypesText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleSampleTypesText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleSampleTypesText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleSampleTypesText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleTube_0_1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleTube_0_1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleTube_0_1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleTube_0_1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleTube_1_0   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleTube_1_0");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleTube_1_0)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleTube_1_0);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleTube_10   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleTube_10");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleTube_10)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleTube_10);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSampleWaterTemp_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSampleWaterTemp_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSampleWaterTemp_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSampleWaterTemp_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteDescription   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteDescription");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteDescription)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteDescription);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteLatestClassification   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteLatestClassification");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteLatestClassification)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteLatestClassification);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteLatestClassificationText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteLatestClassificationText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteLatestClassificationText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteLatestClassificationText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteMWQMSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteMWQMSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteMWQMSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteMWQMSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCDepth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCDepth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCDepth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCDepth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCDO   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCDO");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCDO)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCDO);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCFC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCFC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCFC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCFC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCGeoMean   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCGeoMean");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCGeoMean)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCGeoMean);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCMaxFC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCMaxFC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCMaxFC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCMaxFC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCMedian   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCMedian");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCMedian)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCMedian);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCMinFC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCMinFC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCMinFC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCMinFC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCP90   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCP90");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCP90)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCP90);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCPercOver260   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCPercOver260");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCPercOver260)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCPercOver260);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCPercOver43   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCPercOver43");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCPercOver43)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCPercOver43);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCPH   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCPH");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCPH)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCPH);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCSal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCSal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCSal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCSal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCSampCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCSampCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCSampCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCSampCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCSampleDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCSampleDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCSampleDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCSampleDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteSampleFCTemp   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteSampleFCTemp");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteSampleFCTemp)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteSampleFCTemp);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateEndDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateEndDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateEndDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateEndDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteStartEndDateID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateMWQMSiteStartEndDateID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateMWQMSiteStartEndDateID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteStartEndDateID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateMWQMSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateMWQMSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateMWQMSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateMWQMSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateMWQMSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSiteStartEndDateStartDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSiteStartEndDateStartDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSiteStartEndDateStartDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSiteStartEndDateStartDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsector   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsector");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsector)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsector);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageLogBook   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageLogBook");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageLogBook)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageLogBook);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageMWQMSubsectorID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageMWQMSubsectorID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageMWQMSubsectorID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageMWQMSubsectorID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageMWQMSubsectorLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageMWQMSubsectorLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageMWQMSubsectorLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageMWQMSubsectorLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageSubsectorDesc   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageSubsectorDesc");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageSubsectorDesc)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageSubsectorDesc);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusLogBook   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageTranslationStatusLogBook");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageTranslationStatusLogBook)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusLogBook);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusLogBookText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageTranslationStatusLogBookText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageTranslationStatusLogBookText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusLogBookText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusSubsectorDesc   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageTranslationStatusSubsectorDesc");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageTranslationStatusSubsectorDesc)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusSubsectorDesc);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusSubsectorDescText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLanguageTranslationStatusSubsectorDescText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLanguageTranslationStatusSubsectorDescText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLanguageTranslationStatusSubsectorDescText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorMWQMSubsectorID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorMWQMSubsectorID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorMWQMSubsectorID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorMWQMSubsectorID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorMWQMSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorMWQMSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorMWQMSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorMWQMSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorSubsectorHistoricKey   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorSubsectorHistoricKey");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorSubsectorHistoricKey)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorSubsectorHistoricKey);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.MWQMSubsectorTideLocationSIDText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("MWQMSubsectorTideLocationSIDText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResMWQMSubsectorTideLocationSIDText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.MWQMSubsectorTideLocationSIDText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContact   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContact");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContact)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContact);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactContactTitle   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactContactTitle");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactContactTitle)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactContactTitle);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactContactTitleText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactContactTitleText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactContactTitleText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactContactTitleText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactFirstName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactFirstName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactFirstName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactFirstName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactInitial   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactInitial");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactInitial)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactInitial);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactLastName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactLastName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactLastName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactLastName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NewContactLoginEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NewContactLoginEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNewContactLoginEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NewContactLoginEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Node   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Node");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Node);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeConnectNodeList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeConnectNodeList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeConnectNodeList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeConnectNodeList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeElementList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeElementList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeElementList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeElementList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeLayer   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeLayer");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeLayer)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeLayer);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeLayerHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeLayerHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeLayerHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeLayerHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeLayerLayer   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeLayerLayer");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeLayerLayer)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeLayerLayer);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeLayerNode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeLayerNode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeLayerNode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeLayerNode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeLayerZ   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeLayerZ");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeLayerZ)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeLayerZ);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeX   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeX");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeX)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeX);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeY   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeY");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeY)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeY);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.NodeZ   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("NodeZ");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResNodeZ)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.NodeZ);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.OtherFilesToUpload   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("OtherFilesToUpload");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResOtherFilesToUpload)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.OtherFilesToUpload);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.OtherFilesToUploadError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("OtherFilesToUploadError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResOtherFilesToUploadError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.OtherFilesToUploadError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.OtherFilesToUploadHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("OtherFilesToUploadHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResOtherFilesToUploadHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.OtherFilesToUploadHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.OtherFilesToUploadMikeScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("OtherFilesToUploadMikeScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResOtherFilesToUploadMikeScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.OtherFilesToUploadMikeScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.OtherFilesToUploadTVFileList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("OtherFilesToUploadTVFileList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResOtherFilesToUploadTVFileList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.OtherFilesToUploadTVFileList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceInactiveReasonEnumTextAndID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceInactiveReasonEnumTextAndID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceInactiveReasonEnumTextAndID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceInactiveReasonEnumTextAndID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceInactiveReasonEnumTextAndIDHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceInactiveReasonEnumTextAndIDHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceInactiveReasonEnumTextAndIDID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceInactiveReasonEnumTextAndIDID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceInactiveReasonEnumTextAndIDText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceInactiveReasonEnumTextAndIDText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceInactiveReasonEnumTextAndIDText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservation   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservation");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservation)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservation);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssueHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssueHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssueHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssueHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssueLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssueLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssueLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssueLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssueLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssueLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssueLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssueLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssueLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssueLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssueLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssueLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssueObservationInfo   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssueObservationInfo");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssueObservationInfo)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssueObservationInfo);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssueOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssueOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssueOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssueOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssuePolSourceObservationID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssuePolSourceObservationID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssuePolSourceObservationID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssuePolSourceObservationID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationIssuePolSourceObservationIssueID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationIssuePolSourceObservationIssueID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationIssuePolSourceObservationIssueID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationIssuePolSourceObservationIssueID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationObservation_ToBeDeleted   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationObservation_ToBeDeleted");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationObservation_ToBeDeleted)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationObservation_ToBeDeleted);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationObservationDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationObservationDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationObservationDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationObservationDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationPolSourceObservationID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationPolSourceObservationID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationPolSourceObservationID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationPolSourceObservationID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationPolSourceSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationPolSourceSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationPolSourceSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationPolSourceSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObservationPolSourceSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObservationPolSourceSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObservationPolSourceSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObservationPolSourceSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoChild   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoChild");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoChild)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoChild);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoChildHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoChildHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoChildHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoChildHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfo   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoChildPolSourceObsInfo");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoChildPolSourceObsInfo)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfo);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoChildStart   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoChildPolSourceObsInfoChildStart");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoChildPolSourceObsInfoChildStart)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoChildStart);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoChildStartText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoChildPolSourceObsInfoChildStartText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoChildPolSourceObsInfoChildStartText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoChildStartText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoChildPolSourceObsInfoText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoChildPolSourceObsInfoText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoChildPolSourceObsInfoText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoEnumTextAndID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoEnumTextAndID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoEnumTextAndID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoEnumTextAndID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoEnumTextAndIDHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoEnumTextAndIDHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoEnumTextAndIDHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoEnumTextAndIDHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoEnumTextAndIDID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoEnumTextAndIDID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoEnumTextAndIDID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoEnumTextAndIDID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceObsInfoEnumTextAndIDText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceObsInfoEnumTextAndIDText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceObsInfoEnumTextAndIDText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceObsInfoEnumTextAndIDText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteCivicAddressTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteCivicAddressTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteCivicAddressTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteCivicAddressTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteInactiveReason   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteInactiveReason");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteInactiveReason)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteInactiveReason);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteInactiveReasonText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteInactiveReasonText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteInactiveReasonText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteInactiveReasonText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteIsPointSource   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteIsPointSource");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteIsPointSource)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteIsPointSource);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteOldsiteid   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteOldsiteid");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteOldsiteid)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteOldsiteid);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSitePolSourceSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSitePolSourceSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSitePolSourceSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSitePolSourceSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSitePolSourceSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSitePolSourceSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSitePolSourceSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSitePolSourceSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSitePolSourceSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSitePolSourceSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSitePolSourceSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSitePolSourceSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolSourceSiteTemp_Locator_CanDelete   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolSourceSiteTemp_Locator_CanDelete");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolSourceSiteTemp_Locator_CanDelete)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolSourceSiteTemp_Locator_CanDelete);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolyPoint   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolyPoint");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolyPoint)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolyPoint);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolyPointHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolyPointHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolyPointHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolyPointHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolyPointXCoord   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolyPointXCoord");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolyPointXCoord)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolyPointXCoord);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolyPointYCoord   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolyPointYCoord");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolyPointYCoord)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolyPointYCoord);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.PolyPointZ   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("PolyPointZ");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResPolyPointZ)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.PolyPointZ);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedance   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedance");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedance)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedance);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceClimateSiteTVItemIDs   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceClimateSiteTVItemIDs");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceClimateSiteTVItemIDs)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceClimateSiteTVItemIDs);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceDaysPriorToStart   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceDaysPriorToStart");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceDaysPriorToStart)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceDaysPriorToStart);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceEmailDistributionListIDs   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceEmailDistributionListIDs");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceEmailDistributionListIDs)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceEmailDistributionListIDs);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceEndDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceEndDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceEndDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceEndDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceProvinceTVItemIDs   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceProvinceTVItemIDs");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceProvinceTVItemIDs)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceProvinceTVItemIDs);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceRainExceedanceID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceRainExceedanceID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceRainExceedanceID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceRainExceedanceID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceRainExtreme_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceRainExtreme_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceRainExtreme_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceRainExtreme_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceRainMaximum_mm   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceRainMaximum_mm");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceRainMaximum_mm)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceRainMaximum_mm);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceRepeatEveryYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceRepeatEveryYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceRepeatEveryYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceRepeatEveryYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceStartDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceStartDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceStartDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceStartDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceSubsectorTVItemIDs   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceSubsectorTVItemIDs");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceSubsectorTVItemIDs)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceSubsectorTVItemIDs);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RainExceedanceYearRound   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RainExceedanceYearRound");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRainExceedanceYearRound)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RainExceedanceYearRound);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurve   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurve");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurve)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurve);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveHydrometricSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveHydrometricSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveHydrometricSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveHydrometricSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveRatingCurveID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveRatingCurveID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveRatingCurveID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveRatingCurveID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveRatingCurveNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveRatingCurveNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveRatingCurveNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveRatingCurveNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueDischargeValue_m3_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueDischargeValue_m3_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueDischargeValue_m3_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueDischargeValue_m3_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueRatingCurveID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueRatingCurveID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueRatingCurveID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueRatingCurveID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueRatingCurveValueID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueRatingCurveValueID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueRatingCurveValueID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueRatingCurveValueID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RatingCurveValueStageValue_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RatingCurveValueStageValue_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRatingCurveValueStageValue_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RatingCurveValueStageValue_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Register   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Register");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegister)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Register);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterConfirmPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterConfirmPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterConfirmPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterConfirmPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterFirstName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterFirstName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterFirstName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterFirstName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterInitial   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterInitial");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterInitial)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterInitial);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterLastName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterLastName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterLastName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterLastName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterLoginEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterLoginEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterLoginEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterLoginEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RegisterWebName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RegisterWebName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRegisterWebName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RegisterWebName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordConfirmPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordConfirmPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordConfirmPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordConfirmPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordEmail   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordEmail");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordEmail)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordEmail);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordExpireDate_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordExpireDate_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordExpireDate_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordExpireDate_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordPassword   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordPassword");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordPassword)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordPassword);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.ResetPasswordResetPasswordID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("ResetPasswordResetPasswordID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResResetPasswordResetPasswordID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.ResetPasswordResetPasswordID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RTBStringPos   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RTBStringPos");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRTBStringPos)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RTBStringPos);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RTBStringPosEndPos   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RTBStringPosEndPos");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRTBStringPosEndPos)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RTBStringPosEndPos);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RTBStringPosHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RTBStringPosHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRTBStringPosHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RTBStringPosHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RTBStringPosStartPos   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RTBStringPosStartPos");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRTBStringPosStartPos)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RTBStringPosStartPos);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RTBStringPosTagText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RTBStringPosTagText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRTBStringPosTagText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RTBStringPosTagText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.RTBStringPosText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("RTBStringPosText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResRTBStringPosText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.RTBStringPosText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlan   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlan");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlan)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlan);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAccessCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAccessCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAccessCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAccessCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAndFilesLabSheetCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAndFilesLabSheetCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAndFilesLabSheetCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAndFilesLabSheetCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAndFilesLabSheetCountHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAndFilesLabSheetCountHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAndFilesLabSheetCountHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAndFilesLabSheetCountHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAndFilesLabSheetCountLabSheetHistoryCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAndFilesLabSheetCountLabSheetTransferredCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAndFilesLabSheetCountSamplingPlan   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAndFilesLabSheetCountSamplingPlan");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAndFilesLabSheetCountSamplingPlan)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAndFilesLabSheetCountSamplingPlan);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanApprovalCode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanApprovalCode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanApprovalCode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanApprovalCode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanCreatorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanCreatorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanCreatorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanCreatorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanCreatorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanCreatorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanCreatorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanCreatorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanDailyDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanDailyDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanDailyDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanDailyDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanForGroupName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanForGroupName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanForGroupName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanForGroupName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanIncludeLaboratoryQAQC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanIncludeLaboratoryQAQC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanIncludeLaboratoryQAQC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanIncludeLaboratoryQAQC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanIntertechDuplicatePrecisionCriteria   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanIntertechDuplicatePrecisionCriteria");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanIntertechDuplicatePrecisionCriteria)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanIntertechDuplicatePrecisionCriteria);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanLabSheetType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanLabSheetType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanLabSheetType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanLabSheetType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanLabSheetTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanLabSheetTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanLabSheetTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanLabSheetTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanProvinceTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanProvinceTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanProvinceTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanProvinceTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanProvinceTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanProvinceTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanProvinceTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanProvinceTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSampleType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSampleType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSampleType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSampleType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSampleTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSampleTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSampleTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSampleTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSamplingPlanFileTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSamplingPlanFileTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSamplingPlanFileTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSamplingPlanFileTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSamplingPlanFileTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSamplingPlanFileTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSamplingPlanFileTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSamplingPlanFileTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSamplingPlanID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSamplingPlanID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSamplingPlanID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSamplingPlanID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSamplingPlanName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSamplingPlanName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSamplingPlanName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSamplingPlanName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSamplingPlanType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSamplingPlanType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSamplingPlanType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSamplingPlanType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSamplingPlanTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSamplingPlanTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSamplingPlanTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSamplingPlanTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsector   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsector");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsector)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsector);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSamplingPlanID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSamplingPlanID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSamplingPlanID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSamplingPlanID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSamplingPlanSubsectorID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSamplingPlanSubsectorID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSamplingPlanSubsectorID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSamplingPlanSubsectorID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteIsDuplicate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteIsDuplicate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteIsDuplicate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteIsDuplicate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteMWQMSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteMWQMSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteMWQMSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteMWQMSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteMWQMSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteMWQMSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteMWQMSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteMWQMSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteSamplingPlanSubsectorID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteSamplingPlanSubsectorID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteSamplingPlanSubsectorID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteSamplingPlanSubsectorID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanSubsectorSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanSubsectorSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanSubsectorSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanSubsectorSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SamplingPlanYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SamplingPlanYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSamplingPlanYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SamplingPlanYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Search   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Search");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearch)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Search);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SearchHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SearchHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SearchHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Searchid   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Searchid");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchid)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Searchid);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SearchTagAndTerms   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SearchTagAndTerms");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchTagAndTerms)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SearchTagAndTerms);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SearchTagAndTermsHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SearchTagAndTermsHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchTagAndTermsHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SearchTagAndTermsHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SearchTagAndTermsSearchTag   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SearchTagAndTermsSearchTag");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchTagAndTermsSearchTag)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SearchTagAndTermsSearchTag);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SearchTagAndTermsSearchTagText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SearchTagAndTermsSearchTagText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchTagAndTermsSearchTagText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SearchTagAndTermsSearchTagText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SearchTagAndTermsSearchTermList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SearchTagAndTermsSearchTermList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchTagAndTermsSearchTermList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SearchTagAndTermsSearchTermList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Searchvalue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Searchvalue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSearchvalue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Searchvalue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Spill   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Spill");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpill)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Spill);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillAverageFlow_m3_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillAverageFlow_m3_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillAverageFlow_m3_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillAverageFlow_m3_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillEndDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillEndDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillEndDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillEndDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillInfrastructureTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillInfrastructureTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillInfrastructureTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillInfrastructureTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillInfrastructureTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillInfrastructureTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillInfrastructureTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillInfrastructureTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageSpillComment   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageSpillComment");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageSpillComment)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageSpillComment);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageSpillID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageSpillID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageSpillID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageSpillID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageSpillLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageSpillLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageSpillLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageSpillLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillMunicipalityTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillMunicipalityTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillMunicipalityTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillMunicipalityTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillMunicipalityTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillMunicipalityTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillMunicipalityTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillMunicipalityTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillSpillID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillSpillID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillSpillID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillSpillID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SpillStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SpillStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSpillStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SpillStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SubsectorMWQMSampleYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SubsectorMWQMSampleYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSubsectorMWQMSampleYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SubsectorMWQMSampleYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SubsectorMWQMSampleYearEarliestDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SubsectorMWQMSampleYearEarliestDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSubsectorMWQMSampleYearEarliestDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SubsectorMWQMSampleYearEarliestDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SubsectorMWQMSampleYearHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SubsectorMWQMSampleYearHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSubsectorMWQMSampleYearHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SubsectorMWQMSampleYearHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SubsectorMWQMSampleYearLatestDate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SubsectorMWQMSampleYearLatestDate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSubsectorMWQMSampleYearLatestDate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SubsectorMWQMSampleYearLatestDate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SubsectorMWQMSampleYearSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SubsectorMWQMSampleYearSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSubsectorMWQMSampleYearSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SubsectorMWQMSampleYearSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.SubsectorMWQMSampleYearYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("SubsectorMWQMSampleYearYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResSubsectorMWQMSampleYearYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.SubsectorMWQMSampleYearYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Tel   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Tel");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTel)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Tel);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelTelID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelTelID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelTelID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelTelID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelTelNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelTelNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelTelNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelTelNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelTelTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelTelTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelTelTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelTelTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelTelTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelTelTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelTelTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelTelTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelTelType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelTelType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelTelType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelTelType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TelTelTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TelTelTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTelTelTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TelTelTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValue   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValue");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValue)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValue);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueDepth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueDepth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueDepth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueDepth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueKeep   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueKeep");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueKeep)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueKeep);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueStorageDataType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueStorageDataType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueStorageDataType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueStorageDataType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueStorageDataTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueStorageDataTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueStorageDataTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueStorageDataTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideDataType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideDataType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideDataType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideDataType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideDataTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideDataTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideDataTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideDataTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideDataValueID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideDataValueID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideDataValueID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideDataValueID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideEnd   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideEnd");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideEnd)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideEnd);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideEndText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideEndText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideEndText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideEndText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideStart   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideStart");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideStart)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideStart);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueTideStartText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueTideStartText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueTideStartText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueTideStartText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueUVelocity_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueUVelocity_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueUVelocity_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueUVelocity_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideDataValueVVelocity_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideDataValueVVelocity_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideDataValueVVelocity_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideDataValueVVelocity_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocation   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocation");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocation)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocation);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationLat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationLat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationLat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationLat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationLng   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationLng");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationLng)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationLng);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationProv   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationProv");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationProv)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationProv);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationsid   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationsid");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationsid)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationsid);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationTideLocationID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationTideLocationID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationTideLocationID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationTideLocationID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideLocationZone   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideLocationZone");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideLocationZone)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideLocationZone);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteTideSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteTideSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteTideSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteTideSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteTideSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteTideSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteTideSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteTideSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteTideSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteTideSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteTideSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteTideSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteWebTideDatum_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteWebTideDatum_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteWebTideDatum_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteWebTideDatum_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TideSiteWebTideModel   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TideSiteWebTideModel");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTideSiteWebTideModel)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TideSiteWebTideModel);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFile   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFile");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFile)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFile);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileClientFilePath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileClientFilePath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileClientFilePath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileClientFilePath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFileCreatedDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFileCreatedDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFileCreatedDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFileCreatedDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFileInfo   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFileInfo");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFileInfo)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFileInfo);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFilePurpose   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFilePurpose");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFilePurpose)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFilePurpose);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFilePurposeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFilePurposeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFilePurposeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFilePurposeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFileSize_kb   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFileSize_kb");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFileSize_kb)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFileSize_kb);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFileType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFileType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFileType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFileType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFileTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFileTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFileTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFileTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileFromWater   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileFromWater");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileFromWater)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileFromWater);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageFileDescription   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageFileDescription");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageFileDescription)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageFileDescription);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageTVFileID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageTVFileID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageTVFileID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageTVFileID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLanguageTVFileLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLanguageTVFileLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLanguageTVFileLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLanguageTVFileLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileServerFileName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileServerFileName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileServerFileName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileServerFileName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileServerFilePath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileServerFilePath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileServerFilePath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileServerFilePath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileTemplateTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileTemplateTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileTemplateTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileTemplateTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileTemplateTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileTemplateTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileTemplateTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileTemplateTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileTVFileID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileTVFileID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileTVFileID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileTVFileID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileTVFileTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileTVFileTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileTVFileTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileTVFileTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFileTVFileTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFileTVFileTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFileTVFileTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFileTVFileTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFullText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFullText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFullText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFullText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFullTextFullText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFullTextFullText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFullTextFullText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFullTextFullText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFullTextHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFullTextHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFullTextHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFullTextHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVFullTextTVPath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVFullTextTVPath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVFullTextTVPath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVFullTextTVPath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItem   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItem");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItem)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItem);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLink   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLink");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLink)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLink);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkFlowTo   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkFlowTo");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkFlowTo)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkFlowTo);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkInfrastructureType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkInfrastructureType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkInfrastructureType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkInfrastructureType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkInfrastructureTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkTVItem   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkTVItem");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkTVItem)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkTVItem);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkTVItemLinkList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemInfrastructureTypeTVItemLinkTVItemLinkList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemInfrastructureTypeTVItemLinkTVItemLinkList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemInfrastructureTypeTVItemLinkTVItemLinkList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemIsActive   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemIsActive");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemIsActive)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemIsActive);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageTVItemLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageTVItemLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageTVItemLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageTVItemLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLanguageTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLanguageTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLanguageTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLanguageTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLink   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLink");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLink)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLink);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkEndDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkEndDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkEndDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkEndDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkFromTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkFromTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkFromTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkFromTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkFromTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkFromTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkFromTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkFromTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkFromTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkFromTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkFromTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkFromTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkFromTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkFromTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkFromTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkFromTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkParentTVItemLinkID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkParentTVItemLinkID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkParentTVItemLinkID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkParentTVItemLinkID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkStartDateTime_Local   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkStartDateTime_Local");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkStartDateTime_Local)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkStartDateTime_Local);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkToTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkToTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkToTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkToTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkToTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkToTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkToTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkToTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkToTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkToTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkToTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkToTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkToTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkToTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkToTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkToTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkTVItemLinkID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkTVItemLinkID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkTVItemLinkID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkTVItemLinkID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkTVLevel   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkTVLevel");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkTVLevel)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkTVLevel);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemLinkTVPath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemLinkTVPath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemLinkTVPath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemLinkTVPath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemParentID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemParentID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemParentID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemParentID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStat   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStat");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStat)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStat);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatChildCount   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatChildCount");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatChildCount)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatChildCount);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatTVItemStatID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatTVItemStatID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatTVItemStatID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatTVItemStatID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemStatTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemStatTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemStatTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemStatTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemSubsectorAndMWQMSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemSubsectorAndMWQMSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemSubsectorAndMWQMSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemSubsectorAndMWQMSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemSubsectorAndMWQMSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemSubsectorAndMWQMSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemSubsectorAndMWQMSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemSubsectorAndMWQMSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemSubsectorAndMWQMSiteTVItemMWQMSiteList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemSubsector   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemSubsectorAndMWQMSiteTVItemSubsector");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemSubsectorAndMWQMSiteTVItemSubsector)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemSubsectorAndMWQMSiteTVItemSubsector);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthTVAuth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthTVAuth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthTVAuth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthTVAuth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthTVAuthText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthTVAuthText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthTVAuthText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthTVAuthText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthTVItemID1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthTVItemID1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthTVItemID1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthTVItemID1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthTVItemUserAuthID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthTVItemUserAuthID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthTVItemUserAuthID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthTVItemUserAuthID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVAuthTVTypeStr   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVAuthTVTypeStr");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVAuthTVTypeStr)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVAuthTVTypeStr);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVLevel   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVLevel");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVLevel)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVLevel);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVPath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVPath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVPath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVPath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorization   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorization");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorization)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorization);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVAuth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVAuth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVAuth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVAuth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVAuthText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVAuthText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVAuthText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVAuthText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVItemID1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVItemID1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVItemID1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVItemID1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVItemID2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVItemID2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVItemID2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVItemID2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVItemID3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVItemID3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVItemID3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVItemID3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVItemID4   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVItemID4");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVItemID4)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVItemID4);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVItemUserAuthorizationID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVItemUserAuthorizationID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVItemUserAuthorizationID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVItemUserAuthorizationID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVText1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVText1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVText1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVText1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVText2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVText2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVText2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVText2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVText3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVText3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVText3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVText3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVItemUserAuthorizationTVText4   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVItemUserAuthorizationTVText4");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVItemUserAuthorizationTVText4)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVItemUserAuthorizationTVText4);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocation   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocation");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocation)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocation);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationError   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationError");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationError)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationError);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationMapObjList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationMapObjList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationMapObjList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationMapObjList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationSubTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationSubTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationSubTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationSubTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationSubTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationSubTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationSubTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationSubTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVLocationTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVLocationTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVLocationTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVLocationTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTextLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTextLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTextLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTextLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTextLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTextLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTextLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTextLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTextLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTextLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTextLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTextLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTextLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTextLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTextLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTextLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTextLanguageTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTextLanguageTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTextLanguageTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTextLanguageTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeNamesAndPath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeNamesAndPath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeNamesAndPath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeNamesAndPath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeNamesAndPathHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeNamesAndPathHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeNamesAndPathHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeNamesAndPathHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeNamesAndPathIndex   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeNamesAndPathIndex");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeNamesAndPathIndex)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeNamesAndPathIndex);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeNamesAndPathTVPath   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeNamesAndPathTVPath");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeNamesAndPathTVPath)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeNamesAndPathTVPath);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeNamesAndPathTVTypeName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeNamesAndPathTVTypeName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeNamesAndPathTVTypeName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeNamesAndPathTVTypeName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorization   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorization");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorization)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorization);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationTVAuth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationTVAuth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationTVAuth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationTVAuth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationTVAuthText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationTVAuthText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationTVAuthText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationTVAuthText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationTVType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationTVType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationTVType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationTVType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationTVTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationTVTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationTVTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationTVTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.TVTypeUserAuthorizationTVTypeUserAuthorizationID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("TVTypeUserAuthorizationTVTypeUserAuthorizationID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResTVTypeUserAuthorizationTVTypeUserAuthorizationID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.TVTypeUserAuthorizationTVTypeUserAuthorizationID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.URLNumberOfSamples   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("URLNumberOfSamples");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResURLNumberOfSamples)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.URLNumberOfSamples);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.URLNumberOfSamplesHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("URLNumberOfSamplesHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResURLNumberOfSamplesHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.URLNumberOfSamplesHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.URLNumberOfSamplesNumberOfSamples   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("URLNumberOfSamplesNumberOfSamples");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResURLNumberOfSamplesNumberOfSamples)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.URLNumberOfSamplesNumberOfSamples);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.URLNumberOfSamplesurl   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("URLNumberOfSamplesurl");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResURLNumberOfSamplesurl)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.URLNumberOfSamplesurl);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSite   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSite");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSite)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSite);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteEndYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteEndYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteEndYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteEndYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteParam1   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteParam1");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteParam1)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteParam1);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteParam2   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteParam2");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteParam2)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteParam2);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteParam3   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteParam3");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteParam3)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteParam3);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteParam4   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteParam4");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteParam4)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteParam4);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteSiteTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteSiteTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteSiteTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteSiteTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteSiteTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteSiteTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteSiteTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteSiteTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteSiteType   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteSiteType");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteSiteType)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteSiteType);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteSiteTypeText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteSiteTypeText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteSiteTypeText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteSiteTypeText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteStartYear   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteStartYear");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteStartYear)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteStartYear);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteSubsectorTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteSubsectorTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteSubsectorTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteSubsectorTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteUseEquation   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteUseEquation");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteUseEquation)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteUseEquation);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteUseOfSiteID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteUseOfSiteID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteUseOfSiteID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteUseOfSiteID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteUseWeight   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteUseWeight");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteUseWeight)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteUseWeight);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.UseOfSiteWeight_perc   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("UseOfSiteWeight_perc");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResUseOfSiteWeight_perc)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.UseOfSiteWeight_perc);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.Vector   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("Vector");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVector)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.Vector);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VectorEndNode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VectorEndNode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVectorEndNode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VectorEndNode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VectorHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VectorHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVectorHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VectorHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VectorStartNode   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VectorStartNode");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVectorStartNode)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VectorStartNode);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbient   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbient");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbient)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbient);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientAmbientSalinity_PSU   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientAmbientSalinity_PSU");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientAmbientSalinity_PSU)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientAmbientSalinity_PSU);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientAmbientTemperature_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientAmbientTemperature_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientAmbientTemperature_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientAmbientTemperature_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientBackgroundConcentration_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientBackgroundConcentration_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientBackgroundConcentration_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientBackgroundConcentration_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientCurrentDirection_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientCurrentDirection_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientCurrentDirection_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientCurrentDirection_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientCurrentSpeed_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientCurrentSpeed_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientCurrentSpeed_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientCurrentSpeed_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientFarFieldCurrentDirection_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientFarFieldCurrentDirection_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientFarFieldCurrentDirection_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientFarFieldCurrentDirection_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientFarFieldCurrentSpeed_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientFarFieldCurrentSpeed_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientFarFieldCurrentSpeed_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientFarFieldCurrentSpeed_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientFarFieldDiffusionCoefficient   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientFarFieldDiffusionCoefficient");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientFarFieldDiffusionCoefficient)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientFarFieldDiffusionCoefficient);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientMeasurementDepth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientMeasurementDepth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientMeasurementDepth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientMeasurementDepth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientPollutantDecayRate_per_day   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientPollutantDecayRate_per_day");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientPollutantDecayRate_per_day)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientPollutantDecayRate_per_day);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientRow   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientRow");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientRow)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientRow);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientVPAmbientID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientVPAmbientID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientVPAmbientID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientVPAmbientID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPAmbientVPScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPAmbientVPScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPAmbientVPScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPAmbientVPScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPFull   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPFull");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPFull)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPFull);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPFullHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPFullHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPFullHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPFullHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPFullVPAmbientList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPFullVPAmbientList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPFullVPAmbientList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPFullVPAmbientList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPFullVPResultList   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPFullVPResultList");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPFullVPResultList)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPFullVPResultList);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPFullVPScenario   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPFullVPScenario");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPFullVPScenario)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPFullVPScenario);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResult   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResult");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResult)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResult);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultConcentration_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultConcentration_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultConcentration_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultConcentration_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultDilution   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultDilution");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultDilution)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultDilution);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultDispersionDistance_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultDispersionDistance_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultDispersionDistance_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultDispersionDistance_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultFarFieldWidth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultFarFieldWidth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultFarFieldWidth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultFarFieldWidth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultOrdinal   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultOrdinal");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultOrdinal)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultOrdinal);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultTravelTime_hour   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultTravelTime_hour");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultTravelTime_hour)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultTravelTime_hour);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultVPResultID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultVPResultID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultVPResultID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultVPResultID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResultVPScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResultVPScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResultVPScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResultVPScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValues   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValues");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValues)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValues);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesConc   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesConc");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesConc)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesConc);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesDecay   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesDecay");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesDecay)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesDecay);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesDilu   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesDilu");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesDilu)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesDilu);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesDistance   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesDistance");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesDistance)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesDistance);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesFarfieldWidth   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesFarfieldWidth");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesFarfieldWidth)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesFarfieldWidth);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPResValuesTheTime   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPResValuesTheTime");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPResValuesTheTime)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPResValuesTheTime);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenario   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenario");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenario)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenario);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioAcuteMixZone_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioAcuteMixZone_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioAcuteMixZone_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioAcuteMixZone_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioChronicMixZone_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioChronicMixZone_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioChronicMixZone_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioChronicMixZone_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioEffluentConcentration_MPN_100ml   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioEffluentConcentration_MPN_100ml");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioEffluentConcentration_MPN_100ml)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioEffluentConcentration_MPN_100ml);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioEffluentFlow_m3_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioEffluentFlow_m3_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioEffluentFlow_m3_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioEffluentFlow_m3_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioEffluentSalinity_PSU   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioEffluentSalinity_PSU");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioEffluentSalinity_PSU)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioEffluentSalinity_PSU);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioEffluentTemperature_C   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioEffluentTemperature_C");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioEffluentTemperature_C)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioEffluentTemperature_C);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioEffluentVelocity_m_s   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioEffluentVelocity_m_s");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioEffluentVelocity_m_s)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioEffluentVelocity_m_s);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioFroudeNumber   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioFroudeNumber");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioFroudeNumber)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioFroudeNumber);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioHorizontalAngle_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioHorizontalAngle_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioHorizontalAngle_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioHorizontalAngle_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioIDAndRawResults   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioIDAndRawResults");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioIDAndRawResults)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioIDAndRawResults);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioIDAndRawResultsHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioIDAndRawResultsHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioIDAndRawResultsHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioIDAndRawResultsHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioIDAndRawResultsRawResults   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioIDAndRawResultsRawResults");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioIDAndRawResultsRawResults)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioIDAndRawResultsRawResults);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioIDAndRawResultsVPScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioIDAndRawResultsVPScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioIDAndRawResultsVPScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioIDAndRawResultsVPScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioInfrastructureTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioInfrastructureTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioInfrastructureTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioInfrastructureTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageHasErrors   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageHasErrors");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageHasErrors)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageHasErrors);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageLanguage   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageLanguage");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageLanguage)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageLanguage);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageLanguageText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageLanguageText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageLanguageText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageLanguageText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageTranslationStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageTranslationStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageTranslationStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageTranslationStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageTranslationStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageTranslationStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageTranslationStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageTranslationStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageVPScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageVPScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageVPScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageVPScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageVPScenarioLanguageID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageVPScenarioLanguageID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageVPScenarioLanguageID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageVPScenarioLanguageID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLanguageVPScenarioName   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLanguageVPScenarioName");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLanguageVPScenarioName)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLanguageVPScenarioName);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLastUpdateContactTVItemID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLastUpdateContactTVItemID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLastUpdateContactTVItemID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLastUpdateContactTVItemID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLastUpdateContactTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLastUpdateContactTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLastUpdateContactTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLastUpdateContactTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioLastUpdateDate_UTC   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioLastUpdateDate_UTC");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioLastUpdateDate_UTC)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioLastUpdateDate_UTC);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioNumberOfPorts   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioNumberOfPorts");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioNumberOfPorts)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioNumberOfPorts);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioPortDepth_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioPortDepth_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioPortDepth_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioPortDepth_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioPortDiameter_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioPortDiameter_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioPortDiameter_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioPortDiameter_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioPortElevation_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioPortElevation_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioPortElevation_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioPortElevation_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioPortSpacing_m   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioPortSpacing_m");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioPortSpacing_m)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioPortSpacing_m);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioRawResults   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioRawResults");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioRawResults)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioRawResults);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioSubsectorTVText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioSubsectorTVText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioSubsectorTVText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioSubsectorTVText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioUseAsBestEstimate   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioUseAsBestEstimate");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioUseAsBestEstimate)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioUseAsBestEstimate);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioVerticalAngle_deg   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioVerticalAngle_deg");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioVerticalAngle_deg)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioVerticalAngle_deg);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioVPScenarioID   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioVPScenarioID");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioVPScenarioID)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioVPScenarioID);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioVPScenarioStatus   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioVPScenarioStatus");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioVPScenarioStatus)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioVPScenarioStatus);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());


                    // -----------------------------------
                    // Is NOT Nullable
                    // cSSPModelsRes.VPScenarioVPScenarioStatusText   (String)
                    // -----------------------------------

                    cSSPModelsRes = null;
                    cSSPModelsRes = GetFilledRandomCSSPModelsRes("VPScenarioVPScenarioStatusText");
                    Assert.AreEqual(false, cSSPModelsResService.Add(cSSPModelsRes));
                    Assert.AreEqual(1, cSSPModelsRes.ValidationResults.Count());
                    Assert.IsTrue(cSSPModelsRes.ValidationResults.Where(c => c.ErrorMessage == string.Format(CSSPServicesRes._IsRequired, CSSPModelsRes.CSSPModelsResVPScenarioVPScenarioStatusText)).Any());
                    Assert.AreEqual(null, cSSPModelsRes.VPScenarioVPScenarioStatusText);
                    Assert.AreEqual(count, cSSPModelsResService.GetRead().Count());

                }
            }
        }
        #endregion Tests Generated CRUD and Properties

        #region Tests Generated Get With Key
        [TestMethod]
        public void CSSPModelsRes_Get_With_Key_Test()
        {
            foreach (CultureInfo culture in AllowableCulture)
            {
                ChangeCulture(culture);

                using (CSSPWebToolsDBContext dbTestDB = new CSSPWebToolsDBContext(DatabaseTypeEnum.SqlServerTestDB))
                {
                    CSSPModelsResService cSSPModelsResService = new CSSPModelsResService(LanguageRequest, dbTestDB, ContactID);
                    CSSPModelsRes cSSPModelsRes = (from c in cSSPModelsResService.GetRead() select c).FirstOrDefault();
                    Assert.IsNotNull(cSSPModelsRes);

                    CSSPModelsRes cSSPModelsResRet = cSSPModelsResService.GetCSSPModelsResWithCSSPModelsResID(cSSPModelsRes.CSSPModelsResID);
                    Assert.IsNotNull(cSSPModelsResRet.ResourceManager);
                    Assert.IsNotNull(cSSPModelsResRet.Culture);
                    Assert.IsNotNull(cSSPModelsResRet._IsRequired);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet._IsRequired));
                    Assert.IsNotNull(cSSPModelsResRet.Address);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Address));
                    Assert.IsNotNull(cSSPModelsResRet.AddressAddressID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressAddressID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressAddressTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressAddressTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressAddressTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressAddressTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressAddressType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressAddressType));
                    Assert.IsNotNull(cSSPModelsResRet.AddressAddressTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressAddressTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressCountryTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressCountryTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressCountryTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressCountryTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressGoogleAddressText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressGoogleAddressText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.AddressLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AddressMunicipalityTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressMunicipalityTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressMunicipalityTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressMunicipalityTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressParentTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressParentTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressPostalCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressPostalCode));
                    Assert.IsNotNull(cSSPModelsResRet.AddressProvinceTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressProvinceTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AddressProvinceTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressProvinceTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AddressStreetName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressStreetName));
                    Assert.IsNotNull(cSSPModelsResRet.AddressStreetNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressStreetNumber));
                    Assert.IsNotNull(cSSPModelsResRet.AddressStreetType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressStreetType));
                    Assert.IsNotNull(cSSPModelsResRet.AddressStreetTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AddressStreetTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLog);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLog));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogAppErrLogID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogAppErrLogID));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogDateTime_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogDateTime_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogLineNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogLineNumber));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogMessage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogMessage));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogSource);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogSource));
                    Assert.IsNotNull(cSSPModelsResRet.AppErrLogTag);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppErrLogTag));
                    Assert.IsNotNull(cSSPModelsResRet.AppTask);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTask));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskAppTaskCommand);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskAppTaskCommand));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskAppTaskCommandText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskAppTaskCommandText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskAppTaskID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskAppTaskID));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskAppTaskStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskAppTaskStatus));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskAppTaskStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskAppTaskStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskEndDateTime_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskEndDateTime_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskEstimatedLength_second);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskEstimatedLength_second));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageAppTaskID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageAppTaskID));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageAppTaskLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageAppTaskLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageErrorText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageErrorText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskParameter);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskParameter));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskParameterHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskParameterHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskParameterName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskParameterName));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskParameters);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskParameters));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskParameterValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskParameterValue));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskPercentCompleted);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskPercentCompleted));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskRemainingTime_second);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskRemainingTime_second));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskStartDateTime_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskStartDateTime_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskTVItem2TVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskTVItem2TVText));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskTVItemID2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskTVItemID2));
                    Assert.IsNotNull(cSSPModelsResRet.AppTaskTVItemTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.AppTaskTVItemTVText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModel);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModel));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelBoxModelID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelBoxModelID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumb);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumb));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbBoxModelResultType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbBoxModelResultType));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbBoxModelResultTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbBoxModelResultTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbCalLength_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbCalLength_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbCalRadius_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbCalRadius_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbCalSurface_m2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbCalSurface_m2));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbCalVolume_m3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbCalVolume_m3));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbCalWidth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbCalWidth_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbError));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbFixLength);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbFixLength));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbFixWidth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbFixWidth));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelCalNumbHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelCalNumbHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelConcentration_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelConcentration_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelDecayRate_per_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelDecayRate_per_day));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelDepth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelDepth_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelDilution);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelDilution));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelFCPreDisinfection_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelFCPreDisinfection_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelFCUntreated_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelFCUntreated_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelFlow_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelFlow_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelFlowDuration_hour);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelFlowDuration_hour));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelInfrastructureTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelInfrastructureTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelInfrastructureTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelInfrastructureTVText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageBoxModelID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageBoxModelID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageBoxModelLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageBoxModelLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageScenarioName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageScenarioName));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResult);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResult));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultBoxModelID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultBoxModelID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultBoxModelResultID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultBoxModelResultID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultBoxModelResultType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultBoxModelResultType));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultBoxModelResultTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultBoxModelResultTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultCircleCenterLatitude);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultCircleCenterLatitude));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultCircleCenterLongitude);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultCircleCenterLongitude));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultFixLength);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultFixLength));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultFixWidth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultFixWidth));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLeftSideDiameterLineAngle_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLeftSideDiameterLineAngle_deg));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLeftSideLineAngle_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLeftSideLineAngle_deg));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLeftSideLineStartLatitude);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLeftSideLineStartLatitude));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultLeftSideLineStartLongitude);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultLeftSideLineStartLongitude));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultRadius_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultRadius_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultRectLength_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultRectLength_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultRectWidth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultRectWidth_m));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultSurface_m2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultSurface_m2));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelResultVolume_m3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelResultVolume_m3));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelT90_hour);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelT90_hour));
                    Assert.IsNotNull(cSSPModelsResRet.BoxModelTemperature_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.BoxModelTemperature_C));
                    Assert.IsNotNull(cSSPModelsResRet.CalDecay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CalDecay));
                    Assert.IsNotNull(cSSPModelsResRet.CalDecayDecay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CalDecayDecay));
                    Assert.IsNotNull(cSSPModelsResRet.CalDecayError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CalDecayError));
                    Assert.IsNotNull(cSSPModelsResRet.CalDecayHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CalDecayHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValue));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueClimateDataValueID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueClimateDataValueID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueClimateSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueClimateSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueCoolDegDays_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueCoolDegDays_C));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueDirMaxGust_0North);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueDirMaxGust_0North));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueHeatDegDays_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueHeatDegDays_C));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueHourlyValues);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueHourlyValues));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueKeep);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueKeep));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueMaxTemp_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueMaxTemp_C));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueMinTemp_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueMinTemp_C));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueRainfall_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueRainfall_mm));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueRainfallEntered_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueRainfallEntered_mm));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueSnow_cm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueSnow_cm));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueSnowOnGround_cm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueSnowOnGround_cm));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueSpdMaxGust_kmh);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueSpdMaxGust_kmh));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueStorageDataType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueStorageDataType));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueStorageDataTypeEnumText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueStorageDataTypeEnumText));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateDataValueTotalPrecip_mm_cm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateDataValueTotalPrecip_mm_cm));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSite));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteClimateID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteClimateID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteClimateSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteClimateSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteClimateSiteName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteClimateSiteName));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteClimateSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteClimateSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteClimateSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteClimateSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteDailyEndDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteDailyEndDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteDailyNow);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteDailyNow));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteDailyStartDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteDailyStartDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteECDBID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteECDBID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteElevation_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteElevation_m));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteFile_desc);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteFile_desc));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteHourlyEndDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteHourlyEndDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteHourlyNow);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteHourlyNow));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteHourlyStartDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteHourlyStartDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteIsProvincial);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteIsProvincial));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteMonthlyEndDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteMonthlyEndDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteMonthlyNow);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteMonthlyNow));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteMonthlyStartDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteMonthlyStartDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteProvince);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteProvince));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteProvSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteProvSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteTCID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteTCID));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteTimeOffset_hour);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteTimeOffset_hour));
                    Assert.IsNotNull(cSSPModelsResRet.ClimateSiteWMOID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ClimateSiteWMOID));
                    Assert.IsNotNull(cSSPModelsResRet.Contact);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Contact));
                    Assert.IsNotNull(cSSPModelsResRet.ContactContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactContactID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactContactTitle);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactContactTitle));
                    Assert.IsNotNull(cSSPModelsResRet.ContactContactTitleText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactContactTitleText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactDisabled);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactDisabled));
                    Assert.IsNotNull(cSSPModelsResRet.ContactEmailValidated);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactEmailValidated));
                    Assert.IsNotNull(cSSPModelsResRet.ContactFirstName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactFirstName));
                    Assert.IsNotNull(cSSPModelsResRet.ContactHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContactId);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactId));
                    Assert.IsNotNull(cSSPModelsResRet.ContactInitial);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactInitial));
                    Assert.IsNotNull(cSSPModelsResRet.ContactIsAdmin);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactIsAdmin));
                    Assert.IsNotNull(cSSPModelsResRet.ContactIsNew);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactIsNew));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLastName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLastName));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLogin);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLogin));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginConfirmPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginConfirmPassword));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginContactID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginContactLoginID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginContactLoginID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginEmail));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginLoginEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginLoginEmail));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginPassword));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginPasswordHash);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginPasswordHash));
                    Assert.IsNotNull(cSSPModelsResRet.ContactLoginPasswordSalt);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactLoginPasswordSalt));
                    Assert.IsNotNull(cSSPModelsResRet.ContactOK);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactOK));
                    Assert.IsNotNull(cSSPModelsResRet.ContactOKContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactOKContactID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactOKContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactOKContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactOKError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactOKError));
                    Assert.IsNotNull(cSSPModelsResRet.ContactOKHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactOKHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContactParentTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactParentTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreference);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreference));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceContactID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceContactPreferenceID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceContactPreferenceID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceMarkerSize);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceMarkerSize));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceTVType));
                    Assert.IsNotNull(cSSPModelsResRet.ContactPreferenceTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactPreferenceTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactSamplingPlanner_ProvincesTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactSamplingPlanner_ProvincesTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactSearch);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactSearch));
                    Assert.IsNotNull(cSSPModelsResRet.ContactSearchContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactSearchContactID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactSearchContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactSearchContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactSearchFullName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactSearchFullName));
                    Assert.IsNotNull(cSSPModelsResRet.ContactSearchHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactSearchHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcut);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcut));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutContactID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutContactShortcutID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutContactShortcutID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutShortCutAddress);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutShortCutAddress));
                    Assert.IsNotNull(cSSPModelsResRet.ContactShortcutShortCutText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactShortcutShortCutText));
                    Assert.IsNotNull(cSSPModelsResRet.ContactWebName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContactWebName));
                    Assert.IsNotNull(cSSPModelsResRet.ContourPolygon);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContourPolygon));
                    Assert.IsNotNull(cSSPModelsResRet.ContourPolygonContourNodeList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContourPolygonContourNodeList));
                    Assert.IsNotNull(cSSPModelsResRet.ContourPolygonContourValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContourPolygonContourValue));
                    Assert.IsNotNull(cSSPModelsResRet.ContourPolygonDepth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContourPolygonDepth));
                    Assert.IsNotNull(cSSPModelsResRet.ContourPolygonHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContourPolygonHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ContourPolygonLayer);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ContourPolygonLayer));
                    Assert.IsNotNull(cSSPModelsResRet.Coord);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Coord));
                    Assert.IsNotNull(cSSPModelsResRet.CoordHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CoordHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.CoordLat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CoordLat));
                    Assert.IsNotNull(cSSPModelsResRet.CoordLng);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CoordLng));
                    Assert.IsNotNull(cSSPModelsResRet.CoordOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CoordOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPMPNTable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPMPNTable));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPMPNTableHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPMPNTableHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPMPNTableMPN);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPMPNTableMPN));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPMPNTableTube0_1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPMPNTableTube0_1));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPMPNTableTube1_0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPMPNTableTube1_0));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPMPNTableTube10);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPMPNTableTube10));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputApp);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputApp));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppAccessCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppAccessCode));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppActiveYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppActiveYear));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppApprovalCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppApprovalCode));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppApprovalDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppApprovalDate));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppDailyDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppDailyDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppIncludeLaboratoryQAQC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppIncludeLaboratoryQAQC));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputAppIntertechDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputAppIntertechDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParam);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParam));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamCSSPWQInputType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamCSSPWQInputType));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamCSSPWQInputTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamCSSPWQInputTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamDailyDuplicateMWQMSiteList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamDailyDuplicateMWQMSiteList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamDailyDuplicateMWQMSiteTVItemIDList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamInfrastructureList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamInfrastructureList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamInfrastructureTVItemIDList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamInfrastructureTVItemIDList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamMWQMSiteList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamMWQMSiteList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamMWQMSiteTVItemIDList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamMWQMSiteTVItemIDList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamName));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamsidList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamsidList));
                    Assert.IsNotNull(cSSPModelsResRet.CSSPWQInputParamTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.CSSPWQInputParamTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.DataPathOfTide);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DataPathOfTide));
                    Assert.IsNotNull(cSSPModelsResRet.DataPathOfTideHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DataPathOfTideHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.DataPathOfTideText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DataPathOfTideText));
                    Assert.IsNotNull(cSSPModelsResRet.DataPathOfTideWebTideDataSet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DataPathOfTideWebTideDataSet));
                    Assert.IsNotNull(cSSPModelsResRet.DataPathOfTideWebTideDataSetText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DataPathOfTideWebTideDataSetText));
                    Assert.IsNotNull(cSSPModelsResRet.DBTable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DBTable));
                    Assert.IsNotNull(cSSPModelsResRet.DBTableHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DBTableHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.DBTablePlurial);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DBTablePlurial));
                    Assert.IsNotNull(cSSPModelsResRet.DBTableTableName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DBTableTableName));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplate));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateDocTemplateID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateDocTemplateID));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateFileName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateFileName));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateTVFileTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateTVFileTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateTVType));
                    Assert.IsNotNull(cSSPModelsResRet.DocTemplateTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.DocTemplateTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.Element);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Element));
                    Assert.IsNotNull(cSSPModelsResRet.ElementHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ElementID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementID));
                    Assert.IsNotNull(cSSPModelsResRet.ElementLayer);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementLayer));
                    Assert.IsNotNull(cSSPModelsResRet.ElementLayerElement);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementLayerElement));
                    Assert.IsNotNull(cSSPModelsResRet.ElementLayerHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementLayerHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ElementLayerLayer);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementLayerLayer));
                    Assert.IsNotNull(cSSPModelsResRet.ElementLayerZMax);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementLayerZMax));
                    Assert.IsNotNull(cSSPModelsResRet.ElementLayerZMin);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementLayerZMin));
                    Assert.IsNotNull(cSSPModelsResRet.ElementNodeList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementNodeList));
                    Assert.IsNotNull(cSSPModelsResRet.ElementNumbOfNodes);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementNumbOfNodes));
                    Assert.IsNotNull(cSSPModelsResRet.ElementType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementType));
                    Assert.IsNotNull(cSSPModelsResRet.ElementValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementValue));
                    Assert.IsNotNull(cSSPModelsResRet.ElementXNode0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementXNode0));
                    Assert.IsNotNull(cSSPModelsResRet.ElementYNode0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementYNode0));
                    Assert.IsNotNull(cSSPModelsResRet.ElementZNode0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ElementZNode0));
                    Assert.IsNotNull(cSSPModelsResRet.Email);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Email));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionList));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContact);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContact));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactCMPRainfallSeasonal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactCMPRainfallSeasonal));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactCMPWastewater);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactCMPWastewater));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactEmail));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactEmailDistributionListContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactEmailDistributionListContactID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactEmailDistributionListID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactEmailDistributionListID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactEmergencyWastewater);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactEmergencyWastewater));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactEmergencyWeather);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactEmergencyWeather));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactIsCC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactIsCC));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageAgency);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageAgency));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageEmailDistributionListContactID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageEmailDistributionListContactID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageEmailDistributionListContactLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageEmailDistributionListContactLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactName));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListContactReopeningAllTypes);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListContactReopeningAllTypes));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListCountryTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListCountryTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListCountryTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListCountryTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListEmailDistributionListID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListEmailDistributionListID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageEmailDistributionListID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageEmailDistributionListID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageEmailDistributionListLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageEmailDistributionListLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageRegionName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageRegionName));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.EmailDistributionListOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailDistributionListOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.EmailEmailAddress);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailEmailAddress));
                    Assert.IsNotNull(cSSPModelsResRet.EmailEmailID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailEmailID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailEmailTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailEmailTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailEmailTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailEmailTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailEmailType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailEmailType));
                    Assert.IsNotNull(cSSPModelsResRet.EmailEmailTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailEmailTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.EmailLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.EmailLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.EmailLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.EmailLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.FileItem);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItem));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemList));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemListFileName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemListFileName));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemListHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemListHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemListText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemListText));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemName));
                    Assert.IsNotNull(cSSPModelsResRet.FileItemTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FileItemTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.FilePurposeAndText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FilePurposeAndText));
                    Assert.IsNotNull(cSSPModelsResRet.FilePurposeAndTextFilePurpose);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FilePurposeAndTextFilePurpose));
                    Assert.IsNotNull(cSSPModelsResRet.FilePurposeAndTextFilePurposeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FilePurposeAndTextFilePurposeText));
                    Assert.IsNotNull(cSSPModelsResRet.FilePurposeAndTextHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.FilePurposeAndTextHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValue));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueFlow_m3_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueFlow_m3_s));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueHourlyValues);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueHourlyValues));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueHydrometricDataValueID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueHydrometricDataValueID));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueHydrometricSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueHydrometricSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueKeep);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueKeep));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueStorageDataType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueStorageDataType));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricDataValueStorageDataTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricDataValueStorageDataTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSite));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteDescription);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteDescription));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteDrainageArea_km2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteDrainageArea_km2));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteElevation_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteElevation_m));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteEndDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteEndDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteFedSiteNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteFedSiteNumber));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteHasRatingCurve);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteHasRatingCurve));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteHydrometricSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteHydrometricSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteHydrometricSiteName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteHydrometricSiteName));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteHydrometricSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteHydrometricSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteHydrometricTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteHydrometricTVText));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteIsActive);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteIsActive));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteIsNatural);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteIsNatural));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteProvince);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteProvince));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteQuebecSiteNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteQuebecSiteNumber));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteRealTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteRealTime));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteRHBN);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteRHBN));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteSediment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteSediment));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteStartDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteStartDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.HydrometricSiteTimeOffset_hour);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.HydrometricSiteTimeOffset_hour));
                    Assert.IsNotNull(cSSPModelsResRet.Infrastructure);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Infrastructure));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureAerationType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureAerationType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureAerationTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureAerationTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureAlarmSystemType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureAlarmSystemType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureAlarmSystemTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureAlarmSystemTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureAverageDepth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureAverageDepth_m));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureAverageFlow_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureAverageFlow_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureCanOverflow);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureCanOverflow));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureCivicAddressTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureCivicAddressTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureCivicAddressTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureCivicAddressTVText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureCollectionSystemType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureCollectionSystemType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureCollectionSystemTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureCollectionSystemTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureDecayRate_per_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureDecayRate_per_day));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureDesignFlow_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureDesignFlow_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureDisinfectionType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureDisinfectionType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureDisinfectionTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureDisinfectionTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureDistanceFromShore_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureDistanceFromShore_m));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureFacilityType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureFacilityType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureFacilityTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureFacilityTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureFarFieldVelocity_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureFarFieldVelocity_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureHorizontalAngle_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureHorizontalAngle_deg));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureInfrastructureCategory);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureInfrastructureCategory));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureInfrastructureID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureInfrastructureID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureInfrastructureTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureInfrastructureTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureInfrastructureTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureInfrastructureTVText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureInfrastructureType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureInfrastructureType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureInfrastructureTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureInfrastructureTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureIsMechanicallyAerated);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureIsMechanicallyAerated));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageComment));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageInfrastructureID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageInfrastructureID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageInfrastructureLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageInfrastructureLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureLSID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureLSID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureNearFieldVelocity_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureNearFieldVelocity_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureNumberOfAeratedCells);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureNumberOfAeratedCells));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureNumberOfCells);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureNumberOfCells));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureNumberOfPorts);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureNumberOfPorts));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePeakFlow_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePeakFlow_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePercFlowOfTotal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePercFlowOfTotal));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePopServed);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePopServed));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePortDiameter_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePortDiameter_m));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePortElevation_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePortElevation_m));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePortSpacing_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePortSpacing_m));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePreliminaryTreatmentType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePreliminaryTreatmentType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePreliminaryTreatmentTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePreliminaryTreatmentTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePrimaryTreatmentType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePrimaryTreatmentType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePrimaryTreatmentTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePrimaryTreatmentTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructurePrismID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructurePrismID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureReceivingWater_MPN_per_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureReceivingWater_MPN_per_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureReceivingWaterSalinity_PSU);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureReceivingWaterSalinity_PSU));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureReceivingWaterTemperature_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureReceivingWaterTemperature_C));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureSecondaryTreatmentType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureSecondaryTreatmentType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureSecondaryTreatmentTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureSecondaryTreatmentTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureSeeOtherTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureSeeOtherTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureSeeOtherTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureSeeOtherTVText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureSite));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTempCatchAllRemoveLater);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTempCatchAllRemoveLater));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTertiaryTreatmentType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTertiaryTreatmentType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTertiaryTreatmentTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTertiaryTreatmentTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTimeOffset_hour);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTimeOffset_hour));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTPID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTPID));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTreatmentType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTreatmentType));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureTreatmentTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureTreatmentTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.InfrastructureVerticalAngle_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InfrastructureVerticalAngle_deg));
                    Assert.IsNotNull(cSSPModelsResRet.InputSummary);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InputSummary));
                    Assert.IsNotNull(cSSPModelsResRet.InputSummaryError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InputSummaryError));
                    Assert.IsNotNull(cSSPModelsResRet.InputSummaryHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InputSummaryHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.InputSummarySummary);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.InputSummarySummary));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheet));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1Measurement);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1Measurement));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementMPN);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementMPN));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementProcessedBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementProcessedBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementSalinity);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementSalinity));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementSampleType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementSampleType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementSampleTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementSampleTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementSite));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementSiteComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementSiteComment));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementTemperature);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementTemperature));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementTube0_1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementTube0_1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementTube1_0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementTube1_0));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementTube10);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementTube10));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1MeasurementTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1MeasurementTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1Sheet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1Sheet));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetApprovalDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetApprovalDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetApprovalMonth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetApprovalMonth));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetApprovalYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetApprovalYear));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetApprovedBySupervisorInitials);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetApprovedBySupervisorInitials));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath1Blank44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath1Blank44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath1Negative44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath1Negative44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath1NonTarget44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath1NonTarget44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath1Positive44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath1Positive44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath2Blank44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath2Blank44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath2Negative44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath2Negative44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath2NonTarget44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath2NonTarget44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath2Positive44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath2Positive44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath3Blank44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath3Blank44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath3Negative44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath3Negative44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath3NonTarget44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath3NonTarget44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBath3Positive44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBath3Positive44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetBlank35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetBlank35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetControlLot);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetControlLot));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetDailyDuplicateAcceptableOrUnacceptable));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetDailyDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetDailyDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetDailyDuplicateRLog);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetDailyDuplicateRLog));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetError));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncludeLaboratoryQAQC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncludeLaboratoryQAQC));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath1EndTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath1EndTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath1StartTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath1StartTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath1TimeCalculated);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath1TimeCalculated));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath2EndTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath2EndTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath2StartTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath2StartTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath2TimeCalculated);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath2TimeCalculated));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath3EndTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath3EndTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath3StartTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath3StartTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationBath3TimeCalculated);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationBath3TimeCalculated));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIncubationStartSameDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIncubationStartSameDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIntertechDuplicateAcceptableOrUnacceptable));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIntertechDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIntertechDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIntertechDuplicateRLog);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIntertechDuplicateRLog));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetIntertechReadAcceptableOrUnacceptable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetIntertechReadAcceptableOrUnacceptable));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetLabSheetA1MeasurementList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetLabSheetA1MeasurementList));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetLabSheetType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetLabSheetType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetLabSheetTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetLabSheetTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetLog);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetLog));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetLot35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetLot35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetLot44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetLot44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetNegative35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetNegative35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetNonTarget35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetNonTarget35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetPositive35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetPositive35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsReadBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsReadBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsReadDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsReadDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsReadMonth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsReadMonth));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsReadYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsReadYear));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsRecordedBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsRecordedBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsRecordedDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsRecordedDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsRecordedMonth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsRecordedMonth));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetResultsRecordedYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetResultsRecordedYear));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetRunComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetRunComment));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetRunDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetRunDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetRunMonth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetRunMonth));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetRunNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetRunNumber));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetRunWeatherComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetRunWeatherComment));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetRunYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetRunYear));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadMonth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadMonth));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSalinitiesReadYear));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSampleBottleLotNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSampleBottleLotNumber));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSampleCrewInitials);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSampleCrewInitials));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSampleType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSampleType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSampleTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSampleTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSamplingPlanType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSamplingPlanType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSamplingPlanTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSamplingPlanTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSubsectorLocation);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSubsectorLocation));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSubsectorName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSubsectorName));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCAverage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCAverage));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCField1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCField1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCField2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCField2));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCFirst);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCFirst));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCHas2Coolers);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCHas2Coolers));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCLab1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCLab1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTCLab2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTCLab2));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetTides);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetTides));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetVersion);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetVersion));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetWaterBath1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetWaterBath1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetWaterBath2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetWaterBath2));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetWaterBath3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetWaterBath3));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetA1SheetWaterBathCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetA1SheetWaterBathCount));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAcceptedOrRejectedByContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAcceptedOrRejectedByContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAcceptedOrRejectedByContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAcceptedOrRejectedByContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAcceptedOrRejectedDateTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAcceptedOrRejectedDateTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAndA1Sheet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAndA1Sheet));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAndA1SheetHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAndA1SheetHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAndA1SheetLabSheet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAndA1SheetLabSheet));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetAndA1SheetLabSheetA1Sheet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetAndA1SheetLabSheetA1Sheet));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDay));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetail));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath1Blank44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath1Blank44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath1Negative44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath1Negative44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath1NonTarget44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath1NonTarget44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath1Positive44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath1Positive44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath2Blank44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath2Blank44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath2Negative44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath2Negative44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath2NonTarget44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath2NonTarget44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath2Positive44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath2Positive44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath3Blank44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath3Blank44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath3Negative44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath3Negative44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath3NonTarget44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath3NonTarget44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBath3Positive44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBath3Positive44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailBlank35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailBlank35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailControlLot);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailControlLot));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailDailyDuplicateAcceptable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailDailyDuplicateAcceptable));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailDailyDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailDailyDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailDailyDuplicateRLog);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailDailyDuplicateRLog));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath1EndTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath1EndTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath1StartTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath1StartTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath1TimeCalculated_minutes);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath1TimeCalculated_minutes));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath2EndTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath2EndTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath2StartTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath2StartTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath2TimeCalculated_minutes);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath2TimeCalculated_minutes));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath3EndTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath3EndTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath3StartTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath3StartTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIncubationBath3TimeCalculated_minutes);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIncubationBath3TimeCalculated_minutes));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIntertechDuplicateAcceptable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIntertechDuplicateAcceptable));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIntertechDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIntertechDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIntertechDuplicateRLog);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIntertechDuplicateRLog));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailIntertechReadAcceptable);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailIntertechReadAcceptable));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLabSheetDetailID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLabSheetDetailID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLabSheetID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLabSheetID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLot35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLot35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailLot44_5);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailLot44_5));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailNegative35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailNegative35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailNonTarget35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailNonTarget35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailPositive35);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailPositive35));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailResultsReadBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailResultsReadBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailResultsReadDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailResultsReadDate));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailResultsRecordedBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailResultsRecordedBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailResultsRecordedDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailResultsRecordedDate));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailRunComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailRunComment));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailRunDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailRunDate));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailRunWeatherComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailRunWeatherComment));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSalinitiesReadBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSalinitiesReadBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSalinitiesReadDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSalinitiesReadDate));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSampleBottleLotNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSampleBottleLotNumber));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSampleCrewInitials);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSampleCrewInitials));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSamplingPlanID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSamplingPlanID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTCAverage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTCAverage));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTCField1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTCField1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTCField2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTCField2));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTCFirst);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTCFirst));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTCLab1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTCLab1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTCLab2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTCLab2));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailTides);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailTides));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailVersion);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailVersion));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailWaterBath1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailWaterBath1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailWaterBath2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailWaterBath2));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailWaterBath3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailWaterBath3));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailWaterBathCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailWaterBathCount));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetDetailWeather);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetDetailWeather));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetFileContent);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetFileContent));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetFileLastModifiedDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetFileLastModifiedDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetFileName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetFileName));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLabSheetID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLabSheetID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLabSheetStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLabSheetStatus));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLabSheetStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLabSheetStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLabSheetType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLabSheetType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLabSheetTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLabSheetTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetMonth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetMonth));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetMWQMRunTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetMWQMRunTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetMWQMRunTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetMWQMRunTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetOtherServerLabSheetID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetOtherServerLabSheetID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetRejectReason);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetRejectReason));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetRunNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetRunNumber));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSampleType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSampleType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSampleTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSampleTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSamplingPlanID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSamplingPlanID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSamplingPlanName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSamplingPlanName));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSamplingPlanType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSamplingPlanType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSamplingPlanTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSamplingPlanTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetail));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailLabSheetDetailID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailLabSheetDetailID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailLabSheetTubeMPNDetailID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailLabSheetTubeMPNDetailID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailMPN);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailMPN));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailMWQMSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailMWQMSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailMWQMSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailMWQMSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailProcessedBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailProcessedBy));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailSalinity);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailSalinity));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailSampleDateTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailSampleDateTime));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailSampleType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailSampleType));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailSampleTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailSampleTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailSiteComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailSiteComment));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailTemperature);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailTemperature));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailTube0_1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailTube0_1));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailTube1_0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailTube1_0));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetTubeMPNDetailTube10);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetTubeMPNDetailTube10));
                    Assert.IsNotNull(cSSPModelsResRet.LabSheetYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LabSheetYear));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndContact);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndContact));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndContactError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndContactError));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndContactHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndContactHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndContactLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndContactLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndContactLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndContactLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndTVTextError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndTVTextError));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndTVTextHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndTVTextHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndTVTextLastUpdateDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndTVTextLastUpdateDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndTVTextLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndTVTextLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.LastUpdateAndTVTextTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LastUpdateAndTVTextTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LatLng);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LatLng));
                    Assert.IsNotNull(cSSPModelsResRet.LatLngHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LatLngHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LatLngLat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LatLngLat));
                    Assert.IsNotNull(cSSPModelsResRet.LatLngLng);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LatLngLng));
                    Assert.IsNotNull(cSSPModelsResRet.Log);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Log));
                    Assert.IsNotNull(cSSPModelsResRet.LogHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LogID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogID));
                    Assert.IsNotNull(cSSPModelsResRet.Login);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Login));
                    Assert.IsNotNull(cSSPModelsResRet.LoginConfirmPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LoginConfirmPassword));
                    Assert.IsNotNull(cSSPModelsResRet.LogInformation);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogInformation));
                    Assert.IsNotNull(cSSPModelsResRet.LoginHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LoginHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.LoginLoginEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LoginLoginEmail));
                    Assert.IsNotNull(cSSPModelsResRet.LoginPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LoginPassword));
                    Assert.IsNotNull(cSSPModelsResRet.LogLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.LogLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.LogLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.LogLogCommand);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogLogCommand));
                    Assert.IsNotNull(cSSPModelsResRet.LogLogCommandText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogLogCommandText));
                    Assert.IsNotNull(cSSPModelsResRet.LogLogID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogLogID));
                    Assert.IsNotNull(cSSPModelsResRet.LogTableName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.LogTableName));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfo);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfo));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLatMax);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLatMax));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLatMin);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLatMin));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLngMax);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLngMax));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoLngMin);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoLngMin));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoMapInfoDrawType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoMapInfoDrawType));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoMapInfoDrawTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoMapInfoDrawTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoMapInfoID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoMapInfoID));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPoint);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPoint));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointLat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointLat));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointLng);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointLng));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointMapInfoID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointMapInfoID));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointMapInfoPointID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointMapInfoPointID));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoPointOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoPointOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoTVType));
                    Assert.IsNotNull(cSSPModelsResRet.MapInfoTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapInfoTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.MapObj);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapObj));
                    Assert.IsNotNull(cSSPModelsResRet.MapObjCoordList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapObjCoordList));
                    Assert.IsNotNull(cSSPModelsResRet.MapObjHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapObjHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MapObjMapInfoDrawType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapObjMapInfoDrawType));
                    Assert.IsNotNull(cSSPModelsResRet.MapObjMapInfoDrawTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapObjMapInfoDrawTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.MapObjMapInfoID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MapObjMapInfoID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryCondition);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryCondition));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionCode));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionFormat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionFormat));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionLength_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionLength_m));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocity));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionLevelOrVelocityText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionName));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionMikeBoundaryConditionTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionNumberOfWebTideNodes);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionNumberOfWebTideNodes));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionTVType));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionWebTideDataFromStartToEndDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionWebTideDataFromStartToEndDate));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionWebTideDataSet);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionWebTideDataSet));
                    Assert.IsNotNull(cSSPModelsResRet.MikeBoundaryConditionWebTideDataSetText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeBoundaryConditionWebTideDataSetText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenario);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenario));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioAmbientSalinity_PSU);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioAmbientSalinity_PSU));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioAmbientTemperature_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioAmbientTemperature_C));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioDecayFactor_per_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioDecayFactor_per_day));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioDecayFactorAmplitude);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioDecayFactorAmplitude));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioDecayIsConstant);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioDecayIsConstant));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioErrorInfo);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioErrorInfo));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioEstimatedHydroFileSize);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioEstimatedHydroFileSize));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioEstimatedTransFileSize);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioEstimatedTransFileSize));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioManningNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioManningNumber));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioEndDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioEndDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioExecutionTime_min);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioExecutionTime_min));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioStartExecutionDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioStartExecutionDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioMikeScenarioTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioMikeScenarioTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioNumberOfElements);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioNumberOfElements));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioNumberOfHydroOutputParameters);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioNumberOfHydroOutputParameters));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioNumberOfSigmaLayers);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioNumberOfSigmaLayers));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioNumberOfTimeSteps);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioNumberOfTimeSteps));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioNumberOfTransOutputParameters);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioNumberOfTransOutputParameters));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioNumberOfZLayers);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioNumberOfZLayers));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioParentMikeScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioParentMikeScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioResultFrequency_min);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioResultFrequency_min));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioScenarioStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioScenarioStatus));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioScenarioStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioScenarioStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioWindDirection_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioWindDirection_deg));
                    Assert.IsNotNull(cSSPModelsResRet.MikeScenarioWindSpeed_km_h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeScenarioWindSpeed_km_h));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSource);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSource));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceInclude);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceInclude));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceIsContinuous);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceIsContinuous));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceIsRiver);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceIsRiver));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceMikeSourceID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceMikeSourceID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceMikeSourceTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceMikeSourceTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceMikeSourceTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceMikeSourceTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceSourceNumberString);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceSourceNumberString));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEnd);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEnd));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndEndDateAndTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndEndDateAndTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndMikeSourceID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndMikeSourceID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndMikeSourceStartEndID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndMikeSourceStartEndID));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourceFlowEnd_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourceFlowEnd_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourceFlowStart_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourceFlowStart_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourcePollutionEnd_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourcePollutionEnd_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourcePollutionStart_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourcePollutionStart_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourceSalinityEnd_PSU);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourceSalinityEnd_PSU));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourceSalinityStart_PSU);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourceSalinityStart_PSU));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourceTemperatureEnd_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourceTemperatureEnd_C));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndSourceTemperatureStart_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndSourceTemperatureStart_C));
                    Assert.IsNotNull(cSSPModelsResRet.MikeSourceStartEndStartDateAndTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MikeSourceStartEndStartDateAndTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameter);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameter));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterAnalysisCalculationType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterAnalysisCalculationType));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterAnalysisName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterAnalysisName));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterAnalysisReportYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterAnalysisReportYear));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit24h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit24h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit48h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit48h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit72h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit72h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit96h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterDryLimit96h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterEndDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterEndDate));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterFullYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterFullYear));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterMidRangeNumberOfDays);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterMidRangeNumberOfDays));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterMWQMAnalysisReportParameterID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterMWQMAnalysisReportParameterID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterNumberOfRuns);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterNumberOfRuns));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterRunsToOmit);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterRunsToOmit));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterSalinityHighlightDeviationFromAverage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterShortRangeNumberOfDays);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterShortRangeNumberOfDays));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterStartDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterStartDate));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit24h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit24h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit48h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit48h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit72h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit72h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit96h);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMAnalysisReportParameterWetLimit96h));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPN);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPN));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNMPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNMPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNMWQMLookupMPNID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNMWQMLookupMPNID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNTubes01);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNTubes01));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNTubes1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNTubes1));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMLookupMPNTubes10);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMLookupMPNTubes10));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRun);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRun));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunAnalyzeMethod);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunAnalyzeMethod));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunAnalyzeMethodText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunAnalyzeMethodText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunEndDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunEndDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabAnalyzeBath1IncubationStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabAnalyzeBath2IncubationStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabAnalyzeBath3IncubationStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLaboratory);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLaboratory));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLaboratoryText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLaboratoryText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabReceivedDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabReceivedDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabRunSampleApprovalDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabRunSampleApprovalDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabSampleApprovalContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabSampleApprovalContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLabSampleApprovalContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLabSampleApprovalContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageMWQMRunID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageMWQMRunID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageMWQMRunLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageMWQMRunLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageRunComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageRunComment));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageRunWeatherComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageRunWeatherComment));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunComment));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunCommentText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunCommentText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunWeatherComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunWeatherComment));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunWeatherCommentText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLanguageTranslationStatusRunWeatherCommentText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunMWQMRunID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunMWQMRunID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunMWQMRunTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunMWQMRunTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunMWQMRunTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunMWQMRunTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay0_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay0_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay1_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay1_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay10_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay10_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay2_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay2_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay3_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay3_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay4_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay4_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay5_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay5_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay6_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay6_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay7_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay7_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay8_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay8_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRainDay9_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRainDay9_mm));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRemoveFromStat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRemoveFromStat));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRunNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRunNumber));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRunSampleType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRunSampleType));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunRunSampleTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunRunSampleTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSampleCrewInitials);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSampleCrewInitials));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSampleMatrix);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSampleMatrix));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSampleMatrixText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSampleMatrixText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSampleStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSampleStatus));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSampleStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSampleStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSeaStateAtEnd_BeaufortScale);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSeaStateAtEnd_BeaufortScale));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSeaStateAtEnd_BeaufortScaleText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSeaStateAtEnd_BeaufortScaleText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSeaStateAtStart_BeaufortScale);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSeaStateAtStart_BeaufortScale));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSeaStateAtStart_BeaufortScaleText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSeaStateAtStart_BeaufortScaleText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunTemperatureControl1_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunTemperatureControl1_C));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunTemperatureControl2_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunTemperatureControl2_C));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunTide_End);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunTide_End));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunTide_EndText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunTide_EndText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunTide_Start);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunTide_Start));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunTide_StartText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunTide_StartText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunWaterLevelAtBrook_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunWaterLevelAtBrook_m));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunWaveHightAtEnd_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunWaveHightAtEnd_m));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMRunWaveHightAtStart_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMRunWaveHightAtStart_m));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSample);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSample));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleDepth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleDepth_m));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleDuplicateItem);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleDuplicateItem));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleDuplicateItemDuplicateSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleDuplicateItemDuplicateSite));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleDuplicateItemHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleDuplicateItemHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleDuplicateItemParentSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleDuplicateItemParentSite));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleFecCol_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleFecCol_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageMWQMSampleID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageMWQMSampleID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageMWQMSampleLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageMWQMSampleLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageMWQMSampleNote);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageMWQMSampleNote));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleMWQMRunTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleMWQMRunTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleMWQMRunTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleMWQMRunTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleMWQMSampleID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleMWQMSampleID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleMWQMSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleMWQMSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleMWQMSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleMWQMSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSamplePH);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSamplePH));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleProcessedBy);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleProcessedBy));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleSalinity_PPT);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleSalinity_PPT));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleSampleDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleSampleDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleSampleType_old);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleSampleType_old));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleSampleType_oldText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleSampleType_oldText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleSampleTypesText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleSampleTypesText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleTube_0_1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleTube_0_1));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleTube_1_0);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleTube_1_0));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleTube_10);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleTube_10));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSampleWaterTemp_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSampleWaterTemp_C));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSite));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteDescription);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteDescription));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteLatestClassification);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteLatestClassification));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteLatestClassificationText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteLatestClassificationText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteNumber));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteMWQMSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteMWQMSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCDepth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCDepth));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCDO);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCDO));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCError));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCFC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCFC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCGeoMean);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCGeoMean));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCMaxFC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCMaxFC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCMedian);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCMedian));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCMinFC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCMinFC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCP90);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCP90));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCPercOver260);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCPercOver260));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCPercOver43);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCPercOver43));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCPH);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCPH));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCSal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCSal));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCSampCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCSampCount));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCSampleDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCSampleDate));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteSampleFCTemp);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteSampleFCTemp));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDate));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateEndDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateEndDate));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateMWQMSiteStartEndDateID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateMWQMSiteStartEndDateID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateMWQMSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateMWQMSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateMWQMSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateMWQMSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSiteStartEndDateStartDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSiteStartEndDateStartDate));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsector);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsector));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageLogBook);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageLogBook));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageMWQMSubsectorID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageMWQMSubsectorID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageMWQMSubsectorLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageMWQMSubsectorLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageSubsectorDesc);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageSubsectorDesc));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusLogBook);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusLogBook));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusLogBookText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusLogBookText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusSubsectorDesc);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusSubsectorDesc));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusSubsectorDescText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLanguageTranslationStatusSubsectorDescText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorMWQMSubsectorID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorMWQMSubsectorID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorMWQMSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorMWQMSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorSubsectorHistoricKey);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorSubsectorHistoricKey));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.MWQMSubsectorTideLocationSIDText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.MWQMSubsectorTideLocationSIDText));
                    Assert.IsNotNull(cSSPModelsResRet.NewContact);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContact));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactContactTitle);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactContactTitle));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactContactTitleText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactContactTitleText));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactFirstName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactFirstName));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactInitial);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactInitial));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactLastName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactLastName));
                    Assert.IsNotNull(cSSPModelsResRet.NewContactLoginEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NewContactLoginEmail));
                    Assert.IsNotNull(cSSPModelsResRet.Node);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Node));
                    Assert.IsNotNull(cSSPModelsResRet.NodeCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeCode));
                    Assert.IsNotNull(cSSPModelsResRet.NodeConnectNodeList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeConnectNodeList));
                    Assert.IsNotNull(cSSPModelsResRet.NodeElementList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeElementList));
                    Assert.IsNotNull(cSSPModelsResRet.NodeHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.NodeID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeID));
                    Assert.IsNotNull(cSSPModelsResRet.NodeLayer);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeLayer));
                    Assert.IsNotNull(cSSPModelsResRet.NodeLayerHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeLayerHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.NodeLayerLayer);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeLayerLayer));
                    Assert.IsNotNull(cSSPModelsResRet.NodeLayerNode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeLayerNode));
                    Assert.IsNotNull(cSSPModelsResRet.NodeLayerZ);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeLayerZ));
                    Assert.IsNotNull(cSSPModelsResRet.NodeValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeValue));
                    Assert.IsNotNull(cSSPModelsResRet.NodeX);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeX));
                    Assert.IsNotNull(cSSPModelsResRet.NodeY);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeY));
                    Assert.IsNotNull(cSSPModelsResRet.NodeZ);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.NodeZ));
                    Assert.IsNotNull(cSSPModelsResRet.OtherFilesToUpload);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.OtherFilesToUpload));
                    Assert.IsNotNull(cSSPModelsResRet.OtherFilesToUploadError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.OtherFilesToUploadError));
                    Assert.IsNotNull(cSSPModelsResRet.OtherFilesToUploadHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.OtherFilesToUploadHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.OtherFilesToUploadMikeScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.OtherFilesToUploadMikeScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.OtherFilesToUploadTVFileList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.OtherFilesToUploadTVFileList));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndIDHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndIDHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndIDID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndIDID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndIDText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceInactiveReasonEnumTextAndIDText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservation);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservation));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssue));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssueHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssueHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssueLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssueLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssueLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssueLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssueLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssueLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssueObservationInfo);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssueObservationInfo));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssueOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssueOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssuePolSourceObservationID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssuePolSourceObservationID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationIssuePolSourceObservationIssueID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationIssuePolSourceObservationIssueID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationObservation_ToBeDeleted);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationObservation_ToBeDeleted));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationObservationDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationObservationDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationPolSourceObservationID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationPolSourceObservationID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationPolSourceSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationPolSourceSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObservationPolSourceSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObservationPolSourceSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoChild);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoChild));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoChildHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoChildHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfo);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfo));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfoChildStart);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfoChildStart));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfoChildStartText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfoChildStartText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfoText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoChildPolSourceObsInfoText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoEnumTextAndID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoEnumTextAndID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoEnumTextAndIDHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoEnumTextAndIDHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoEnumTextAndIDID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoEnumTextAndIDID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceObsInfoEnumTextAndIDText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceObsInfoEnumTextAndIDText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSite));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteCivicAddressTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteCivicAddressTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteInactiveReason);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteInactiveReason));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteInactiveReasonText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteInactiveReasonText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteIsPointSource);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteIsPointSource));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteOldsiteid);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteOldsiteid));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSitePolSourceSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSitePolSourceSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSitePolSourceSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSitePolSourceSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSitePolSourceSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSitePolSourceSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteSite));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.PolSourceSiteTemp_Locator_CanDelete);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolSourceSiteTemp_Locator_CanDelete));
                    Assert.IsNotNull(cSSPModelsResRet.PolyPoint);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolyPoint));
                    Assert.IsNotNull(cSSPModelsResRet.PolyPointHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolyPointHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.PolyPointXCoord);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolyPointXCoord));
                    Assert.IsNotNull(cSSPModelsResRet.PolyPointYCoord);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolyPointYCoord));
                    Assert.IsNotNull(cSSPModelsResRet.PolyPointZ);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.PolyPointZ));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedance);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedance));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceClimateSiteTVItemIDs);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceClimateSiteTVItemIDs));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceDaysPriorToStart);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceDaysPriorToStart));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceEmailDistributionListIDs);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceEmailDistributionListIDs));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceEndDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceEndDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceProvinceTVItemIDs);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceProvinceTVItemIDs));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceRainExceedanceID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceRainExceedanceID));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceRainExtreme_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceRainExtreme_mm));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceRainMaximum_mm);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceRainMaximum_mm));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceRepeatEveryYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceRepeatEveryYear));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceStartDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceStartDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceSubsectorTVItemIDs);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceSubsectorTVItemIDs));
                    Assert.IsNotNull(cSSPModelsResRet.RainExceedanceYearRound);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RainExceedanceYearRound));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurve);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurve));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveHydrometricSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveHydrometricSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveRatingCurveID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveRatingCurveID));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveRatingCurveNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveRatingCurveNumber));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValue));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueDischargeValue_m3_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueDischargeValue_m3_s));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueRatingCurveID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueRatingCurveID));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueRatingCurveValueID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueRatingCurveValueID));
                    Assert.IsNotNull(cSSPModelsResRet.RatingCurveValueStageValue_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RatingCurveValueStageValue_m));
                    Assert.IsNotNull(cSSPModelsResRet.Register);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Register));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterConfirmPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterConfirmPassword));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterFirstName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterFirstName));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterInitial);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterInitial));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterLastName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterLastName));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterLoginEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterLoginEmail));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterPassword));
                    Assert.IsNotNull(cSSPModelsResRet.RegisterWebName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RegisterWebName));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPassword));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordCode));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordConfirmPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordConfirmPassword));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordEmail);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordEmail));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordExpireDate_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordExpireDate_Local));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordPassword);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordPassword));
                    Assert.IsNotNull(cSSPModelsResRet.ResetPasswordResetPasswordID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.ResetPasswordResetPasswordID));
                    Assert.IsNotNull(cSSPModelsResRet.RTBStringPos);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RTBStringPos));
                    Assert.IsNotNull(cSSPModelsResRet.RTBStringPosEndPos);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RTBStringPosEndPos));
                    Assert.IsNotNull(cSSPModelsResRet.RTBStringPosHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RTBStringPosHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.RTBStringPosStartPos);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RTBStringPosStartPos));
                    Assert.IsNotNull(cSSPModelsResRet.RTBStringPosTagText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RTBStringPosTagText));
                    Assert.IsNotNull(cSSPModelsResRet.RTBStringPosText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.RTBStringPosText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlan);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlan));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAccessCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAccessCode));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCount));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountLabSheetHistoryCount));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountLabSheetTransferredCount));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountSamplingPlan);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountSamplingPlan));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanAndFilesLabSheetCountTVFileSamplingPlanFileTXT));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanApprovalCode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanApprovalCode));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanCreatorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanCreatorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanCreatorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanCreatorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanDailyDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanDailyDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanForGroupName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanForGroupName));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanIncludeLaboratoryQAQC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanIncludeLaboratoryQAQC));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanIntertechDuplicatePrecisionCriteria);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanIntertechDuplicatePrecisionCriteria));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanLabSheetType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanLabSheetType));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanLabSheetTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanLabSheetTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanProvinceTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanProvinceTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanProvinceTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanProvinceTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSampleType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSampleType));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSampleTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSampleTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSamplingPlanFileTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSamplingPlanFileTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSamplingPlanFileTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSamplingPlanFileTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSamplingPlanID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSamplingPlanID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSamplingPlanName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSamplingPlanName));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSamplingPlanType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSamplingPlanType));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSamplingPlanTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSamplingPlanTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsector);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsector));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSamplingPlanID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSamplingPlanID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSamplingPlanSubsectorID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSamplingPlanSubsectorID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSite));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteIsDuplicate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteIsDuplicate));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteMWQMSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteMWQMSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteMWQMSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteMWQMSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteSamplingPlanSubsectorID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteSamplingPlanSubsectorID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSiteSamplingPlanSubsectorSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanSubsectorSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanSubsectorSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SamplingPlanYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SamplingPlanYear));
                    Assert.IsNotNull(cSSPModelsResRet.Search);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Search));
                    Assert.IsNotNull(cSSPModelsResRet.SearchHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SearchHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.Searchid);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Searchid));
                    Assert.IsNotNull(cSSPModelsResRet.SearchTagAndTerms);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SearchTagAndTerms));
                    Assert.IsNotNull(cSSPModelsResRet.SearchTagAndTermsHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SearchTagAndTermsHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SearchTagAndTermsSearchTag);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SearchTagAndTermsSearchTag));
                    Assert.IsNotNull(cSSPModelsResRet.SearchTagAndTermsSearchTagText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SearchTagAndTermsSearchTagText));
                    Assert.IsNotNull(cSSPModelsResRet.SearchTagAndTermsSearchTermList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SearchTagAndTermsSearchTermList));
                    Assert.IsNotNull(cSSPModelsResRet.Searchvalue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Searchvalue));
                    Assert.IsNotNull(cSSPModelsResRet.Spill);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Spill));
                    Assert.IsNotNull(cSSPModelsResRet.SpillAverageFlow_m3_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillAverageFlow_m3_day));
                    Assert.IsNotNull(cSSPModelsResRet.SpillEndDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillEndDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.SpillHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SpillInfrastructureTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillInfrastructureTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillInfrastructureTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillInfrastructureTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageSpillComment);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageSpillComment));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageSpillID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageSpillID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageSpillLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageSpillLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SpillLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.SpillMunicipalityTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillMunicipalityTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillMunicipalityTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillMunicipalityTVText));
                    Assert.IsNotNull(cSSPModelsResRet.SpillSpillID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillSpillID));
                    Assert.IsNotNull(cSSPModelsResRet.SpillStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SpillStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.SubsectorMWQMSampleYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SubsectorMWQMSampleYear));
                    Assert.IsNotNull(cSSPModelsResRet.SubsectorMWQMSampleYearEarliestDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SubsectorMWQMSampleYearEarliestDate));
                    Assert.IsNotNull(cSSPModelsResRet.SubsectorMWQMSampleYearHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SubsectorMWQMSampleYearHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.SubsectorMWQMSampleYearLatestDate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SubsectorMWQMSampleYearLatestDate));
                    Assert.IsNotNull(cSSPModelsResRet.SubsectorMWQMSampleYearSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SubsectorMWQMSampleYearSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.SubsectorMWQMSampleYearYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.SubsectorMWQMSampleYearYear));
                    Assert.IsNotNull(cSSPModelsResRet.Tel);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Tel));
                    Assert.IsNotNull(cSSPModelsResRet.TelHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TelLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TelLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TelLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TelTelID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelTelID));
                    Assert.IsNotNull(cSSPModelsResRet.TelTelNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelTelNumber));
                    Assert.IsNotNull(cSSPModelsResRet.TelTelTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelTelTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TelTelTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelTelTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TelTelType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelTelType));
                    Assert.IsNotNull(cSSPModelsResRet.TelTelTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TelTelTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValue);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValue));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueDepth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueDepth_m));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueKeep);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueKeep));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueStorageDataType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueStorageDataType));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueStorageDataTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueStorageDataTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideDataType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideDataType));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideDataTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideDataTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideDataValueID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideDataValueID));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideEnd);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideEnd));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideEndText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideEndText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideStart);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideStart));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueTideStartText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueTideStartText));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueUVelocity_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueUVelocity_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.TideDataValueVVelocity_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideDataValueVVelocity_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocation);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocation));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationLat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationLat));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationLng);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationLng));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationName));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationProv);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationProv));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationsid);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationsid));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationTideLocationID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationTideLocationID));
                    Assert.IsNotNull(cSSPModelsResRet.TideLocationZone);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideLocationZone));
                    Assert.IsNotNull(cSSPModelsResRet.TideSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSite));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteTideSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteTideSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteTideSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteTideSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteTideSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteTideSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteWebTideDatum_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteWebTideDatum_m));
                    Assert.IsNotNull(cSSPModelsResRet.TideSiteWebTideModel);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TideSiteWebTideModel));
                    Assert.IsNotNull(cSSPModelsResRet.TVFile);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFile));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileClientFilePath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileClientFilePath));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFileCreatedDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFileCreatedDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFileInfo);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFileInfo));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFilePurpose);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFilePurpose));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFilePurposeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFilePurposeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFileSize_kb);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFileSize_kb));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFileType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFileType));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFileTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFileTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileFromWater);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileFromWater));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageFileDescription);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageFileDescription));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageTVFileID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageTVFileID));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLanguageTVFileLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLanguageTVFileLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileServerFileName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileServerFileName));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileServerFilePath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileServerFilePath));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileTemplateTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileTemplateTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileTemplateTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileTemplateTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileTVFileID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileTVFileID));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileTVFileTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileTVFileTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVFileTVFileTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFileTVFileTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFullText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFullText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFullTextFullText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFullTextFullText));
                    Assert.IsNotNull(cSSPModelsResRet.TVFullTextHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFullTextHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVFullTextTVPath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVFullTextTVPath));
                    Assert.IsNotNull(cSSPModelsResRet.TVItem);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItem));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLink);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLink));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkFlowTo);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkFlowTo));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkInfrastructureType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkInfrastructureType));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkInfrastructureTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkSeeOtherTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkTVItem);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkTVItem));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkTVItemLinkList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemInfrastructureTypeTVItemLinkTVItemLinkList));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemIsActive);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemIsActive));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageTVItemLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageTVItemLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLanguageTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLanguageTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLink);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLink));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkEndDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkEndDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkFromTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkFromTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkFromTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkFromTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkFromTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkFromTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkFromTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkFromTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkParentTVItemLinkID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkParentTVItemLinkID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkStartDateTime_Local);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkStartDateTime_Local));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkToTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkToTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkToTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkToTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkToTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkToTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkToTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkToTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkTVItemLinkID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkTVItemLinkID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkTVLevel);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkTVLevel));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemLinkTVPath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemLinkTVPath));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemParentID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemParentID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStat);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStat));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatChildCount);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatChildCount));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatTVItemStatID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatTVItemStatID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemStatTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemStatTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemSubsectorAndMWQMSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemSubsectorAndMWQMSite));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteDuplicate));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteTVItemMWQMSiteList));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteTVItemSubsector);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemSubsectorAndMWQMSiteTVItemSubsector));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuth));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthError));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthTVAuth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthTVAuth));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthTVAuthText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthTVAuthText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthTVItemID1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthTVItemID1));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthTVItemUserAuthID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthTVItemUserAuthID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVAuthTVTypeStr);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVAuthTVTypeStr));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVLevel);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVLevel));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVPath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVPath));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorization);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorization));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVAuth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVAuth));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVAuthText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVAuthText));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVItemID1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVItemID1));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVItemID2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVItemID2));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVItemID3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVItemID3));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVItemID4);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVItemID4));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVItemUserAuthorizationID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVItemUserAuthorizationID));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVText1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVText1));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVText2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVText2));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVText3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVText3));
                    Assert.IsNotNull(cSSPModelsResRet.TVItemUserAuthorizationTVText4);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVItemUserAuthorizationTVText4));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocation);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocation));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationError);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationError));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationMapObjList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationMapObjList));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationSubTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationSubTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationSubTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationSubTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVLocationTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVLocationTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTextLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTextLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.TVTextLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTextLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVTextLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTextLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.TVTextLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTextLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTextLanguageTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTextLanguageTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeNamesAndPath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeNamesAndPath));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeNamesAndPathHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeNamesAndPathHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeNamesAndPathIndex);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeNamesAndPathIndex));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeNamesAndPathTVPath);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeNamesAndPathTVPath));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeNamesAndPathTVTypeName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeNamesAndPathTVTypeName));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorization);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorization));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationTVAuth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationTVAuth));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationTVAuthText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationTVAuthText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationTVType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationTVType));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationTVTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationTVTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.TVTypeUserAuthorizationTVTypeUserAuthorizationID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.TVTypeUserAuthorizationTVTypeUserAuthorizationID));
                    Assert.IsNotNull(cSSPModelsResRet.URLNumberOfSamples);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.URLNumberOfSamples));
                    Assert.IsNotNull(cSSPModelsResRet.URLNumberOfSamplesHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.URLNumberOfSamplesHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.URLNumberOfSamplesNumberOfSamples);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.URLNumberOfSamplesNumberOfSamples));
                    Assert.IsNotNull(cSSPModelsResRet.URLNumberOfSamplesurl);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.URLNumberOfSamplesurl));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSite);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSite));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteEndYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteEndYear));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteParam1);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteParam1));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteParam2);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteParam2));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteParam3);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteParam3));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteParam4);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteParam4));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteSiteTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteSiteTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteSiteTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteSiteTVText));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteSiteType);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteSiteType));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteSiteTypeText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteSiteTypeText));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteStartYear);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteStartYear));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteSubsectorTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteSubsectorTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteUseEquation);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteUseEquation));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteUseOfSiteID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteUseOfSiteID));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteUseWeight);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteUseWeight));
                    Assert.IsNotNull(cSSPModelsResRet.UseOfSiteWeight_perc);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.UseOfSiteWeight_perc));
                    Assert.IsNotNull(cSSPModelsResRet.Vector);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.Vector));
                    Assert.IsNotNull(cSSPModelsResRet.VectorEndNode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VectorEndNode));
                    Assert.IsNotNull(cSSPModelsResRet.VectorHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VectorHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VectorStartNode);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VectorStartNode));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbient);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbient));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientAmbientSalinity_PSU);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientAmbientSalinity_PSU));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientAmbientTemperature_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientAmbientTemperature_C));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientBackgroundConcentration_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientBackgroundConcentration_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientCurrentDirection_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientCurrentDirection_deg));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientCurrentSpeed_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientCurrentSpeed_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientFarFieldCurrentDirection_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientFarFieldCurrentDirection_deg));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientFarFieldCurrentSpeed_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientFarFieldCurrentSpeed_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientFarFieldDiffusionCoefficient);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientFarFieldDiffusionCoefficient));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientMeasurementDepth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientMeasurementDepth_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientPollutantDecayRate_per_day);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientPollutantDecayRate_per_day));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientRow);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientRow));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientVPAmbientID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientVPAmbientID));
                    Assert.IsNotNull(cSSPModelsResRet.VPAmbientVPScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPAmbientVPScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.VPFull);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPFull));
                    Assert.IsNotNull(cSSPModelsResRet.VPFullHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPFullHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPFullVPAmbientList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPFullVPAmbientList));
                    Assert.IsNotNull(cSSPModelsResRet.VPFullVPResultList);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPFullVPResultList));
                    Assert.IsNotNull(cSSPModelsResRet.VPFullVPScenario);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPFullVPScenario));
                    Assert.IsNotNull(cSSPModelsResRet.VPResult);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResult));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultConcentration_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultConcentration_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultDilution);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultDilution));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultDispersionDistance_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultDispersionDistance_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultFarFieldWidth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultFarFieldWidth_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultOrdinal);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultOrdinal));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultTravelTime_hour);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultTravelTime_hour));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultVPResultID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultVPResultID));
                    Assert.IsNotNull(cSSPModelsResRet.VPResultVPScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResultVPScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValues);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValues));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesConc);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesConc));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesDecay);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesDecay));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesDilu);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesDilu));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesDistance);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesDistance));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesFarfieldWidth);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesFarfieldWidth));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPResValuesTheTime);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPResValuesTheTime));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenario);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenario));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioAcuteMixZone_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioAcuteMixZone_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioChronicMixZone_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioChronicMixZone_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioEffluentConcentration_MPN_100ml);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioEffluentConcentration_MPN_100ml));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioEffluentFlow_m3_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioEffluentFlow_m3_s));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioEffluentSalinity_PSU);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioEffluentSalinity_PSU));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioEffluentTemperature_C);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioEffluentTemperature_C));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioEffluentVelocity_m_s);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioEffluentVelocity_m_s));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioFroudeNumber);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioFroudeNumber));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioHorizontalAngle_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioHorizontalAngle_deg));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioIDAndRawResults);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioIDAndRawResults));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioIDAndRawResultsHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioIDAndRawResultsHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioIDAndRawResultsRawResults);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioIDAndRawResultsRawResults));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioIDAndRawResultsVPScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioIDAndRawResultsVPScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioInfrastructureTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioInfrastructureTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageHasErrors);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageHasErrors));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageLanguage);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageLanguage));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageLanguageText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageLanguageText));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageTranslationStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageTranslationStatus));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageTranslationStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageTranslationStatusText));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageVPScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageVPScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageVPScenarioLanguageID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageVPScenarioLanguageID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLanguageVPScenarioName);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLanguageVPScenarioName));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLastUpdateContactTVItemID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLastUpdateContactTVItemID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLastUpdateContactTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLastUpdateContactTVText));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioLastUpdateDate_UTC);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioLastUpdateDate_UTC));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioNumberOfPorts);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioNumberOfPorts));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioPortDepth_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioPortDepth_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioPortDiameter_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioPortDiameter_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioPortElevation_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioPortElevation_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioPortSpacing_m);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioPortSpacing_m));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioRawResults);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioRawResults));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioSubsectorTVText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioSubsectorTVText));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioUseAsBestEstimate);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioUseAsBestEstimate));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioVerticalAngle_deg);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioVerticalAngle_deg));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioVPScenarioID);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioVPScenarioID));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioVPScenarioStatus);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioVPScenarioStatus));
                    Assert.IsNotNull(cSSPModelsResRet.VPScenarioVPScenarioStatusText);
                    Assert.IsFalse(string.IsNullOrWhiteSpace(cSSPModelsResRet.VPScenarioVPScenarioStatusText));
                }
            }
        }
        #endregion Tests Get With Key

    }
}
